Prog "EventOracle" ["IOExts","Prelude","System","Unsafe"] [TypeSyn ("EventOracle","Ref") Public [] (TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]),TypeSyn ("EventOracle","Cost") Public [] (TCons ("Prelude","Int") []),Type ("EventOracle","Node") Public [] [Cons ("EventOracle","Node") 3 Public [TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []],TCons ("Prelude","Int") [],TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]],Cons ("EventOracle","Marker") 0 Public [],Cons ("EventOracle","Collapsed") 0 Public []]] [Func ("EventOracle","initialize") 1 Public (FuncType (FuncType (TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]) (TCons ("Prelude","IO") [TVar 0])) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("EventOracle","finalize") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]) (FuncType (TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])))) (Rule [] (Var 0)),Func ("EventOracle","fresh") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []])) (Rule [] (Var 0)),Func ("EventOracle","replace") 2 Public (FuncType (TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]) (FuncType (TVar 0) (TVar 0))) (Rule [] (Var 0)),Func ("EventOracle","collapse") 2 Public (FuncType (TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]) (FuncType (TVar 0) (TVar 0))) (Rule [] (Var 0)),Func ("EventOracle","closeRef") 2 Public (FuncType (TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]) (FuncType (TVar 0) (TVar 0))) (Rule [] (Var 0)),Func ("EventOracle","expand") 3 Public (FuncType (TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]) (FuncType (TCons ("Prelude","[]") [TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]]) (FuncType (TVar 0) (TVar 0)))) (Rule [] (Var 0)),Func ("EventOracle","toAssocList") 4 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]) (FuncType (TCons ("Prelude","[]") [TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]]) (FuncType (TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]) (TCons ("Prelude","IO") [TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]]))))) (Rule [] (Var 0)),Func ("EventOracle","pointerToList") 2 Public (FuncType (TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]) (FuncType (TCons ("IOExts","IORef") [TCons ("EventOracle","Node") []]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Int") []]]))) (Rule [] (Var 0)),Func ("EventOracle","warning") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0))] []