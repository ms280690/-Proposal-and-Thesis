Prog "Make" ["Directory","Distribution","FileGoodies","FiniteMap","FlatCurry","IOExts","Prelude","Sort","System","Time","FlatCurryGoodies"] [TypeSyn ("Make","ModuleName") Public [] (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]),TypeSyn ("Make","Path") Public [] (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]),TypeSyn ("Make","FileName") Public [] (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]),TypeSyn ("Make","TestAct") Private [0] (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TVar 0]]))),TypeSyn ("Make","ProgAct") Private [0] (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TCons ("FlatCurry","Prog") []) (TCons ("Prelude","IO") [TVar 0])))),TypeSyn ("Make","Done") Private [0] (TCons ("IOExts","IORef") [TCons ("FiniteMap","FM") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TVar 0]]),TypeSyn ("Make","Getter") Private [0] (FuncType (TCons ("Make","Parameter") []) (TVar 0)),TypeSyn ("Make","Setter") Private [0] (FuncType (TVar 0) (FuncType (TCons ("Make","Parameter") []) (TCons ("Make","Parameter") []))),Type ("Make","Parameter") Public [] []] [Func ("Make","quiet") 1 Public (FuncType (TCons ("Make","Parameter") []) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Make","force") 1 Public (FuncType (TCons ("Make","Parameter") []) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Make","output") 1 Public (FuncType (TCons ("Make","Parameter") []) (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("Make","modulename") 1 Public (FuncType (TCons ("Make","Parameter") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Make","parseArgs") 0 Public (TCons ("Prelude","IO") [TCons ("Make","Parameter") []]) (Rule [] (Var 0)),Func ("Make","make") 0 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TVar 0]]))) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TCons ("FlatCurry","Prog") []) (TCons ("Prelude","IO") [TVar 0])))) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))))) (Rule [] (Var 0)),Func ("Make","makeWithFrontendParams") 5 Public (FuncType (TCons ("Distribution","FrontendParams") []) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TVar 0]]))) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TCons ("FlatCurry","Prog") []) (TCons ("Prelude","IO") [TVar 0])))) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])))))) (Rule [] (Var 0)),Func ("Make","obsolete") 6 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (FuncType (TCons ("Prelude","[]") [FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])]) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","IO") [TVar 0])) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TVar 0]]))))))) (Rule [] (Var 0)),Func ("Make","unless") 2 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0))] []