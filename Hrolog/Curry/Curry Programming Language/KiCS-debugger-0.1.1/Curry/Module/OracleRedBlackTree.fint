Prog "OracleRedBlackTree" ["CEventOracle","Oracle","IOExts","RedBlackTree","Prelude","OraclePrelude"] [Type ("OracleRedBlackTree","RedBlackTree") Public [0] [Cons ("OracleRedBlackTree","RedBlackTree") 4 Private [FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") [])))),FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") [])))),FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") [])))),TCons ("RedBlackTree","Tree") [TVar 0]]]] [Func ("OracleRedBlackTree","empty") 4 Public (FuncType (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))))) (FuncType (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))))) (FuncType (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))))) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("OracleRedBlackTree","RedBlackTree") [TVar 0]))))) (Rule [2,3,4,1] (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("OracleRedBlackTree","RedBlackTree") [Var 2,Var 3,Var 4,Comb ConsCall ("RedBlackTree","Empty") []]])),Func ("OracleRedBlackTree","isEmpty") 2 Public (FuncType (TCons ("OracleRedBlackTree","RedBlackTree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("Prelude","Bool") []))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_284") [Var 2,Var 1]])),Func ("OracleRedBlackTree","newTreeLike") 2 Public (FuncType (TCons ("OracleRedBlackTree","RedBlackTree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("OracleRedBlackTree","RedBlackTree") [TVar 0]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_282") [Var 2,Var 1]])),Func ("OracleRedBlackTree","lookup") 3 Public (FuncType (TVar 0) (FuncType (TCons ("OracleRedBlackTree","RedBlackTree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("Prelude","Maybe") [TVar 0])))) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_281") [Var 2,Var 3,Var 1]])),Func ("OracleRedBlackTree","lookupTree") 5 Private (FuncType (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))))) (FuncType (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))))) (FuncType (TVar 0) (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("Prelude","Maybe") [TVar 0])))))) (Rule [2,3,4,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_280") [Var 2,Var 3,Var 4,Var 5,Var 1]])),Func ("OracleRedBlackTree","update") 3 Public (FuncType (TVar 0) (FuncType (TCons ("OracleRedBlackTree","RedBlackTree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("OracleRedBlackTree","RedBlackTree") [TVar 0])))) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_276") [Var 2,Var 3,Var 1]])),Func ("OracleRedBlackTree","updateTree") 5 Private (FuncType (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))))) (FuncType (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))))) (FuncType (TVar 0) (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 0])))))) (Rule [2,3,4,5,1] (Let [(10,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 10,Comb ConsCall ("Prelude","[]") []],Let [(6,Comb FuncCall ("OracleRedBlackTree","updateTree.upd.35") [Var 4,Var 2,Var 3,Var 5,Var 1])] (Let [(11,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 10,Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude","[]") []],Let [(7,Comb FuncCall ("OracleRedBlackTree","updateTree._#selFP3#e2") [Var 6,Var 10])] (Let [(12,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 11,Comb ConsCall ("Prelude",":") [Var 12,Comb ConsCall ("Prelude","[]") []],Let [(8,Comb FuncCall ("OracleRedBlackTree","updateTree._#selFP4#l") [Var 6,Var 11])] (Let [(13,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 12,Comb ConsCall ("Prelude",":") [Var 13,Comb ConsCall ("Prelude","[]") []],Let [(9,Comb FuncCall ("OracleRedBlackTree","updateTree._#selFP5#r") [Var 6,Var 12])] (Comb FuncCall ("CEventOracle","collapse") [Var 13,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 7,Var 8,Var 9]])]))]))]))]))),Func ("OracleRedBlackTree","updateTree.upd.35") 5 Private (FuncType (TVar 183) (FuncType (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 183) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 183) (TCons ("Prelude","Bool") []))))) (FuncType (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 183) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 183) (TCons ("Prelude","Bool") []))))) (FuncType (TCons ("RedBlackTree","Tree") [TVar 183]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 183])))))) (Rule [2,3,4,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_275") [Var 2,Var 3,Var 4,Var 5,Var 1]])),Func ("OracleRedBlackTree","updateTree._#selFP3#e2") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 183]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 183))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_271") [Var 2,Var 1]])),Func ("OracleRedBlackTree","updateTree._#selFP4#l") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 183]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 183]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_270") [Var 2,Var 1]])),Func ("OracleRedBlackTree","updateTree._#selFP5#r") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 183]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 183]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_269") [Var 2,Var 1]])),Func ("OracleRedBlackTree","delete") 3 Public (FuncType (TVar 0) (FuncType (TCons ("OracleRedBlackTree","RedBlackTree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("OracleRedBlackTree","RedBlackTree") [TVar 0])))) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_268") [Var 2,Var 3,Var 1]])),Func ("OracleRedBlackTree","delete.blackenRoot.44") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 0]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_267") [Var 2,Var 1]])),Func ("OracleRedBlackTree","deleteTree") 5 Private (FuncType (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))))) (FuncType (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))))) (FuncType (TVar 0) (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 0])))))) (Rule [2,3,4,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_266") [Var 2,Var 3,Var 4,Var 5,Var 1]])),Func ("OracleRedBlackTree","deleteTree.addColor.56") 3 Private (FuncType (TCons ("RedBlackTree","Color") []) (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 0])))) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_260") [Var 3,Var 2,Var 1]])),Func ("OracleRedBlackTree","deleteTree.rightMost.56") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 0))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_257") [Var 2,Var 1]])),Func ("OracleRedBlackTree","tree2list") 2 Public (FuncType (TCons ("OracleRedBlackTree","RedBlackTree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("Prelude","[]") [TVar 0]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_255") [Var 2,Var 1]])),Func ("OracleRedBlackTree","tree2listTree") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("Prelude","[]") [TVar 0]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","tree2listTree.t2l.77") [Var 2,Comb ConsCall ("Prelude","[]") [],Var 1]])),Func ("OracleRedBlackTree","tree2listTree.t2l.77") 3 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("Prelude","[]") [TVar 0])))) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_254") [Var 3,Var 2,Var 1]])),Func ("OracleRedBlackTree","sort") 3 Public (FuncType (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))))) (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("Prelude","[]") [TVar 0])))) (Rule [2,3,1] (Let [(4,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(5,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 4,Comb ConsCall ("Prelude",":") [Var 5,Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("OracleRedBlackTree","tree2list") [Comb FuncCall ("OraclePrelude","foldr") [Comb FuncCall ("Oracle","compose") [Comb (FuncPartCall 2) ("Oracle","partCall") [],Comb (FuncPartCall 2) ("Oracle","compose") [Comb (FuncPartCall 3) ("Oracle","partFunc") []],Comb (FuncPartCall 3) ("OracleRedBlackTree","update") []],Comb FuncCall ("OracleRedBlackTree","empty") [Comb FuncCall ("Oracle","compose") [Comb (FuncPartCall 2) ("Oracle","partCall") [],Comb (FuncPartCall 2) ("Oracle","compose") [Comb (FuncPartCall 3) ("Oracle","partFunc") []],Comb (FuncPartCall 3) ("OracleRedBlackTree","sort._#lambda2") []],Comb FuncCall ("Oracle","compose") [Comb (FuncPartCall 2) ("Oracle","partCall") [],Comb (FuncPartCall 2) ("Oracle","compose") [Comb (FuncPartCall 3) ("Oracle","partFunc") []],Comb (FuncPartCall 3) ("OraclePrelude","==") []],Var 2,Var 1],Var 3,Var 4],Var 5]]))),Func ("OracleRedBlackTree","sort._#lambda2") 3 Private (FuncType (TVar 520) (FuncType (TVar 520) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("Prelude","Bool") [])))) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("Prelude","False") []])),Func ("OracleRedBlackTree","setInsertEquivalence") 3 Public (FuncType (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (FuncType (TCons ("CEventOracle","Ref") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))))) (FuncType (TCons ("OracleRedBlackTree","RedBlackTree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("OracleRedBlackTree","RedBlackTree") [TVar 0])))) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_253") [Var 2,Var 3,Var 1]])),Func ("OracleRedBlackTree","rbt") 2 Private (FuncType (TCons ("OracleRedBlackTree","RedBlackTree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 0]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_252") [Var 2,Var 1]])),Func ("OracleRedBlackTree","isBlack") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("Prelude","Bool") []))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_251") [Var 2,Var 1]])),Func ("OracleRedBlackTree","isRed") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("Prelude","Bool") []))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_250") [Var 2,Var 1]])),Func ("OracleRedBlackTree","isDoublyBlack") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("Prelude","Bool") []))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_249") [Var 2,Var 1]])),Func ("OracleRedBlackTree","element") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 0))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_248") [Var 2,Var 1]])),Func ("OracleRedBlackTree","left") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 0]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_247") [Var 2,Var 1]])),Func ("OracleRedBlackTree","right") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 0]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_246") [Var 2,Var 1]])),Func ("OracleRedBlackTree","singleBlack") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 0]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_245") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceL") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 0]))) (Rule [2,1] (Let [(4,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 4,Comb ConsCall ("Prelude","[]") []],Let [(3,Comb FuncCall ("OracleRedBlackTree","left") [Var 2,Var 1])] (Let [(5,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(6,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(7,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(8,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 4,Comb ConsCall ("Prelude",":") [Var 5,Comb ConsCall ("Prelude",":") [Var 6,Comb ConsCall ("Prelude",":") [Var 7,Comb ConsCall ("Prelude",":") [Var 8,Comb ConsCall ("Prelude","[]") []]]]],Comb FuncCall ("OracleRedBlackTree","_case_243") [Var 2,Var 3,Comb FuncCall ("OraclePrelude","&&") [Comb FuncCall ("OracleRedBlackTree","isRed") [Var 3,Var 4],Comb FuncCall ("OracleRedBlackTree","isRed") [Comb FuncCall ("OracleRedBlackTree","left") [Var 3,Var 5],Var 6],Var 7],Var 8]]))]))),Func ("OracleRedBlackTree","balanceL._#selFP7#z") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 88]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 88))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_240") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceL._#selFP8#y") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 88]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 88))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_237") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceL._#selFP9#x") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 88]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 88))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_234") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceL._#selFP10#a") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 88]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 88]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_231") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceL._#selFP11#b") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 88]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 88]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_228") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceL._#selFP12#c") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 88]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 88]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_225") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceL._#selFP13#d") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 88]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 88]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_222") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceL._#selFP15#z") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 88]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 88))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_219") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceL._#selFP16#x") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 88]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 88))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_216") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceL._#selFP17#a") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 88]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 88]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_213") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceL._#selFP18#y") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 88]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 88))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_210") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceL._#selFP19#b") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 88]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 88]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_207") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceL._#selFP20#c") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 88]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 88]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_204") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceL._#selFP21#d") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 88]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 88]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_201") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceR") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 0]))) (Rule [2,1] (Let [(4,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 4,Comb ConsCall ("Prelude","[]") []],Let [(3,Comb FuncCall ("OracleRedBlackTree","right") [Var 2,Var 1])] (Let [(5,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(6,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(7,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(8,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 4,Comb ConsCall ("Prelude",":") [Var 5,Comb ConsCall ("Prelude",":") [Var 6,Comb ConsCall ("Prelude",":") [Var 7,Comb ConsCall ("Prelude",":") [Var 8,Comb ConsCall ("Prelude","[]") []]]]],Comb FuncCall ("OracleRedBlackTree","_case_198") [Var 2,Var 3,Comb FuncCall ("OraclePrelude","&&") [Comb FuncCall ("OracleRedBlackTree","isRed") [Var 3,Var 4],Comb FuncCall ("OracleRedBlackTree","isRed") [Comb FuncCall ("OracleRedBlackTree","right") [Var 3,Var 5],Var 6],Var 7],Var 8]]))]))),Func ("OracleRedBlackTree","balanceR._#selFP23#x") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 131]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 131))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_195") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceR._#selFP24#a") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 131]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 131]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_192") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceR._#selFP25#y") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 131]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 131))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_189") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceR._#selFP26#b") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 131]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 131]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_186") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceR._#selFP27#z") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 131]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 131))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_183") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceR._#selFP28#c") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 131]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 131]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_180") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceR._#selFP29#d") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 131]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 131]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_177") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceR._#selFP31#x") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 131]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 131))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_174") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceR._#selFP32#a") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 131]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 131]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_171") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceR._#selFP33#z") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 131]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 131))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_168") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceR._#selFP34#y") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 131]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 131))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_165") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceR._#selFP35#b") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 131]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 131]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_162") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceR._#selFP36#c") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 131]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 131]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_159") [Var 2,Var 1]])),Func ("OracleRedBlackTree","balanceR._#selFP37#d") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 131]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 131]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_156") [Var 2,Var 1]])),Func ("OracleRedBlackTree","delBalanceL") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 0]))) (Rule [2,1] (Let [(3,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(4,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 3,Comb ConsCall ("Prelude",":") [Var 4,Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("OracleRedBlackTree","_case_153") [Var 2,Comb FuncCall ("OracleRedBlackTree","isDoublyBlack") [Comb FuncCall ("OracleRedBlackTree","left") [Var 2,Var 1],Var 3],Var 4]]))),Func ("OracleRedBlackTree","reviseLeft") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 0]))) (Rule [2,1] (Let [(5,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 5,Comb ConsCall ("Prelude","[]") []],Let [(3,Comb FuncCall ("OracleRedBlackTree","right") [Var 2,Var 1])] (Let [(6,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 5,Comb ConsCall ("Prelude",":") [Var 6,Comb ConsCall ("Prelude","[]") []],Let [(4,Comb FuncCall ("OracleRedBlackTree","isBlack") [Var 3,Var 5])] (Let [(7,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 6,Comb ConsCall ("Prelude",":") [Var 7,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","_case_152") [Var 2,Var 3,Var 4,Comb FuncCall ("OraclePrelude","==") [Var 3,Comb ConsCall ("RedBlackTree","Empty") [],Var 6],Var 7]]))]))]))),Func ("OracleRedBlackTree","reviseLeft._#selFP39#col") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Color") []))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_146") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP40#x") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 249))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_143") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP41#a") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 249]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_140") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP42#z") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 249))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_137") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP43#y") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 249))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_134") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP44#b") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 249]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_131") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP45#c") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 249]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_128") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP46#d") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 249]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_125") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP48#col") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Color") []))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_122") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP49#x") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 249))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_119") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP50#a") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 249]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_116") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP51#y") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 249))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_113") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP52#b") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 249]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_110") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP53#z") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 249))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_107") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP54#c") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 249]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_104") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP55#d") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 249]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_101") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP57#col") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Color") []))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_98") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP58#x") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 249))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_96") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP59#a") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 249]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_94") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP60#y") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 249))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_92") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP61#b") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 249]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_90") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP62#c") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 249]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_88") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP64#x") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 249))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_86") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP65#a") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 249]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_84") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP66#y") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 249))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_82") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP67#b") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 249]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_80") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseLeft._#selFP68#c") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 249]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 249]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_78") [Var 2,Var 1]])),Func ("OracleRedBlackTree","delBalanceR") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 0]))) (Rule [2,1] (Let [(3,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(4,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 3,Comb ConsCall ("Prelude",":") [Var 4,Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("OracleRedBlackTree","_case_76") [Var 2,Comb FuncCall ("OracleRedBlackTree","isDoublyBlack") [Comb FuncCall ("OracleRedBlackTree","right") [Var 2,Var 1],Var 3],Var 4]]))),Func ("OracleRedBlackTree","reviseRight") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 0]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 0]))) (Rule [2,1] (Let [(5,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 5,Comb ConsCall ("Prelude","[]") []],Let [(3,Comb FuncCall ("OracleRedBlackTree","left") [Var 2,Var 1])] (Let [(6,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 5,Comb ConsCall ("Prelude",":") [Var 6,Comb ConsCall ("Prelude","[]") []],Let [(4,Comb FuncCall ("OracleRedBlackTree","isBlack") [Var 3,Var 5])] (Let [(7,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 6,Comb ConsCall ("Prelude",":") [Var 7,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","_case_75") [Var 2,Var 3,Var 4,Comb FuncCall ("OraclePrelude","==") [Var 3,Comb ConsCall ("RedBlackTree","Empty") [],Var 6],Var 7]]))]))]))),Func ("OracleRedBlackTree","reviseRight._#selFP70#col") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Color") []))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_69") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP71#x") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 327))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_66") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP72#y") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 327))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_63") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP73#z") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 327))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_60") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP74#d") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 327]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_57") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP75#c") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 327]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_54") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP76#b") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 327]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_51") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP77#a") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 327]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_48") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP79#col") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Color") []))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_45") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP80#x") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 327))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_42") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP81#z") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 327))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_39") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP82#d") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 327]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_36") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP83#y") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 327))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_33") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP84#c") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 327]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_30") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP85#b") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 327]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_27") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP86#a") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 327]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_24") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP88#col") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Color") []))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_21") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP89#x") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 327))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_19") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP90#y") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 327))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_17") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP91#c") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 327]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_15") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP92#b") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 327]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_13") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP93#a") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 327]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_11") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP95#x") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 327))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_9") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP96#y") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TVar 327))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_7") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP97#c") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 327]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_5") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP98#b") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 327]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_3") [Var 2,Var 1]])),Func ("OracleRedBlackTree","reviseRight._#selFP99#a") 2 Private (FuncType (TCons ("RedBlackTree","Tree") [TVar 327]) (FuncType (TCons ("CEventOracle","Ref") []) (TCons ("RedBlackTree","Tree") [TVar 327]))) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_1") [Var 2,Var 1]])),Func ("OracleRedBlackTree","_case_1") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_0") [Var 6,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_0") 3 Private (TVar (-42)) (Rule [6,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 6])]])),Func ("OracleRedBlackTree","_case_3") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_2") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_2") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 10])]])),Func ("OracleRedBlackTree","_case_5") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_4") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_4") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 9])]])),Func ("OracleRedBlackTree","_case_7") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_6") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_6") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 8])]])),Func ("OracleRedBlackTree","_case_9") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_8") [Var 4,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_8") 3 Private (TVar (-42)) (Rule [4,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4])]])),Func ("OracleRedBlackTree","_case_11") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_10") [Var 6,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_10") 3 Private (TVar (-42)) (Rule [6,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 6])]])),Func ("OracleRedBlackTree","_case_13") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_12") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_12") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 10])]])),Func ("OracleRedBlackTree","_case_15") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_14") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_14") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 9])]])),Func ("OracleRedBlackTree","_case_17") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_16") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_16") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 8])]])),Func ("OracleRedBlackTree","_case_19") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_18") [Var 4,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_18") 3 Private (TVar (-42)) (Rule [4,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4])]])),Func ("OracleRedBlackTree","_case_21") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_20") [Var 3,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_20") 3 Private (TVar (-42)) (Rule [3,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 3])]])),Func ("OracleRedBlackTree","_case_24") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_23") [Var 6,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_23") 3 Private (TVar (-42)) (Rule [6,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_22") [Var 6,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_22") 3 Private (TVar (-42)) (Rule [6,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 6])]])),Func ("OracleRedBlackTree","_case_27") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_26") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_26") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_25") [Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_25") 2 Private (TVar (-42)) (Rule [10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 14])]])),Func ("OracleRedBlackTree","_case_30") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_29") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_29") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_28") [Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_28") 2 Private (TVar (-42)) (Rule [10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 13])]])),Func ("OracleRedBlackTree","_case_33") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_32") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_32") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_31") [Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_31") 2 Private (TVar (-42)) (Rule [10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 12])]])),Func ("OracleRedBlackTree","_case_36") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_35") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_35") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_34") [Var 9,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_34") 3 Private (TVar (-42)) (Rule [9,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 9])]])),Func ("OracleRedBlackTree","_case_39") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_38") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_38") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_37") [Var 8,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_37") 3 Private (TVar (-42)) (Rule [8,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 8])]])),Func ("OracleRedBlackTree","_case_42") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_41") [Var 4,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_41") 3 Private (TVar (-42)) (Rule [4,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_40") [Var 4,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_40") 3 Private (TVar (-42)) (Rule [4,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4])]])),Func ("OracleRedBlackTree","_case_45") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_44") [Var 3,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_44") 3 Private (TVar (-42)) (Rule [3,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_43") [Var 3,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_43") 3 Private (TVar (-42)) (Rule [3,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 3])]])),Func ("OracleRedBlackTree","_case_48") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_47") [Var 6,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_47") 3 Private (TVar (-42)) (Rule [6,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_46") [Var 6,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_46") 3 Private (TVar (-42)) (Rule [6,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 6])]])),Func ("OracleRedBlackTree","_case_51") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_50") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_50") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_49") [Var 10,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_49") 3 Private (TVar (-42)) (Rule [10,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 10])]])),Func ("OracleRedBlackTree","_case_54") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_53") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_53") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_52") [Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_52") 2 Private (TVar (-42)) (Rule [9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 14])]])),Func ("OracleRedBlackTree","_case_57") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_56") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_56") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_55") [Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_55") 2 Private (TVar (-42)) (Rule [9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 13])]])),Func ("OracleRedBlackTree","_case_60") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_59") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_59") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_58") [Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_58") 2 Private (TVar (-42)) (Rule [9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 12])]])),Func ("OracleRedBlackTree","_case_63") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_62") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_62") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_61") [Var 8,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_61") 3 Private (TVar (-42)) (Rule [8,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 8])]])),Func ("OracleRedBlackTree","_case_66") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_65") [Var 4,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_65") 3 Private (TVar (-42)) (Rule [4,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_64") [Var 4,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_64") 3 Private (TVar (-42)) (Rule [4,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4])]])),Func ("OracleRedBlackTree","_case_69") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_68") [Var 3,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_68") 3 Private (TVar (-42)) (Rule [3,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_67") [Var 3,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_67") 3 Private (TVar (-42)) (Rule [3,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 3])]])),Func ("OracleRedBlackTree","_case_75") 5 Private (TVar (-42)) (Rule [2,3,4,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 5) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 2]),Branch (Pattern ("Prelude","False") []) (Let [(6,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(7,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(8,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 6,Comb ConsCall ("Prelude",":") [Var 7,Comb ConsCall ("Prelude",":") [Var 8,Comb ConsCall ("Prelude","[]") []]]],Comb FuncCall ("OracleRedBlackTree","_case_74") [Var 2,Var 3,Var 4,Comb FuncCall ("OraclePrelude","&&") [Var 4,Comb FuncCall ("OracleRedBlackTree","isRed") [Comb FuncCall ("OracleRedBlackTree","left") [Var 3,Var 1],Var 6],Var 7],Var 8]]))]])),Func ("OracleRedBlackTree","_case_74") 5 Private (TVar (-42)) (Rule [2,3,4,14,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 14) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Let [(5,Var 2)] (Let [(15,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 15,Comb ConsCall ("Prelude","[]") []],Let [(6,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP70#col") [Var 5,Var 1])] (Let [(16,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 15,Comb ConsCall ("Prelude",":") [Var 16,Comb ConsCall ("Prelude","[]") []],Let [(7,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP71#x") [Var 5,Var 15])] (Let [(17,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 16,Comb ConsCall ("Prelude",":") [Var 17,Comb ConsCall ("Prelude","[]") []],Let [(8,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP72#y") [Var 5,Var 16])] (Let [(18,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 17,Comb ConsCall ("Prelude",":") [Var 18,Comb ConsCall ("Prelude","[]") []],Let [(9,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP73#z") [Var 5,Var 17])] (Let [(19,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 18,Comb ConsCall ("Prelude",":") [Var 19,Comb ConsCall ("Prelude","[]") []],Let [(10,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP74#d") [Var 5,Var 18])] (Let [(20,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 19,Comb ConsCall ("Prelude",":") [Var 20,Comb ConsCall ("Prelude","[]") []],Let [(11,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP75#c") [Var 5,Var 19])] (Let [(21,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 20,Comb ConsCall ("Prelude",":") [Var 21,Comb ConsCall ("Prelude","[]") []],Let [(12,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP76#b") [Var 5,Var 20])] (Let [(22,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 21,Comb ConsCall ("Prelude",":") [Var 22,Comb ConsCall ("Prelude","[]") []],Let [(13,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP77#a") [Var 5,Var 21])] (Comb FuncCall ("CEventOracle","replace") [Var 22,Comb ConsCall ("RedBlackTree","Tree") [Var 6,Var 8,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 9,Var 10,Var 11],Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 7,Var 12,Comb FuncCall ("OracleRedBlackTree","singleBlack") [Var 13,Var 22]]]])]))]))]))]))]))]))]))]))]),Branch (Pattern ("Prelude","False") []) (Let [(23,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(24,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(25,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 23,Comb ConsCall ("Prelude",":") [Var 24,Comb ConsCall ("Prelude",":") [Var 25,Comb ConsCall ("Prelude","[]") []]]],Comb FuncCall ("OracleRedBlackTree","_case_73") [Var 2,Var 3,Var 4,Comb FuncCall ("OraclePrelude","&&") [Var 4,Comb FuncCall ("OracleRedBlackTree","isRed") [Comb FuncCall ("OracleRedBlackTree","right") [Var 3,Var 1],Var 23],Var 24],Var 25]]))]])),Func ("OracleRedBlackTree","_case_73") 5 Private (TVar (-42)) (Rule [2,3,4,23,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 23) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Let [(14,Var 2)] (Let [(24,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 24,Comb ConsCall ("Prelude","[]") []],Let [(15,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP79#col") [Var 14,Var 1])] (Let [(25,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 24,Comb ConsCall ("Prelude",":") [Var 25,Comb ConsCall ("Prelude","[]") []],Let [(16,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP80#x") [Var 14,Var 24])] (Let [(26,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 25,Comb ConsCall ("Prelude",":") [Var 26,Comb ConsCall ("Prelude","[]") []],Let [(17,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP81#z") [Var 14,Var 25])] (Let [(27,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 26,Comb ConsCall ("Prelude",":") [Var 27,Comb ConsCall ("Prelude","[]") []],Let [(18,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP82#d") [Var 14,Var 26])] (Let [(28,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 27,Comb ConsCall ("Prelude",":") [Var 28,Comb ConsCall ("Prelude","[]") []],Let [(19,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP83#y") [Var 14,Var 27])] (Let [(29,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 28,Comb ConsCall ("Prelude",":") [Var 29,Comb ConsCall ("Prelude","[]") []],Let [(20,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP84#c") [Var 14,Var 28])] (Let [(30,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 29,Comb ConsCall ("Prelude",":") [Var 30,Comb ConsCall ("Prelude","[]") []],Let [(21,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP85#b") [Var 14,Var 29])] (Let [(31,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 30,Comb ConsCall ("Prelude",":") [Var 31,Comb ConsCall ("Prelude","[]") []],Let [(22,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP86#a") [Var 14,Var 30])] (Comb FuncCall ("CEventOracle","replace") [Var 31,Comb ConsCall ("RedBlackTree","Tree") [Var 15,Var 19,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 17,Var 18,Var 20],Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 16,Var 21,Comb FuncCall ("OracleRedBlackTree","singleBlack") [Var 22,Var 31]]]])]))]))]))]))]))]))]))]))]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_72") [Var 2,Var 4,Var 1]])]])),Func ("OracleRedBlackTree","_case_72") 3 Private (TVar (-42)) (Rule [2,4,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 4) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Let [(23,Var 2)] (Let [(30,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 30,Comb ConsCall ("Prelude","[]") []],Let [(24,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP88#col") [Var 23,Var 1])] (Let [(31,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 30,Comb ConsCall ("Prelude",":") [Var 31,Comb ConsCall ("Prelude","[]") []],Let [(25,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP89#x") [Var 23,Var 30])] (Let [(32,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 31,Comb ConsCall ("Prelude",":") [Var 32,Comb ConsCall ("Prelude","[]") []],Let [(26,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP90#y") [Var 23,Var 31])] (Let [(33,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 32,Comb ConsCall ("Prelude",":") [Var 33,Comb ConsCall ("Prelude","[]") []],Let [(27,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP91#c") [Var 23,Var 32])] (Let [(34,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 33,Comb ConsCall ("Prelude",":") [Var 34,Comb ConsCall ("Prelude","[]") []],Let [(28,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP92#b") [Var 23,Var 33])] (Let [(35,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 34,Comb ConsCall ("Prelude",":") [Var 35,Comb ConsCall ("Prelude","[]") []],Let [(29,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP93#a") [Var 23,Var 34])] (Let [(36,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(37,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 35,Comb ConsCall ("Prelude",":") [Var 36,Comb ConsCall ("Prelude",":") [Var 37,Comb ConsCall ("Prelude","[]") []]],Comb ConsCall ("RedBlackTree","Tree") [Comb FuncCall ("OracleRedBlackTree","_case_71") [Var 24,Comb FuncCall ("OraclePrelude","==") [Var 24,Comb ConsCall ("RedBlackTree","Red") [],Var 35],Var 36],Var 25,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Red") [],Var 26,Var 27,Var 28],Comb FuncCall ("OracleRedBlackTree","singleBlack") [Var 29,Var 37]]]))]))]))]))]))]))]))]),Branch (Pattern ("Prelude","False") []) (Let [(38,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 38,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","_case_70") [Var 2,Comb FuncCall ("OraclePrelude","otherwise") [Var 1],Var 38]]))]])),Func ("OracleRedBlackTree","_case_70") 3 Private (TVar (-42)) (Rule [2,36,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 36) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Let [(30,Var 2)] (Let [(37,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 37,Comb ConsCall ("Prelude","[]") []],Let [(31,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP95#x") [Var 30,Var 1])] (Let [(38,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 37,Comb ConsCall ("Prelude",":") [Var 38,Comb ConsCall ("Prelude","[]") []],Let [(32,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP96#y") [Var 30,Var 37])] (Let [(39,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 38,Comb ConsCall ("Prelude",":") [Var 39,Comb ConsCall ("Prelude","[]") []],Let [(33,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP97#c") [Var 30,Var 38])] (Let [(40,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 39,Comb ConsCall ("Prelude",":") [Var 40,Comb ConsCall ("Prelude","[]") []],Let [(34,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP98#b") [Var 30,Var 39])] (Let [(41,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 40,Comb ConsCall ("Prelude",":") [Var 41,Comb ConsCall ("Prelude","[]") []],Let [(35,Comb FuncCall ("OracleRedBlackTree","reviseRight._#selFP99#a") [Var 30,Var 40])] (Comb FuncCall ("CEventOracle","replace") [Var 41,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 32,Var 33,Comb FuncCall ("OracleRedBlackTree","reviseRight") [Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Red") [],Var 31,Var 34,Var 35],Var 41]]])]))]))]))]))]))]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OraclePrelude","failed") [Var 1]])]])),Func ("OracleRedBlackTree","_case_71") 3 Private (TVar (-42)) (Rule [24,25,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 25) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("RedBlackTree","Black") []]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("RedBlackTree","DoublyBlack") []])]])),Func ("OracleRedBlackTree","_case_76") 3 Private (TVar (-42)) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","reviseRight") [Var 2,Var 1]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 2])]])),Func ("OracleRedBlackTree","_case_78") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_77") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_77") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 10])]])),Func ("OracleRedBlackTree","_case_80") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_79") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_79") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 9])]])),Func ("OracleRedBlackTree","_case_82") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_81") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_81") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 8])]])),Func ("OracleRedBlackTree","_case_84") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_83") [Var 5,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_83") 3 Private (TVar (-42)) (Rule [5,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 5])]])),Func ("OracleRedBlackTree","_case_86") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_85") [Var 4,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_85") 3 Private (TVar (-42)) (Rule [4,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4])]])),Func ("OracleRedBlackTree","_case_88") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_87") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_87") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 10])]])),Func ("OracleRedBlackTree","_case_90") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_89") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_89") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 9])]])),Func ("OracleRedBlackTree","_case_92") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_91") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_91") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 8])]])),Func ("OracleRedBlackTree","_case_94") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_93") [Var 5,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_93") 3 Private (TVar (-42)) (Rule [5,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 5])]])),Func ("OracleRedBlackTree","_case_96") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_95") [Var 4,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_95") 3 Private (TVar (-42)) (Rule [4,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4])]])),Func ("OracleRedBlackTree","_case_98") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_97") [Var 3,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_97") 3 Private (TVar (-42)) (Rule [3,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 3])]])),Func ("OracleRedBlackTree","_case_101") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_100") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_100") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_99") [Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_99") 2 Private (TVar (-42)) (Rule [10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 14])]])),Func ("OracleRedBlackTree","_case_104") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_103") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_103") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_102") [Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_102") 2 Private (TVar (-42)) (Rule [10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 13])]])),Func ("OracleRedBlackTree","_case_107") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_106") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_106") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_105") [Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_105") 2 Private (TVar (-42)) (Rule [10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 12])]])),Func ("OracleRedBlackTree","_case_110") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_109") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_109") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_108") [Var 9,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_108") 3 Private (TVar (-42)) (Rule [9,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 9])]])),Func ("OracleRedBlackTree","_case_113") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_112") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_112") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_111") [Var 8,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_111") 3 Private (TVar (-42)) (Rule [8,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 8])]])),Func ("OracleRedBlackTree","_case_116") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_115") [Var 5,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_115") 3 Private (TVar (-42)) (Rule [5,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_114") [Var 5,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_114") 3 Private (TVar (-42)) (Rule [5,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 5])]])),Func ("OracleRedBlackTree","_case_119") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_118") [Var 4,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_118") 3 Private (TVar (-42)) (Rule [4,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_117") [Var 4,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_117") 3 Private (TVar (-42)) (Rule [4,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4])]])),Func ("OracleRedBlackTree","_case_122") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_121") [Var 3,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_121") 3 Private (TVar (-42)) (Rule [3,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_120") [Var 3,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_120") 3 Private (TVar (-42)) (Rule [3,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 3])]])),Func ("OracleRedBlackTree","_case_125") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_124") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_124") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_123") [Var 10,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_123") 3 Private (TVar (-42)) (Rule [10,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 10])]])),Func ("OracleRedBlackTree","_case_128") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_127") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_127") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_126") [Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_126") 2 Private (TVar (-42)) (Rule [9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 14])]])),Func ("OracleRedBlackTree","_case_131") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_130") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_130") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_129") [Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_129") 2 Private (TVar (-42)) (Rule [9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 13])]])),Func ("OracleRedBlackTree","_case_134") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_133") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_133") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_132") [Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_132") 2 Private (TVar (-42)) (Rule [9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 12])]])),Func ("OracleRedBlackTree","_case_137") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_136") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_136") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_135") [Var 8,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_135") 3 Private (TVar (-42)) (Rule [8,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 8])]])),Func ("OracleRedBlackTree","_case_140") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_139") [Var 5,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_139") 3 Private (TVar (-42)) (Rule [5,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_138") [Var 5,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_138") 3 Private (TVar (-42)) (Rule [5,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 5])]])),Func ("OracleRedBlackTree","_case_143") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_142") [Var 4,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_142") 3 Private (TVar (-42)) (Rule [4,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_141") [Var 4,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_141") 3 Private (TVar (-42)) (Rule [4,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4])]])),Func ("OracleRedBlackTree","_case_146") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_145") [Var 3,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_145") 3 Private (TVar (-42)) (Rule [3,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_144") [Var 3,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_144") 3 Private (TVar (-42)) (Rule [3,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 3])]])),Func ("OracleRedBlackTree","_case_152") 5 Private (TVar (-42)) (Rule [2,3,4,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 5) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 2]),Branch (Pattern ("Prelude","False") []) (Let [(6,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(7,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(8,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 6,Comb ConsCall ("Prelude",":") [Var 7,Comb ConsCall ("Prelude",":") [Var 8,Comb ConsCall ("Prelude","[]") []]]],Comb FuncCall ("OracleRedBlackTree","_case_151") [Var 2,Var 3,Var 4,Comb FuncCall ("OraclePrelude","&&") [Var 4,Comb FuncCall ("OracleRedBlackTree","isRed") [Comb FuncCall ("OracleRedBlackTree","left") [Var 3,Var 1],Var 6],Var 7],Var 8]]))]])),Func ("OracleRedBlackTree","_case_151") 5 Private (TVar (-42)) (Rule [2,3,4,14,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 14) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Let [(5,Var 2)] (Let [(15,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 15,Comb ConsCall ("Prelude","[]") []],Let [(6,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP39#col") [Var 5,Var 1])] (Let [(16,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 15,Comb ConsCall ("Prelude",":") [Var 16,Comb ConsCall ("Prelude","[]") []],Let [(7,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP40#x") [Var 5,Var 15])] (Let [(17,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 16,Comb ConsCall ("Prelude",":") [Var 17,Comb ConsCall ("Prelude","[]") []],Let [(8,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP41#a") [Var 5,Var 16])] (Let [(18,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 17,Comb ConsCall ("Prelude",":") [Var 18,Comb ConsCall ("Prelude","[]") []],Let [(9,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP42#z") [Var 5,Var 17])] (Let [(19,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 18,Comb ConsCall ("Prelude",":") [Var 19,Comb ConsCall ("Prelude","[]") []],Let [(10,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP43#y") [Var 5,Var 18])] (Let [(20,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 19,Comb ConsCall ("Prelude",":") [Var 20,Comb ConsCall ("Prelude","[]") []],Let [(11,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP44#b") [Var 5,Var 19])] (Let [(21,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 20,Comb ConsCall ("Prelude",":") [Var 21,Comb ConsCall ("Prelude","[]") []],Let [(12,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP45#c") [Var 5,Var 20])] (Let [(22,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 21,Comb ConsCall ("Prelude",":") [Var 22,Comb ConsCall ("Prelude","[]") []],Let [(13,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP46#d") [Var 5,Var 21])] (Comb FuncCall ("CEventOracle","replace") [Var 22,Comb ConsCall ("RedBlackTree","Tree") [Var 6,Var 10,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 7,Comb FuncCall ("OracleRedBlackTree","singleBlack") [Var 8,Var 22],Var 11],Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 9,Var 12,Var 13]]])]))]))]))]))]))]))]))]))]),Branch (Pattern ("Prelude","False") []) (Let [(23,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(24,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(25,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 23,Comb ConsCall ("Prelude",":") [Var 24,Comb ConsCall ("Prelude",":") [Var 25,Comb ConsCall ("Prelude","[]") []]]],Comb FuncCall ("OracleRedBlackTree","_case_150") [Var 2,Var 3,Var 4,Comb FuncCall ("OraclePrelude","&&") [Var 4,Comb FuncCall ("OracleRedBlackTree","isRed") [Comb FuncCall ("OracleRedBlackTree","right") [Var 3,Var 1],Var 23],Var 24],Var 25]]))]])),Func ("OracleRedBlackTree","_case_150") 5 Private (TVar (-42)) (Rule [2,3,4,23,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 23) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Let [(14,Var 2)] (Let [(24,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 24,Comb ConsCall ("Prelude","[]") []],Let [(15,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP48#col") [Var 14,Var 1])] (Let [(25,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 24,Comb ConsCall ("Prelude",":") [Var 25,Comb ConsCall ("Prelude","[]") []],Let [(16,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP49#x") [Var 14,Var 24])] (Let [(26,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 25,Comb ConsCall ("Prelude",":") [Var 26,Comb ConsCall ("Prelude","[]") []],Let [(17,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP50#a") [Var 14,Var 25])] (Let [(27,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 26,Comb ConsCall ("Prelude",":") [Var 27,Comb ConsCall ("Prelude","[]") []],Let [(18,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP51#y") [Var 14,Var 26])] (Let [(28,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 27,Comb ConsCall ("Prelude",":") [Var 28,Comb ConsCall ("Prelude","[]") []],Let [(19,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP52#b") [Var 14,Var 27])] (Let [(29,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 28,Comb ConsCall ("Prelude",":") [Var 29,Comb ConsCall ("Prelude","[]") []],Let [(20,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP53#z") [Var 14,Var 28])] (Let [(30,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 29,Comb ConsCall ("Prelude",":") [Var 30,Comb ConsCall ("Prelude","[]") []],Let [(21,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP54#c") [Var 14,Var 29])] (Let [(31,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 30,Comb ConsCall ("Prelude",":") [Var 31,Comb ConsCall ("Prelude","[]") []],Let [(22,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP55#d") [Var 14,Var 30])] (Comb FuncCall ("CEventOracle","replace") [Var 31,Comb ConsCall ("RedBlackTree","Tree") [Var 15,Var 18,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 16,Comb FuncCall ("OracleRedBlackTree","singleBlack") [Var 17,Var 31],Var 19],Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 20,Var 21,Var 22]]])]))]))]))]))]))]))]))]))]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_149") [Var 2,Var 4,Var 1]])]])),Func ("OracleRedBlackTree","_case_149") 3 Private (TVar (-42)) (Rule [2,4,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 4) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Let [(23,Var 2)] (Let [(30,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 30,Comb ConsCall ("Prelude","[]") []],Let [(24,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP57#col") [Var 23,Var 1])] (Let [(31,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 30,Comb ConsCall ("Prelude",":") [Var 31,Comb ConsCall ("Prelude","[]") []],Let [(25,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP58#x") [Var 23,Var 30])] (Let [(32,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 31,Comb ConsCall ("Prelude",":") [Var 32,Comb ConsCall ("Prelude","[]") []],Let [(26,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP59#a") [Var 23,Var 31])] (Let [(33,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 32,Comb ConsCall ("Prelude",":") [Var 33,Comb ConsCall ("Prelude","[]") []],Let [(27,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP60#y") [Var 23,Var 32])] (Let [(34,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 33,Comb ConsCall ("Prelude",":") [Var 34,Comb ConsCall ("Prelude","[]") []],Let [(28,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP61#b") [Var 23,Var 33])] (Let [(35,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 34,Comb ConsCall ("Prelude",":") [Var 35,Comb ConsCall ("Prelude","[]") []],Let [(29,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP62#c") [Var 23,Var 34])] (Let [(36,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(37,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 35,Comb ConsCall ("Prelude",":") [Var 36,Comb ConsCall ("Prelude",":") [Var 37,Comb ConsCall ("Prelude","[]") []]],Comb ConsCall ("RedBlackTree","Tree") [Comb FuncCall ("OracleRedBlackTree","_case_148") [Var 24,Comb FuncCall ("OraclePrelude","==") [Var 24,Comb ConsCall ("RedBlackTree","Red") [],Var 35],Var 36],Var 25,Comb FuncCall ("OracleRedBlackTree","singleBlack") [Var 26,Var 37],Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Red") [],Var 27,Var 28,Var 29]]]))]))]))]))]))]))]))]),Branch (Pattern ("Prelude","False") []) (Let [(38,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 38,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","_case_147") [Var 2,Comb FuncCall ("OraclePrelude","otherwise") [Var 1],Var 38]]))]])),Func ("OracleRedBlackTree","_case_147") 3 Private (TVar (-42)) (Rule [2,36,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 36) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Let [(30,Var 2)] (Let [(37,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 37,Comb ConsCall ("Prelude","[]") []],Let [(31,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP64#x") [Var 30,Var 1])] (Let [(38,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 37,Comb ConsCall ("Prelude",":") [Var 38,Comb ConsCall ("Prelude","[]") []],Let [(32,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP65#a") [Var 30,Var 37])] (Let [(39,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 38,Comb ConsCall ("Prelude",":") [Var 39,Comb ConsCall ("Prelude","[]") []],Let [(33,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP66#y") [Var 30,Var 38])] (Let [(40,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 39,Comb ConsCall ("Prelude",":") [Var 40,Comb ConsCall ("Prelude","[]") []],Let [(34,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP67#b") [Var 30,Var 39])] (Let [(41,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 40,Comb ConsCall ("Prelude",":") [Var 41,Comb ConsCall ("Prelude","[]") []],Let [(35,Comb FuncCall ("OracleRedBlackTree","reviseLeft._#selFP68#c") [Var 30,Var 40])] (Comb FuncCall ("CEventOracle","replace") [Var 41,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 33,Comb FuncCall ("OracleRedBlackTree","reviseLeft") [Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Red") [],Var 31,Var 32,Var 34],Var 41],Var 35]])]))]))]))]))]))]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OraclePrelude","failed") [Var 1]])]])),Func ("OracleRedBlackTree","_case_148") 3 Private (TVar (-42)) (Rule [24,25,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 25) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("RedBlackTree","Black") []]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("RedBlackTree","DoublyBlack") []])]])),Func ("OracleRedBlackTree","_case_153") 3 Private (TVar (-42)) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","reviseLeft") [Var 2,Var 1]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 2])]])),Func ("OracleRedBlackTree","_case_156") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_155") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_155") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_154") [Var 10,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_154") 3 Private (TVar (-42)) (Rule [10,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 10])]])),Func ("OracleRedBlackTree","_case_159") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_158") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_158") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_157") [Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_157") 2 Private (TVar (-42)) (Rule [9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 14])]])),Func ("OracleRedBlackTree","_case_162") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_161") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_161") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_160") [Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_160") 2 Private (TVar (-42)) (Rule [9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 13])]])),Func ("OracleRedBlackTree","_case_165") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_164") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_164") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_163") [Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_163") 2 Private (TVar (-42)) (Rule [9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 12])]])),Func ("OracleRedBlackTree","_case_168") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_167") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_167") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_166") [Var 8,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_166") 3 Private (TVar (-42)) (Rule [8,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 8])]])),Func ("OracleRedBlackTree","_case_171") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_170") [Var 5,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_170") 3 Private (TVar (-42)) (Rule [5,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_169") [Var 5,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_169") 3 Private (TVar (-42)) (Rule [5,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 5])]])),Func ("OracleRedBlackTree","_case_174") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_173") [Var 4,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_173") 3 Private (TVar (-42)) (Rule [4,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_172") [Var 4,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_172") 3 Private (TVar (-42)) (Rule [4,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4])]])),Func ("OracleRedBlackTree","_case_177") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_176") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_176") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_175") [Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_175") 2 Private (TVar (-42)) (Rule [10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 14])]])),Func ("OracleRedBlackTree","_case_180") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_179") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_179") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_178") [Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_178") 2 Private (TVar (-42)) (Rule [10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 13])]])),Func ("OracleRedBlackTree","_case_183") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_182") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_182") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_181") [Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_181") 2 Private (TVar (-42)) (Rule [10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 12])]])),Func ("OracleRedBlackTree","_case_186") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_185") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_185") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_184") [Var 9,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_184") 3 Private (TVar (-42)) (Rule [9,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 9])]])),Func ("OracleRedBlackTree","_case_189") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_188") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_188") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_187") [Var 8,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_187") 3 Private (TVar (-42)) (Rule [8,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 8])]])),Func ("OracleRedBlackTree","_case_192") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_191") [Var 5,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_191") 3 Private (TVar (-42)) (Rule [5,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_190") [Var 5,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_190") 3 Private (TVar (-42)) (Rule [5,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 5])]])),Func ("OracleRedBlackTree","_case_195") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_194") [Var 4,Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_194") 3 Private (TVar (-42)) (Rule [4,6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_193") [Var 4,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_193") 3 Private (TVar (-42)) (Rule [4,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4])]])),Func ("OracleRedBlackTree","_case_198") 4 Private (TVar (-42)) (Rule [2,3,12,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 12) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Let [(4,Var 2)] (Let [(13,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 13,Comb ConsCall ("Prelude","[]") []],Let [(5,Comb FuncCall ("OracleRedBlackTree","balanceR._#selFP23#x") [Var 4,Var 1])] (Let [(14,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 13,Comb ConsCall ("Prelude",":") [Var 14,Comb ConsCall ("Prelude","[]") []],Let [(6,Comb FuncCall ("OracleRedBlackTree","balanceR._#selFP24#a") [Var 4,Var 13])] (Let [(15,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 14,Comb ConsCall ("Prelude",":") [Var 15,Comb ConsCall ("Prelude","[]") []],Let [(7,Comb FuncCall ("OracleRedBlackTree","balanceR._#selFP25#y") [Var 4,Var 14])] (Let [(16,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 15,Comb ConsCall ("Prelude",":") [Var 16,Comb ConsCall ("Prelude","[]") []],Let [(8,Comb FuncCall ("OracleRedBlackTree","balanceR._#selFP26#b") [Var 4,Var 15])] (Let [(17,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 16,Comb ConsCall ("Prelude",":") [Var 17,Comb ConsCall ("Prelude","[]") []],Let [(9,Comb FuncCall ("OracleRedBlackTree","balanceR._#selFP27#z") [Var 4,Var 16])] (Let [(18,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 17,Comb ConsCall ("Prelude",":") [Var 18,Comb ConsCall ("Prelude","[]") []],Let [(10,Comb FuncCall ("OracleRedBlackTree","balanceR._#selFP28#c") [Var 4,Var 17])] (Let [(19,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 18,Comb ConsCall ("Prelude",":") [Var 19,Comb ConsCall ("Prelude","[]") []],Let [(11,Comb FuncCall ("OracleRedBlackTree","balanceR._#selFP29#d") [Var 4,Var 18])] (Comb FuncCall ("CEventOracle","collapse") [Var 19,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Red") [],Var 7,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 5,Var 6,Var 8],Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 9,Var 10,Var 11]]])]))]))]))]))]))]))]))]),Branch (Pattern ("Prelude","False") []) (Let [(20,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(21,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(22,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(23,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 20,Comb ConsCall ("Prelude",":") [Var 21,Comb ConsCall ("Prelude",":") [Var 22,Comb ConsCall ("Prelude",":") [Var 23,Comb ConsCall ("Prelude","[]") []]]]],Comb FuncCall ("OracleRedBlackTree","_case_197") [Var 2,Var 3,Comb FuncCall ("OraclePrelude","&&") [Comb FuncCall ("OracleRedBlackTree","isRed") [Var 3,Var 1],Comb FuncCall ("OracleRedBlackTree","isRed") [Comb FuncCall ("OracleRedBlackTree","left") [Var 3,Var 20],Var 21],Var 22],Var 23]]))]])),Func ("OracleRedBlackTree","_case_197") 4 Private (TVar (-42)) (Rule [2,3,20,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 20) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Let [(12,Var 2)] (Let [(21,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 21,Comb ConsCall ("Prelude","[]") []],Let [(13,Comb FuncCall ("OracleRedBlackTree","balanceR._#selFP31#x") [Var 12,Var 1])] (Let [(22,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 21,Comb ConsCall ("Prelude",":") [Var 22,Comb ConsCall ("Prelude","[]") []],Let [(14,Comb FuncCall ("OracleRedBlackTree","balanceR._#selFP32#a") [Var 12,Var 21])] (Let [(23,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 22,Comb ConsCall ("Prelude",":") [Var 23,Comb ConsCall ("Prelude","[]") []],Let [(15,Comb FuncCall ("OracleRedBlackTree","balanceR._#selFP33#z") [Var 12,Var 22])] (Let [(24,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 23,Comb ConsCall ("Prelude",":") [Var 24,Comb ConsCall ("Prelude","[]") []],Let [(16,Comb FuncCall ("OracleRedBlackTree","balanceR._#selFP34#y") [Var 12,Var 23])] (Let [(25,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 24,Comb ConsCall ("Prelude",":") [Var 25,Comb ConsCall ("Prelude","[]") []],Let [(17,Comb FuncCall ("OracleRedBlackTree","balanceR._#selFP35#b") [Var 12,Var 24])] (Let [(26,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 25,Comb ConsCall ("Prelude",":") [Var 26,Comb ConsCall ("Prelude","[]") []],Let [(18,Comb FuncCall ("OracleRedBlackTree","balanceR._#selFP36#c") [Var 12,Var 25])] (Let [(27,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 26,Comb ConsCall ("Prelude",":") [Var 27,Comb ConsCall ("Prelude","[]") []],Let [(19,Comb FuncCall ("OracleRedBlackTree","balanceR._#selFP37#d") [Var 12,Var 26])] (Comb FuncCall ("CEventOracle","collapse") [Var 27,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Red") [],Var 16,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 13,Var 14,Var 17],Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 15,Var 18,Var 19]]])]))]))]))]))]))]))]))]),Branch (Pattern ("Prelude","False") []) (Let [(28,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 28,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","_case_196") [Var 2,Comb FuncCall ("OraclePrelude","otherwise") [Var 1],Var 28]]))]])),Func ("OracleRedBlackTree","_case_196") 3 Private (TVar (-42)) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 2]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OraclePrelude","failed") [Var 1]])]])),Func ("OracleRedBlackTree","_case_201") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_200") [Var 6,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_200") 3 Private (TVar (-42)) (Rule [6,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_199") [Var 6,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_199") 3 Private (TVar (-42)) (Rule [6,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 6])]])),Func ("OracleRedBlackTree","_case_204") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_203") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_203") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_202") [Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_202") 2 Private (TVar (-42)) (Rule [10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 14])]])),Func ("OracleRedBlackTree","_case_207") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_206") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_206") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_205") [Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_205") 2 Private (TVar (-42)) (Rule [10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 13])]])),Func ("OracleRedBlackTree","_case_210") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_209") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_209") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_208") [Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_208") 2 Private (TVar (-42)) (Rule [10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 12])]])),Func ("OracleRedBlackTree","_case_213") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_212") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_212") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_211") [Var 9,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_211") 3 Private (TVar (-42)) (Rule [9,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 9])]])),Func ("OracleRedBlackTree","_case_216") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_215") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_215") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_214") [Var 8,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_214") 3 Private (TVar (-42)) (Rule [8,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 8])]])),Func ("OracleRedBlackTree","_case_219") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_218") [Var 4,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_218") 3 Private (TVar (-42)) (Rule [4,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_217") [Var 4,Var 10,Var 1]])]])),Func ("OracleRedBlackTree","_case_217") 3 Private (TVar (-42)) (Rule [4,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 10) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4])]])),Func ("OracleRedBlackTree","_case_222") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_221") [Var 6,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_221") 3 Private (TVar (-42)) (Rule [6,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_220") [Var 6,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_220") 3 Private (TVar (-42)) (Rule [6,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 6])]])),Func ("OracleRedBlackTree","_case_225") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_224") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_224") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_223") [Var 10,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_223") 3 Private (TVar (-42)) (Rule [10,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 10])]])),Func ("OracleRedBlackTree","_case_228") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_227") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_227") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_226") [Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_226") 2 Private (TVar (-42)) (Rule [9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 14])]])),Func ("OracleRedBlackTree","_case_231") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_230") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_230") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_229") [Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_229") 2 Private (TVar (-42)) (Rule [9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 13])]])),Func ("OracleRedBlackTree","_case_234") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_233") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_233") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_232") [Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_232") 2 Private (TVar (-42)) (Rule [9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 12])]])),Func ("OracleRedBlackTree","_case_237") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_236") [Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_236") 2 Private (TVar (-42)) (Rule [5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_235") [Var 8,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_235") 3 Private (TVar (-42)) (Rule [8,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 8])]])),Func ("OracleRedBlackTree","_case_240") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_239") [Var 4,Var 5,Var 1]])]])),Func ("OracleRedBlackTree","_case_239") 3 Private (TVar (-42)) (Rule [4,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_238") [Var 4,Var 9,Var 1]])]])),Func ("OracleRedBlackTree","_case_238") 3 Private (TVar (-42)) (Rule [4,9,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 9) [Branch (Pattern ("RedBlackTree","Tree") [11,12,13,14]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4])]])),Func ("OracleRedBlackTree","_case_243") 4 Private (TVar (-42)) (Rule [2,3,12,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 12) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Let [(4,Var 2)] (Let [(13,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 13,Comb ConsCall ("Prelude","[]") []],Let [(5,Comb FuncCall ("OracleRedBlackTree","balanceL._#selFP7#z") [Var 4,Var 1])] (Let [(14,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 13,Comb ConsCall ("Prelude",":") [Var 14,Comb ConsCall ("Prelude","[]") []],Let [(6,Comb FuncCall ("OracleRedBlackTree","balanceL._#selFP8#y") [Var 4,Var 13])] (Let [(15,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 14,Comb ConsCall ("Prelude",":") [Var 15,Comb ConsCall ("Prelude","[]") []],Let [(7,Comb FuncCall ("OracleRedBlackTree","balanceL._#selFP9#x") [Var 4,Var 14])] (Let [(16,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 15,Comb ConsCall ("Prelude",":") [Var 16,Comb ConsCall ("Prelude","[]") []],Let [(8,Comb FuncCall ("OracleRedBlackTree","balanceL._#selFP10#a") [Var 4,Var 15])] (Let [(17,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 16,Comb ConsCall ("Prelude",":") [Var 17,Comb ConsCall ("Prelude","[]") []],Let [(9,Comb FuncCall ("OracleRedBlackTree","balanceL._#selFP11#b") [Var 4,Var 16])] (Let [(18,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 17,Comb ConsCall ("Prelude",":") [Var 18,Comb ConsCall ("Prelude","[]") []],Let [(10,Comb FuncCall ("OracleRedBlackTree","balanceL._#selFP12#c") [Var 4,Var 17])] (Let [(19,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 18,Comb ConsCall ("Prelude",":") [Var 19,Comb ConsCall ("Prelude","[]") []],Let [(11,Comb FuncCall ("OracleRedBlackTree","balanceL._#selFP13#d") [Var 4,Var 18])] (Comb FuncCall ("CEventOracle","collapse") [Var 19,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Red") [],Var 6,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 7,Var 8,Var 9],Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 5,Var 10,Var 11]]])]))]))]))]))]))]))]))]),Branch (Pattern ("Prelude","False") []) (Let [(20,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(21,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(22,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(23,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 20,Comb ConsCall ("Prelude",":") [Var 21,Comb ConsCall ("Prelude",":") [Var 22,Comb ConsCall ("Prelude",":") [Var 23,Comb ConsCall ("Prelude","[]") []]]]],Comb FuncCall ("OracleRedBlackTree","_case_242") [Var 2,Var 3,Comb FuncCall ("OraclePrelude","&&") [Comb FuncCall ("OracleRedBlackTree","isRed") [Var 3,Var 1],Comb FuncCall ("OracleRedBlackTree","isRed") [Comb FuncCall ("OracleRedBlackTree","right") [Var 3,Var 20],Var 21],Var 22],Var 23]]))]])),Func ("OracleRedBlackTree","_case_242") 4 Private (TVar (-42)) (Rule [2,3,20,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 20) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Let [(12,Var 2)] (Let [(21,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 21,Comb ConsCall ("Prelude","[]") []],Let [(13,Comb FuncCall ("OracleRedBlackTree","balanceL._#selFP15#z") [Var 12,Var 1])] (Let [(22,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 21,Comb ConsCall ("Prelude",":") [Var 22,Comb ConsCall ("Prelude","[]") []],Let [(14,Comb FuncCall ("OracleRedBlackTree","balanceL._#selFP16#x") [Var 12,Var 21])] (Let [(23,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 22,Comb ConsCall ("Prelude",":") [Var 23,Comb ConsCall ("Prelude","[]") []],Let [(15,Comb FuncCall ("OracleRedBlackTree","balanceL._#selFP17#a") [Var 12,Var 22])] (Let [(24,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 23,Comb ConsCall ("Prelude",":") [Var 24,Comb ConsCall ("Prelude","[]") []],Let [(16,Comb FuncCall ("OracleRedBlackTree","balanceL._#selFP18#y") [Var 12,Var 23])] (Let [(25,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 24,Comb ConsCall ("Prelude",":") [Var 25,Comb ConsCall ("Prelude","[]") []],Let [(17,Comb FuncCall ("OracleRedBlackTree","balanceL._#selFP19#b") [Var 12,Var 24])] (Let [(26,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 25,Comb ConsCall ("Prelude",":") [Var 26,Comb ConsCall ("Prelude","[]") []],Let [(18,Comb FuncCall ("OracleRedBlackTree","balanceL._#selFP20#c") [Var 12,Var 25])] (Let [(27,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 26,Comb ConsCall ("Prelude",":") [Var 27,Comb ConsCall ("Prelude","[]") []],Let [(19,Comb FuncCall ("OracleRedBlackTree","balanceL._#selFP21#d") [Var 12,Var 26])] (Comb FuncCall ("CEventOracle","collapse") [Var 27,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Red") [],Var 16,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 14,Var 15,Var 17],Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 13,Var 18,Var 19]]])]))]))]))]))]))]))]))]),Branch (Pattern ("Prelude","False") []) (Let [(28,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 28,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","_case_241") [Var 2,Comb FuncCall ("OraclePrelude","otherwise") [Var 1],Var 28]]))]])),Func ("OracleRedBlackTree","_case_241") 3 Private (TVar (-42)) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 2]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OraclePrelude","failed") [Var 1]])]])),Func ("OracleRedBlackTree","_case_245") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Empty") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("RedBlackTree","Empty") []]),Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_244") [Var 4,Var 5,Var 6,Var 3,Var 1]])]])),Func ("OracleRedBlackTree","_case_244") 5 Private (TVar (-42)) (Rule [4,5,6,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 3) [Branch (Pattern ("RedBlackTree","DoublyBlack") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 4,Var 5,Var 6]])]])),Func ("OracleRedBlackTree","_case_246") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 6])]])),Func ("OracleRedBlackTree","_case_247") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 5])]])),Func ("OracleRedBlackTree","_case_248") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4])]])),Func ("OracleRedBlackTree","_case_249") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Empty") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("Prelude","True") []]),Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OraclePrelude","==") [Var 3,Comb ConsCall ("RedBlackTree","DoublyBlack") [],Var 1]])]])),Func ("OracleRedBlackTree","_case_250") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Empty") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("Prelude","False") []]),Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OraclePrelude","==") [Var 3,Comb ConsCall ("RedBlackTree","Red") [],Var 1]])]])),Func ("OracleRedBlackTree","_case_251") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Empty") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("Prelude","True") []]),Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OraclePrelude","==") [Var 3,Comb ConsCall ("RedBlackTree","Black") [],Var 1]])]])),Func ("OracleRedBlackTree","_case_252") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("OracleRedBlackTree","RedBlackTree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 6])]])),Func ("OracleRedBlackTree","_case_253") 3 Private (TVar (-42)) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 3) [Branch (Pattern ("OracleRedBlackTree","RedBlackTree") [4,5,6,7]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("OracleRedBlackTree","RedBlackTree") [Var 2,Var 5,Var 6,Var 7]])]])),Func ("OracleRedBlackTree","_case_254") 3 Private (TVar (-42)) (Rule [3,2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Empty") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 3]),Branch (Pattern ("RedBlackTree","Tree") [4,5,6,7]) (Let [(8,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 8,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","tree2listTree.t2l.77") [Var 6,Comb ConsCall ("Prelude",":") [Var 5,Comb FuncCall ("OracleRedBlackTree","tree2listTree.t2l.77") [Var 7,Var 3,Var 1]],Var 8]]))]])),Func ("OracleRedBlackTree","_case_255") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("OracleRedBlackTree","RedBlackTree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","tree2listTree") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_257") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Let [(7,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 7,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","_case_256") [Var 4,Var 6,Comb FuncCall ("OraclePrelude","==") [Var 6,Comb ConsCall ("RedBlackTree","Empty") [],Var 1],Var 7]]))]])),Func ("OracleRedBlackTree","_case_256") 4 Private (TVar (-42)) (Rule [4,6,7,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 7) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","deleteTree.rightMost.56") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_260") 3 Private (TVar (-42)) (Rule [3,2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Red") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 3]),Branch (Pattern ("RedBlackTree","Black") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_259") [Var 3,Var 1]])]])),Func ("OracleRedBlackTree","_case_259") 2 Private (TVar (-42)) (Rule [3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 3) [Branch (Pattern ("RedBlackTree","Empty") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("RedBlackTree","Empty") []]),Branch (Pattern ("RedBlackTree","Tree") [4,5,6,7]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_258") [Var 5,Var 6,Var 7,Var 4,Var 1]])]])),Func ("OracleRedBlackTree","_case_258") 5 Private (TVar (-42)) (Rule [5,6,7,4,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 4) [Branch (Pattern ("RedBlackTree","Red") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 5,Var 6,Var 7]]),Branch (Pattern ("RedBlackTree","Black") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","DoublyBlack") [],Var 5,Var 6,Var 7]])]])),Func ("OracleRedBlackTree","_case_266") 5 Private (TVar (-42)) (Rule [2,3,4,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Empty") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("RedBlackTree","Empty") []]),Branch (Pattern ("RedBlackTree","Tree") [6,7,8,9]) (Let [(10,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(11,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 10,Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("OracleRedBlackTree","_case_265") [Var 2,Var 3,Var 4,Var 6,Var 7,Var 8,Var 9,Comb FuncCall ("Oracle","apply") [Comb FuncCall ("Oracle","apply") [Var 2,Var 4,Var 1],Var 7,Var 10],Var 11]]))]])),Func ("OracleRedBlackTree","_case_265") 9 Private (TVar (-42)) (Rule [2,3,4,6,7,8,9,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 10) [Branch (Pattern ("Prelude","True") []) (Let [(11,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","_case_264") [Var 2,Var 3,Var 6,Var 8,Var 9,Comb FuncCall ("OraclePrelude","==") [Var 8,Comb ConsCall ("RedBlackTree","Empty") [],Var 1],Var 11]])),Branch (Pattern ("Prelude","False") []) (Let [(12,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(13,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 12,Comb ConsCall ("Prelude",":") [Var 13,Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("OracleRedBlackTree","_case_262") [Var 2,Var 3,Var 4,Var 6,Var 7,Var 8,Var 9,Comb FuncCall ("Oracle","apply") [Comb FuncCall ("Oracle","apply") [Var 3,Var 4,Var 1],Var 7,Var 12],Var 13]]))]])),Func ("OracleRedBlackTree","_case_262") 9 Private (TVar (-42)) (Rule [2,3,4,6,7,8,9,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 10) [Branch (Pattern ("Prelude","True") []) (Let [(11,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","delBalanceL") [Comb ConsCall ("RedBlackTree","Tree") [Var 6,Var 7,Comb FuncCall ("OracleRedBlackTree","deleteTree") [Var 2,Var 3,Var 4,Var 8,Var 1],Var 9],Var 11]])),Branch (Pattern ("Prelude","False") []) (Let [(12,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 12,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","_case_261") [Var 2,Var 3,Var 4,Var 6,Var 7,Var 8,Var 9,Comb FuncCall ("OraclePrelude","otherwise") [Var 1],Var 12]]))]])),Func ("OracleRedBlackTree","_case_261") 9 Private (TVar (-42)) (Rule [2,3,4,6,7,8,9,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 10) [Branch (Pattern ("Prelude","True") []) (Let [(11,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","delBalanceR") [Comb ConsCall ("RedBlackTree","Tree") [Var 6,Var 7,Var 8,Comb FuncCall ("OracleRedBlackTree","deleteTree") [Var 2,Var 3,Var 4,Var 9,Var 1]],Var 11]])),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OraclePrelude","failed") [Var 1]])]])),Func ("OracleRedBlackTree","_case_264") 7 Private (TVar (-42)) (Rule [2,3,6,8,9,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 10) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","deleteTree.addColor.56") [Var 6,Var 9,Var 1]]),Branch (Pattern ("Prelude","False") []) (Let [(11,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","_case_263") [Var 2,Var 3,Var 6,Var 8,Var 9,Comb FuncCall ("OraclePrelude","==") [Var 9,Comb ConsCall ("RedBlackTree","Empty") [],Var 1],Var 11]]))]])),Func ("OracleRedBlackTree","_case_263") 7 Private (TVar (-42)) (Rule [2,3,6,8,9,11,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 11) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","deleteTree.addColor.56") [Var 6,Var 8,Var 1]]),Branch (Pattern ("Prelude","False") []) (Let [(12,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 12,Comb ConsCall ("Prelude","[]") []],Let [(10,Comb FuncCall ("OracleRedBlackTree","deleteTree.rightMost.56") [Var 8,Var 1])] (Let [(13,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 12,Comb ConsCall ("Prelude",":") [Var 13,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","delBalanceL") [Comb ConsCall ("RedBlackTree","Tree") [Var 6,Var 10,Comb FuncCall ("OracleRedBlackTree","deleteTree") [Var 2,Var 3,Var 10,Var 8,Var 12],Var 9],Var 13]]))]))]])),Func ("OracleRedBlackTree","_case_267") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Empty") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("RedBlackTree","Empty") []]),Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Black") [],Var 4,Var 5,Var 6]])]])),Func ("OracleRedBlackTree","_case_268") 3 Private (TVar (-42)) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 3) [Branch (Pattern ("OracleRedBlackTree","RedBlackTree") [4,5,6,7]) (Let [(8,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 8,Comb ConsCall ("Prelude","[]") []],Comb ConsCall ("OracleRedBlackTree","RedBlackTree") [Var 4,Var 5,Var 6,Comb FuncCall ("OracleRedBlackTree","delete.blackenRoot.44") [Comb FuncCall ("OracleRedBlackTree","deleteTree") [Var 5,Var 6,Var 2,Var 7,Var 1],Var 8]]]))]])),Func ("OracleRedBlackTree","_case_269") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 6])]])),Func ("OracleRedBlackTree","_case_270") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 5])]])),Func ("OracleRedBlackTree","_case_271") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("RedBlackTree","Tree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Var 4])]])),Func ("OracleRedBlackTree","_case_275") 5 Private (TVar (-42)) (Rule [2,3,4,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Empty") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("RedBlackTree","Tree") [Comb ConsCall ("RedBlackTree","Red") [],Var 2,Comb ConsCall ("RedBlackTree","Empty") [],Comb ConsCall ("RedBlackTree","Empty") []]]),Branch (Pattern ("RedBlackTree","Tree") [6,7,8,9]) (Let [(10,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(11,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 10,Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("OracleRedBlackTree","_case_274") [Var 2,Var 3,Var 4,Var 6,Var 7,Var 8,Var 9,Comb FuncCall ("Oracle","apply") [Comb FuncCall ("Oracle","apply") [Var 3,Var 2,Var 1],Var 7,Var 10],Var 11]]))]])),Func ("OracleRedBlackTree","_case_274") 9 Private (TVar (-42)) (Rule [2,3,4,6,7,8,9,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 10) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("RedBlackTree","Tree") [Var 6,Var 2,Var 8,Var 9]]),Branch (Pattern ("Prelude","False") []) (Let [(11,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(12,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude",":") [Var 12,Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("OracleRedBlackTree","_case_273") [Var 2,Var 3,Var 4,Var 6,Var 7,Var 8,Var 9,Comb FuncCall ("Oracle","apply") [Comb FuncCall ("Oracle","apply") [Var 4,Var 2,Var 1],Var 7,Var 11],Var 12]]))]])),Func ("OracleRedBlackTree","_case_273") 9 Private (TVar (-42)) (Rule [2,3,4,6,7,8,9,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 10) [Branch (Pattern ("Prelude","True") []) (Let [(11,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","balanceL") [Comb ConsCall ("RedBlackTree","Tree") [Var 6,Var 7,Comb FuncCall ("OracleRedBlackTree","updateTree.upd.35") [Var 2,Var 3,Var 4,Var 8,Var 1],Var 9],Var 11]])),Branch (Pattern ("Prelude","False") []) (Let [(12,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 12,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","_case_272") [Var 2,Var 3,Var 4,Var 6,Var 7,Var 8,Var 9,Comb FuncCall ("OraclePrelude","otherwise") [Var 1],Var 12]]))]])),Func ("OracleRedBlackTree","_case_272") 9 Private (TVar (-42)) (Rule [2,3,4,6,7,8,9,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 10) [Branch (Pattern ("Prelude","True") []) (Let [(11,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","balanceR") [Comb ConsCall ("RedBlackTree","Tree") [Var 6,Var 7,Var 8,Comb FuncCall ("OracleRedBlackTree","updateTree.upd.35") [Var 2,Var 3,Var 4,Var 9,Var 1]],Var 11]])),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OraclePrelude","failed") [Var 1]])]])),Func ("OracleRedBlackTree","_case_276") 3 Private (TVar (-42)) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 3) [Branch (Pattern ("OracleRedBlackTree","RedBlackTree") [4,5,6,7]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb ConsCall ("OracleRedBlackTree","RedBlackTree") [Var 4,Var 5,Var 6,Comb FuncCall ("OracleRedBlackTree","updateTree") [Var 4,Var 6,Var 2,Var 7,Var 1]]])]])),Func ("OracleRedBlackTree","_case_280") 5 Private (TVar (-42)) (Rule [2,3,4,5,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 5) [Branch (Pattern ("RedBlackTree","Empty") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("Prelude","Nothing") []]),Branch (Pattern ("RedBlackTree","Tree") [6,7,8,9]) (Let [(10,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(11,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 10,Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("OracleRedBlackTree","_case_279") [Var 2,Var 3,Var 4,Var 7,Var 8,Var 9,Comb FuncCall ("Oracle","apply") [Comb FuncCall ("Oracle","apply") [Var 2,Var 4,Var 1],Var 7,Var 10],Var 11]]))]])),Func ("OracleRedBlackTree","_case_279") 8 Private (TVar (-42)) (Rule [2,3,4,7,8,9,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 10) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("Prelude","Just") [Var 7]]),Branch (Pattern ("Prelude","False") []) (Let [(11,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []]),(12,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude",":") [Var 12,Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("OracleRedBlackTree","_case_278") [Var 2,Var 3,Var 4,Var 7,Var 8,Var 9,Comb FuncCall ("Oracle","apply") [Comb FuncCall ("Oracle","apply") [Var 3,Var 4,Var 1],Var 7,Var 11],Var 12]]))]])),Func ("OracleRedBlackTree","_case_278") 8 Private (TVar (-42)) (Rule [2,3,4,7,8,9,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 10) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","lookupTree") [Var 2,Var 3,Var 4,Var 8,Var 1]]),Branch (Pattern ("Prelude","False") []) (Let [(11,Comb FuncCall ("CEventOracle","fresh") [Comb ConsCall ("Prelude","()") []])] (Comb FuncCall ("CEventOracle","expand") [Var 1,Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("OracleRedBlackTree","_case_277") [Var 2,Var 3,Var 4,Var 9,Comb FuncCall ("OraclePrelude","otherwise") [Var 1],Var 11]]))]])),Func ("OracleRedBlackTree","_case_277") 6 Private (TVar (-42)) (Rule [2,3,4,9,10,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Rigid (Var 10) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","lookupTree") [Var 2,Var 3,Var 4,Var 9,Var 1]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OraclePrelude","failed") [Var 1]])]])),Func ("OracleRedBlackTree","_case_281") 3 Private (TVar (-42)) (Rule [2,3,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 3) [Branch (Pattern ("OracleRedBlackTree","RedBlackTree") [4,5,6,7]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","lookupTree") [Var 5,Var 6,Var 2,Var 7,Var 1]])]])),Func ("OracleRedBlackTree","_case_282") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("OracleRedBlackTree","RedBlackTree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("OracleRedBlackTree","RedBlackTree") [Var 3,Var 4,Var 5,Comb ConsCall ("RedBlackTree","Empty") []]])]])),Func ("OracleRedBlackTree","_case_284") 2 Private (TVar (-42)) (Rule [2,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 2) [Branch (Pattern ("OracleRedBlackTree","RedBlackTree") [3,4,5,6]) (Comb FuncCall ("CEventOracle","replace") [Var 1,Comb FuncCall ("OracleRedBlackTree","_case_283") [Var 6,Var 1]])]])),Func ("OracleRedBlackTree","_case_283") 2 Private (TVar (-42)) (Rule [6,1] (Comb FuncCall ("CEventOracle","replace") [Var 1,Case Flex (Var 6) [Branch (Pattern ("RedBlackTree","Empty") []) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("Prelude","True") []]),Branch (Pattern ("RedBlackTree","Tree") [7,8,9,10]) (Comb FuncCall ("CEventOracle","collapse") [Var 1,Comb ConsCall ("Prelude","False") []])]]))] []