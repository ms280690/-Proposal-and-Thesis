Module "StyledText"
(Just (Exporting (1,19) [(Export (QualIdent Nothing (Ident "bold" 0))),(Export (QualIdent Nothing (Ident "underline" 0))),(Export (QualIdent Nothing (Ident "black" 0))),(Export (QualIdent Nothing (Ident "blue" 0))),(Export (QualIdent Nothing (Ident "cyan" 0))),(Export (QualIdent Nothing (Ident "green" 0))),(Export (QualIdent Nothing (Ident "magenta" 0))),(Export (QualIdent Nothing (Ident "red" 0))),(Export (QualIdent Nothing (Ident "white" 0))),(Export (QualIdent Nothing (Ident "yellow" 0))),(Export (QualIdent Nothing (Ident "bgBlack" 0))),(Export (QualIdent Nothing (Ident "bgBlue" 0))),(Export (QualIdent Nothing (Ident "bgCyan" 0))),(Export (QualIdent Nothing (Ident "bgGreen" 0))),(Export (QualIdent Nothing (Ident "bgMagenta" 0))),(Export (QualIdent Nothing (Ident "bgRed" 0))),(Export (QualIdent Nothing (Ident "bgWhite" 0))),(Export (QualIdent Nothing (Ident "bgYellow" 0))),(Export (QualIdent Nothing (Ident "ShowS" 0))),(Export (QualIdent Nothing (Ident "boldS" 0))),(Export (QualIdent Nothing (Ident "underlineS" 0))),(Export (QualIdent Nothing (Ident "blackS" 0))),(Export (QualIdent Nothing (Ident "blueS" 0))),(Export (QualIdent Nothing (Ident "cyanS" 0))),(Export (QualIdent Nothing (Ident "greenS" 0))),(Export (QualIdent Nothing (Ident "magentaS" 0))),(Export (QualIdent Nothing (Ident "redS" 0))),(Export (QualIdent Nothing (Ident "whiteS" 0))),(Export (QualIdent Nothing (Ident "yellowS" 0))),(Export (QualIdent Nothing (Ident "bgBlackS" 0))),(Export (QualIdent Nothing (Ident "bgBlueS" 0))),(Export (QualIdent Nothing (Ident "bgCyanS" 0))),(Export (QualIdent Nothing (Ident "bgGreenS" 0))),(Export (QualIdent Nothing (Ident "bgMagentaS" 0))),(Export (QualIdent Nothing (Ident "bgRedS" 0))),(Export (QualIdent Nothing (Ident "bgWhiteS" 0))),(Export (QualIdent Nothing (Ident "bgYellowS" 0))),(Export (QualIdent Nothing (Ident "Doc" 0))),(Export (QualIdent Nothing (Ident "boldDoc" 0))),(Export (QualIdent Nothing (Ident "underlineDoc" 0))),(Export (QualIdent Nothing (Ident "blackDoc" 0))),(Export (QualIdent Nothing (Ident "blueDoc" 0))),(Export (QualIdent Nothing (Ident "cyanDoc" 0))),(Export (QualIdent Nothing (Ident "greenDoc" 0))),(Export (QualIdent Nothing (Ident "magentaDoc" 0))),(Export (QualIdent Nothing (Ident "redDoc" 0))),(Export (QualIdent Nothing (Ident "whiteDoc" 0))),(Export (QualIdent Nothing (Ident "yellowDoc" 0))),(Export (QualIdent Nothing (Ident "bgBlackDoc" 0))),(Export (QualIdent Nothing (Ident "bgBlueDoc" 0))),(Export (QualIdent Nothing (Ident "bgCyanDoc" 0))),(Export (QualIdent Nothing (Ident "bgGreenDoc" 0))),(Export (QualIdent Nothing (Ident "bgMagentaDoc" 0))),(Export (QualIdent Nothing (Ident "bgRedDoc" 0))),(Export (QualIdent Nothing (Ident "bgWhiteDoc" 0))),(Export (QualIdent Nothing (Ident "bgYellowDoc" 0))),(Export (QualIdent Nothing (Ident "plainText" 0))),(Export (QualIdent Nothing (Ident "printStyledText" 0)))]))
[(ImportDecl (1,1) "Prelude" False Nothing Nothing)
,(ImportDecl (22,1) "Char" False Nothing Nothing)
,(ImportDecl (23,1) "Pretty" False Nothing Nothing)
,(ImportDecl (24,1) "AnsiCodes" False Nothing Nothing)
,(TypeDecl (75,1) (Ident "ShowS" 0) [] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "String" 0)) [])))
,(FunctionDecl (28,1) (Ident "boldChar" 0) [(Equation (28,1) (FunLhs (Ident "boldChar" 0) []) (SimpleRhs (28,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 4) 5))) []))])
,(FunctionDecl (29,1) (Ident "underlineChar" 0) [(Equation (29,1) (FunLhs (Ident "underlineChar" 0) []) (SimpleRhs (29,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 7) 6))) []))])
,(FunctionDecl (30,1) (Ident "endChar" 0) [(Equation (30,1) (FunLhs (Ident "endChar" 0) []) (SimpleRhs (30,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 10) 7))) []))])
,(FunctionDecl (31,1) (Ident "blackChar" 0) [(Equation (31,1) (FunLhs (Ident "blackChar" 0) []) (SimpleRhs (31,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 13) 16))) []))])
,(FunctionDecl (32,1) (Ident "blueChar" 0) [(Equation (32,1) (FunLhs (Ident "blueChar" 0) []) (SimpleRhs (32,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 16) 17))) []))])
,(FunctionDecl (33,1) (Ident "cyanChar" 0) [(Equation (33,1) (FunLhs (Ident "cyanChar" 0) []) (SimpleRhs (33,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 19) 18))) []))])
,(FunctionDecl (34,1) (Ident "greenChar" 0) [(Equation (34,1) (FunLhs (Ident "greenChar" 0) []) (SimpleRhs (34,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 22) 19))) []))])
,(FunctionDecl (35,1) (Ident "magentaChar" 0) [(Equation (35,1) (FunLhs (Ident "magentaChar" 0) []) (SimpleRhs (35,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 25) 20))) []))])
,(FunctionDecl (36,1) (Ident "redChar" 0) [(Equation (36,1) (FunLhs (Ident "redChar" 0) []) (SimpleRhs (36,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 28) 21))) []))])
,(FunctionDecl (37,1) (Ident "whiteChar" 0) [(Equation (37,1) (FunLhs (Ident "whiteChar" 0) []) (SimpleRhs (37,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 31) 22))) []))])
,(FunctionDecl (38,1) (Ident "yellowChar" 0) [(Equation (38,1) (FunLhs (Ident "yellowChar" 0) []) (SimpleRhs (38,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 34) 23))) []))])
,(FunctionDecl (39,1) (Ident "bgBlackChar" 0) [(Equation (39,1) (FunLhs (Ident "bgBlackChar" 0) []) (SimpleRhs (39,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 37) 24))) []))])
,(FunctionDecl (40,1) (Ident "bgBlueChar" 0) [(Equation (40,1) (FunLhs (Ident "bgBlueChar" 0) []) (SimpleRhs (40,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 40) 25))) []))])
,(FunctionDecl (41,1) (Ident "bgCyanChar" 0) [(Equation (41,1) (FunLhs (Ident "bgCyanChar" 0) []) (SimpleRhs (41,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 43) 26))) []))])
,(FunctionDecl (42,1) (Ident "bgGreenChar" 0) [(Equation (42,1) (FunLhs (Ident "bgGreenChar" 0) []) (SimpleRhs (42,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 46) 27))) []))])
,(FunctionDecl (43,1) (Ident "bgMagentaChar" 0) [(Equation (43,1) (FunLhs (Ident "bgMagentaChar" 0) []) (SimpleRhs (43,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 49) 28))) []))])
,(FunctionDecl (44,1) (Ident "bgRedChar" 0) [(Equation (44,1) (FunLhs (Ident "bgRedChar" 0) []) (SimpleRhs (44,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 52) 29))) []))])
,(FunctionDecl (45,1) (Ident "bgWhiteChar" 0) [(Equation (45,1) (FunLhs (Ident "bgWhiteChar" 0) []) (SimpleRhs (45,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 55) 30))) []))])
,(FunctionDecl (46,1) (Ident "bgYellowChar" 0) [(Equation (46,1) (FunLhs (Ident "bgYellowChar" 0) []) (SimpleRhs (46,17) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 58) 31))) []))])
,(TypeSig (48,1) [(Ident "bold" 0),(Ident "underline" 0),(Ident "black" 0),(Ident "blue" 0),(Ident "cyan" 0),(Ident "green" 0),(Ident "magenta" 0),(Ident "red" 0),(Ident "white" 0),(Ident "yellow" 0),(Ident "bgBlack" 0),(Ident "bgBlue" 0),(Ident "bgCyan" 0),(Ident "bgGreen" 0),(Ident "bgMagenta" 0),(Ident "bgRed" 0),(Ident "bgWhite" 0),(Ident "bgYellow" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "String" 0)) [])))
,(FunctionDecl (52,1) (Ident "bold" 0) [(Equation (52,1) (FunLhs (Ident "bold" 0) []) (SimpleRhs (52,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "boldChar" 0)))) []))])
,(FunctionDecl (53,1) (Ident "underline" 0) [(Equation (53,1) (FunLhs (Ident "underline" 0) []) (SimpleRhs (53,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "underlineChar" 0)))) []))])
,(FunctionDecl (54,1) (Ident "black" 0) [(Equation (54,1) (FunLhs (Ident "black" 0) []) (SimpleRhs (54,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "blackChar" 0)))) []))])
,(FunctionDecl (55,1) (Ident "blue" 0) [(Equation (55,1) (FunLhs (Ident "blue" 0) []) (SimpleRhs (55,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "blueChar" 0)))) []))])
,(FunctionDecl (56,1) (Ident "cyan" 0) [(Equation (56,1) (FunLhs (Ident "cyan" 0) []) (SimpleRhs (56,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "cyanChar" 0)))) []))])
,(FunctionDecl (57,1) (Ident "green" 0) [(Equation (57,1) (FunLhs (Ident "green" 0) []) (SimpleRhs (57,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "greenChar" 0)))) []))])
,(FunctionDecl (58,1) (Ident "magenta" 0) [(Equation (58,1) (FunLhs (Ident "magenta" 0) []) (SimpleRhs (58,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "magentaChar" 0)))) []))])
,(FunctionDecl (59,1) (Ident "red" 0) [(Equation (59,1) (FunLhs (Ident "red" 0) []) (SimpleRhs (59,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "redChar" 0)))) []))])
,(FunctionDecl (60,1) (Ident "white" 0) [(Equation (60,1) (FunLhs (Ident "white" 0) []) (SimpleRhs (60,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "whiteChar" 0)))) []))])
,(FunctionDecl (61,1) (Ident "yellow" 0) [(Equation (61,1) (FunLhs (Ident "yellow" 0) []) (SimpleRhs (61,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "yellowChar" 0)))) []))])
,(FunctionDecl (62,1) (Ident "bgBlack" 0) [(Equation (62,1) (FunLhs (Ident "bgBlack" 0) []) (SimpleRhs (62,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgBlackChar" 0)))) []))])
,(FunctionDecl (63,1) (Ident "bgBlue" 0) [(Equation (63,1) (FunLhs (Ident "bgBlue" 0) []) (SimpleRhs (63,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgBlueChar" 0)))) []))])
,(FunctionDecl (64,1) (Ident "bgCyan" 0) [(Equation (64,1) (FunLhs (Ident "bgCyan" 0) []) (SimpleRhs (64,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgCyanChar" 0)))) []))])
,(FunctionDecl (65,1) (Ident "bgGreen" 0) [(Equation (65,1) (FunLhs (Ident "bgGreen" 0) []) (SimpleRhs (65,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgGreenChar" 0)))) []))])
,(FunctionDecl (66,1) (Ident "bgMagenta" 0) [(Equation (66,1) (FunLhs (Ident "bgMagenta" 0) []) (SimpleRhs (66,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgMagentaChar" 0)))) []))])
,(FunctionDecl (67,1) (Ident "bgRed" 0) [(Equation (67,1) (FunLhs (Ident "bgRed" 0) []) (SimpleRhs (67,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgRedChar" 0)))) []))])
,(FunctionDecl (68,1) (Ident "bgWhite" 0) [(Equation (68,1) (FunLhs (Ident "bgWhite" 0) []) (SimpleRhs (68,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgWhiteChar" 0)))) []))])
,(FunctionDecl (69,1) (Ident "bgYellow" 0) [(Equation (69,1) (FunLhs (Ident "bgYellow" 0) []) (SimpleRhs (69,13) (Apply (Variable (QualIdent (Just "StyledText") (Ident "encl" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgYellowChar" 0)))) []))])
,(TypeSig (71,1) [(Ident "encl" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "Char" 0)) []) (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "String" 0)) []))))
,(FunctionDecl (72,1) (Ident "encl" 0) [(Equation (72,1) (FunLhs (Ident "encl" 0) [(VariablePattern (Ident "c" 95)),(VariablePattern (Ident "s" 95))]) (SimpleRhs (72,12) (InfixApply (Variable (QualIdent Nothing (Ident "c" 95))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (InfixApply (Variable (QualIdent Nothing (Ident "s" 95))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (List [(Variable (QualIdent (Just "StyledText") (Ident "endChar" 0)))]))) []))])
,(TypeSig (77,1) [(Ident "boldS" 0),(Ident "underlineS" 0),(Ident "blackS" 0),(Ident "blueS" 0),(Ident "cyanS" 0),(Ident "greenS" 0),(Ident "magentaS" 0),(Ident "redS" 0),(Ident "whiteS" 0),(Ident "yellowS" 0),(Ident "bgBlackS" 0),(Ident "bgBlueS" 0),(Ident "bgCyanS" 0),(Ident "bgGreenS" 0),(Ident "bgMagentaS" 0),(Ident "bgRedS" 0),(Ident "bgWhiteS" 0),(Ident "bgYellowS" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "ShowS" 0)) []) (ConstructorType (QualIdent Nothing (Ident "ShowS" 0)) [])))
,(FunctionDecl (81,1) (Ident "boldS" 0) [(Equation (81,1) (FunLhs (Ident "boldS" 0) []) (SimpleRhs (81,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "boldChar" 0)))) []))])
,(FunctionDecl (82,1) (Ident "underlineS" 0) [(Equation (82,1) (FunLhs (Ident "underlineS" 0) []) (SimpleRhs (82,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "underlineChar" 0)))) []))])
,(FunctionDecl (83,1) (Ident "blackS" 0) [(Equation (83,1) (FunLhs (Ident "blackS" 0) []) (SimpleRhs (83,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "blackChar" 0)))) []))])
,(FunctionDecl (84,1) (Ident "blueS" 0) [(Equation (84,1) (FunLhs (Ident "blueS" 0) []) (SimpleRhs (84,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "blueChar" 0)))) []))])
,(FunctionDecl (85,1) (Ident "cyanS" 0) [(Equation (85,1) (FunLhs (Ident "cyanS" 0) []) (SimpleRhs (85,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "cyanChar" 0)))) []))])
,(FunctionDecl (86,1) (Ident "greenS" 0) [(Equation (86,1) (FunLhs (Ident "greenS" 0) []) (SimpleRhs (86,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "greenChar" 0)))) []))])
,(FunctionDecl (87,1) (Ident "magentaS" 0) [(Equation (87,1) (FunLhs (Ident "magentaS" 0) []) (SimpleRhs (87,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "magentaChar" 0)))) []))])
,(FunctionDecl (88,1) (Ident "redS" 0) [(Equation (88,1) (FunLhs (Ident "redS" 0) []) (SimpleRhs (88,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "redChar" 0)))) []))])
,(FunctionDecl (89,1) (Ident "whiteS" 0) [(Equation (89,1) (FunLhs (Ident "whiteS" 0) []) (SimpleRhs (89,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "whiteChar" 0)))) []))])
,(FunctionDecl (90,1) (Ident "yellowS" 0) [(Equation (90,1) (FunLhs (Ident "yellowS" 0) []) (SimpleRhs (90,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "yellowChar" 0)))) []))])
,(FunctionDecl (91,1) (Ident "bgBlackS" 0) [(Equation (91,1) (FunLhs (Ident "bgBlackS" 0) []) (SimpleRhs (91,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgBlackChar" 0)))) []))])
,(FunctionDecl (92,1) (Ident "bgBlueS" 0) [(Equation (92,1) (FunLhs (Ident "bgBlueS" 0) []) (SimpleRhs (92,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgBlueChar" 0)))) []))])
,(FunctionDecl (93,1) (Ident "bgCyanS" 0) [(Equation (93,1) (FunLhs (Ident "bgCyanS" 0) []) (SimpleRhs (93,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgCyanChar" 0)))) []))])
,(FunctionDecl (94,1) (Ident "bgGreenS" 0) [(Equation (94,1) (FunLhs (Ident "bgGreenS" 0) []) (SimpleRhs (94,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgGreenChar" 0)))) []))])
,(FunctionDecl (95,1) (Ident "bgMagentaS" 0) [(Equation (95,1) (FunLhs (Ident "bgMagentaS" 0) []) (SimpleRhs (95,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgMagentaChar" 0)))) []))])
,(FunctionDecl (96,1) (Ident "bgRedS" 0) [(Equation (96,1) (FunLhs (Ident "bgRedS" 0) []) (SimpleRhs (96,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgRedChar" 0)))) []))])
,(FunctionDecl (97,1) (Ident "bgWhiteS" 0) [(Equation (97,1) (FunLhs (Ident "bgWhiteS" 0) []) (SimpleRhs (97,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgWhiteChar" 0)))) []))])
,(FunctionDecl (98,1) (Ident "bgYellowS" 0) [(Equation (98,1) (FunLhs (Ident "bgYellowS" 0) []) (SimpleRhs (98,14) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclS" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgYellowChar" 0)))) []))])
,(TypeSig (100,1) [(Ident "enclS" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "Char" 0)) []) (ArrowType (ConstructorType (QualIdent Nothing (Ident "ShowS" 0)) []) (ConstructorType (QualIdent Nothing (Ident "ShowS" 0)) []))))
,(FunctionDecl (101,1) (Ident "enclS" 0) [(Equation (101,1) (FunLhs (Ident "enclS" 0) [(VariablePattern (Ident "c" 133)),(VariablePattern (Ident "s" 133))]) (SimpleRhs (101,13) (InfixApply (LeftSection (Variable (QualIdent Nothing (Ident "c" 133))) (InfixConstr (QualIdent Nothing (Ident ":" 0)))) (InfixOp (QualIdent (Just "Prelude") (Ident "." 0))) (InfixApply (Variable (QualIdent Nothing (Ident "s" 133))) (InfixOp (QualIdent (Just "Prelude") (Ident "." 0))) (LeftSection (Variable (QualIdent (Just "StyledText") (Ident "endChar" 0))) (InfixConstr (QualIdent Nothing (Ident ":" 0)))))) []))])
,(TypeSig (104,1) [(Ident "boldDoc" 0),(Ident "underlineDoc" 0),(Ident "blackDoc" 0),(Ident "blueDoc" 0),(Ident "cyanDoc" 0),(Ident "greenDoc" 0),(Ident "magentaDoc" 0),(Ident "redDoc" 0),(Ident "whiteDoc" 0),(Ident "yellowDoc" 0),(Ident "bgBlackDoc" 0),(Ident "bgBlueDoc" 0),(Ident "bgCyanDoc" 0),(Ident "bgGreenDoc" 0),(Ident "bgMagentaDoc" 0),(Ident "bgRedDoc" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "Doc" 0)) []) (ConstructorType (QualIdent Nothing (Ident "Doc" 0)) [])))
,(FunctionDecl (108,1) (Ident "boldDoc" 0) [(Equation (108,1) (FunLhs (Ident "boldDoc" 0) []) (SimpleRhs (108,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "boldChar" 0)))) []))])
,(FunctionDecl (109,1) (Ident "underlineDoc" 0) [(Equation (109,1) (FunLhs (Ident "underlineDoc" 0) []) (SimpleRhs (109,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "underlineChar" 0)))) []))])
,(FunctionDecl (110,1) (Ident "blackDoc" 0) [(Equation (110,1) (FunLhs (Ident "blackDoc" 0) []) (SimpleRhs (110,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "blackChar" 0)))) []))])
,(FunctionDecl (111,1) (Ident "blueDoc" 0) [(Equation (111,1) (FunLhs (Ident "blueDoc" 0) []) (SimpleRhs (111,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "blueChar" 0)))) []))])
,(FunctionDecl (112,1) (Ident "cyanDoc" 0) [(Equation (112,1) (FunLhs (Ident "cyanDoc" 0) []) (SimpleRhs (112,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "cyanChar" 0)))) []))])
,(FunctionDecl (113,1) (Ident "greenDoc" 0) [(Equation (113,1) (FunLhs (Ident "greenDoc" 0) []) (SimpleRhs (113,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "greenChar" 0)))) []))])
,(FunctionDecl (114,1) (Ident "magentaDoc" 0) [(Equation (114,1) (FunLhs (Ident "magentaDoc" 0) []) (SimpleRhs (114,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "magentaChar" 0)))) []))])
,(FunctionDecl (115,1) (Ident "redDoc" 0) [(Equation (115,1) (FunLhs (Ident "redDoc" 0) []) (SimpleRhs (115,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "redChar" 0)))) []))])
,(FunctionDecl (116,1) (Ident "whiteDoc" 0) [(Equation (116,1) (FunLhs (Ident "whiteDoc" 0) []) (SimpleRhs (116,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "whiteChar" 0)))) []))])
,(FunctionDecl (117,1) (Ident "yellowDoc" 0) [(Equation (117,1) (FunLhs (Ident "yellowDoc" 0) []) (SimpleRhs (117,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "yellowChar" 0)))) []))])
,(FunctionDecl (118,1) (Ident "bgBlackDoc" 0) [(Equation (118,1) (FunLhs (Ident "bgBlackDoc" 0) []) (SimpleRhs (118,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgBlackChar" 0)))) []))])
,(FunctionDecl (119,1) (Ident "bgBlueDoc" 0) [(Equation (119,1) (FunLhs (Ident "bgBlueDoc" 0) []) (SimpleRhs (119,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgBlueChar" 0)))) []))])
,(FunctionDecl (120,1) (Ident "bgCyanDoc" 0) [(Equation (120,1) (FunLhs (Ident "bgCyanDoc" 0) []) (SimpleRhs (120,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgCyanChar" 0)))) []))])
,(FunctionDecl (121,1) (Ident "bgGreenDoc" 0) [(Equation (121,1) (FunLhs (Ident "bgGreenDoc" 0) []) (SimpleRhs (121,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgGreenChar" 0)))) []))])
,(FunctionDecl (122,1) (Ident "bgMagentaDoc" 0) [(Equation (122,1) (FunLhs (Ident "bgMagentaDoc" 0) []) (SimpleRhs (122,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgMagentaChar" 0)))) []))])
,(FunctionDecl (123,1) (Ident "bgRedDoc" 0) [(Equation (123,1) (FunLhs (Ident "bgRedDoc" 0) []) (SimpleRhs (123,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgRedChar" 0)))) []))])
,(FunctionDecl (124,1) (Ident "bgWhiteDoc" 0) [(Equation (124,1) (FunLhs (Ident "bgWhiteDoc" 0) []) (SimpleRhs (124,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgWhiteChar" 0)))) []))])
,(FunctionDecl (125,1) (Ident "bgYellowDoc" 0) [(Equation (125,1) (FunLhs (Ident "bgYellowDoc" 0) []) (SimpleRhs (125,16) (Apply (Variable (QualIdent (Just "StyledText") (Ident "enclDoc" 0))) (Variable (QualIdent (Just "StyledText") (Ident "bgYellowChar" 0)))) []))])
,(TypeSig (127,1) [(Ident "enclDoc" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "Char" 0)) []) (ArrowType (ConstructorType (QualIdent Nothing (Ident "Doc" 0)) []) (ConstructorType (QualIdent Nothing (Ident "Doc" 0)) []))))
,(FunctionDecl (128,1) (Ident "enclDoc" 0) [(Equation (128,1) (FunLhs (Ident "enclDoc" 0) [(VariablePattern (Ident "c" 171))]) (SimpleRhs (128,13) (Apply (Apply (Variable (QualIdent (Just "Pretty") (Ident "enclose" 0))) (Paren (Apply (Variable (QualIdent (Just "Pretty") (Ident "char" 0))) (Variable (QualIdent Nothing (Ident "c" 171)))))) (Paren (Apply (Variable (QualIdent (Just "Pretty") (Ident "char" 0))) (Variable (QualIdent (Just "StyledText") (Ident "endChar" 0)))))) []))])
,(TypeSig (131,1) [(Ident "plainText" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "String" 0)) [])))
,(FunctionDecl (132,1) (Ident "plainText" 0) [(Equation (132,1) (FunLhs (Ident "plainText" 0) []) (SimpleRhs (132,13) (Apply (Variable (QualIdent (Just "Prelude") (Ident "filter" 0))) (Paren (InfixApply (Variable (QualIdent (Just "Prelude") (Ident "not" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "." 0))) (Variable (QualIdent (Just "StyledText") (Ident "special" 0)))))) []))])
,(TypeSig (134,1) [(Ident "special" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "Char" 0)) []) (ConstructorType (QualIdent Nothing (Ident "Bool" 0)) [])))
,(FunctionDecl (135,1) (Ident "special" 0) [(Equation (135,1) (FunLhs (Ident "special" 0) [(VariablePattern (Ident "n" 175))]) (SimpleRhs (135,13) (InfixApply (Apply (Variable (QualIdent (Just "Prelude") (Ident "ord" 0))) (Variable (QualIdent Nothing (Ident "n" 175)))) (InfixOp (QualIdent (Just "Prelude") (Ident "elem" 0))) (Paren (InfixApply (List [(Literal (Int (Ident "_" 177) 5)),(Literal (Int (Ident "_" 178) 6)),(Literal (Int (Ident "_" 179) 7))]) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (EnumFromTo (Literal (Int (Ident "_" 180) 16)) (Literal (Int (Ident "_" 181) 31)))))) []))])
,(TypeSig (138,1) [(Ident "interpret" 0)] (ArrowType (ListType (VariableType (Ident "b" 0))) (ArrowType (ArrowType (VariableType (Ident "a" 0)) (ArrowType (VariableType (Ident "a" 0)) (VariableType (Ident "a" 0)))) (ArrowType (ArrowType (VariableType (Ident "b" 0)) (ArrowType (VariableType (Ident "b" 0)) (VariableType (Ident "b" 0)))) (ArrowType (ArrowType (VariableType (Ident "b" 0)) (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (VariableType (Ident "a" 0)))) (ArrowType (ListType (TupleType [(VariableType (Ident "b" 0)),(VariableType (Ident "b" 0)),(VariableType (Ident "b" 0))])) (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (VariableType (Ident "a" 0)))))))))
,(FunctionDecl (141,1) (Ident "interpret" 0) [(Equation (141,1) (FunLhs (Ident "interpret" 0) [(AsPattern (Ident "convs" 182) (ParenPattern (InfixPattern (VariablePattern (Ident "b" 182)) (QualIdent Nothing (Ident ":" 0)) (InfixPattern (VariablePattern (Ident "ul" 182)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "cs" 182)))))),(VariablePattern (Ident "combine" 182)),(VariablePattern (Ident "cst" 182)),(VariablePattern (Ident "ast" 182)),(ParenPattern (InfixPattern (AsPattern (Ident "t" 182) (TuplePattern [(VariablePattern (Ident "st" 182)),(VariablePattern (Ident "fg" 182)),(VariablePattern (Ident "bg" 182))])) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "fs" 182)))),(VariablePattern (Ident "s" 182))]) (GuardedRhs [(CondExpr (142,3) (Apply (Variable (QualIdent (Just "Prelude") (Ident "null" 0))) (Variable (QualIdent Nothing (Ident "ys" 183)))) (Apply (Variable (QualIdent Nothing (Ident "f" 183))) (Variable (QualIdent Nothing (Ident "xs" 183))))),(CondExpr (143,3) (InfixApply (Variable (QualIdent Nothing (Ident "code" 183))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))) (Literal (Int (Ident "_" 189) 5))) (InfixApply (Apply (Variable (QualIdent Nothing (Ident "combine" 182))) (Paren (Apply (Variable (QualIdent Nothing (Ident "f" 183))) (Variable (QualIdent Nothing (Ident "xs" 183)))))) (InfixOp (QualIdent (Just "Prelude") (Ident "$" 0))) (Apply (Apply (Apply (Apply (Apply (Apply (Variable (QualIdent (Just "StyledText") (Ident "interpret" 0))) (Variable (QualIdent Nothing (Ident "convs" 182)))) (Variable (QualIdent Nothing (Ident "combine" 182)))) (Variable (QualIdent Nothing (Ident "cst" 182)))) (Variable (QualIdent Nothing (Ident "ast" 182)))) (Paren (InfixApply (Tuple [(Variable (QualIdent Nothing (Ident "b" 182))),(Variable (QualIdent Nothing (Ident "fg" 182))),(Variable (QualIdent Nothing (Ident "bg" 182)))]) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (InfixApply (Variable (QualIdent Nothing (Ident "t" 182))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Variable (QualIdent Nothing (Ident "fs" 182))))))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "tail" 0))) (Variable (QualIdent Nothing (Ident "ys" 183)))))))),(CondExpr (145,3) (InfixApply (Variable (QualIdent Nothing (Ident "code" 183))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))) (Literal (Int (Ident "_" 190) 6))) (InfixApply (Apply (Variable (QualIdent Nothing (Ident "combine" 182))) (Paren (Apply (Variable (QualIdent Nothing (Ident "f" 183))) (Variable (QualIdent Nothing (Ident "xs" 183)))))) (InfixOp (QualIdent (Just "Prelude") (Ident "$" 0))) (Apply (Apply (Apply (Apply (Apply (Apply (Variable (QualIdent (Just "StyledText") (Ident "interpret" 0))) (Variable (QualIdent Nothing (Ident "convs" 182)))) (Variable (QualIdent Nothing (Ident "combine" 182)))) (Variable (QualIdent Nothing (Ident "cst" 182)))) (Variable (QualIdent Nothing (Ident "ast" 182)))) (Paren (InfixApply (Tuple [(Variable (QualIdent Nothing (Ident "ul" 182))),(Variable (QualIdent Nothing (Ident "fg" 182))),(Variable (QualIdent Nothing (Ident "bg" 182)))]) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (InfixApply (Variable (QualIdent Nothing (Ident "t" 182))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Variable (QualIdent Nothing (Ident "fs" 182))))))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "tail" 0))) (Variable (QualIdent Nothing (Ident "ys" 183)))))))),(CondExpr (147,3) (InfixApply (Variable (QualIdent Nothing (Ident "code" 183))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))) (Literal (Int (Ident "_" 191) 7))) (InfixApply (Apply (Variable (QualIdent Nothing (Ident "combine" 182))) (Paren (Apply (Variable (QualIdent Nothing (Ident "f" 183))) (Variable (QualIdent Nothing (Ident "xs" 183)))))) (InfixOp (QualIdent (Just "Prelude") (Ident "$" 0))) (Apply (Apply (Apply (Apply (Apply (Apply (Variable (QualIdent (Just "StyledText") (Ident "interpret" 0))) (Variable (QualIdent Nothing (Ident "convs" 182)))) (Variable (QualIdent Nothing (Ident "combine" 182)))) (Variable (QualIdent Nothing (Ident "cst" 182)))) (Variable (QualIdent Nothing (Ident "ast" 182)))) (Variable (QualIdent Nothing (Ident "fs" 182)))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "tail" 0))) (Variable (QualIdent Nothing (Ident "ys" 183)))))))),(CondExpr (149,3) (InfixApply (Variable (QualIdent Nothing (Ident "code" 183))) (InfixOp (QualIdent (Just "Prelude") (Ident "<" 0))) (Literal (Int (Ident "_" 192) 24))) (InfixApply (Apply (Variable (QualIdent Nothing (Ident "combine" 182))) (Paren (Apply (Variable (QualIdent Nothing (Ident "f" 183))) (Variable (QualIdent Nothing (Ident "xs" 183)))))) (InfixOp (QualIdent (Just "Prelude") (Ident "$" 0))) (Apply (Apply (Apply (Apply (Apply (Apply (Variable (QualIdent (Just "StyledText") (Ident "interpret" 0))) (Variable (QualIdent Nothing (Ident "convs" 182)))) (Variable (QualIdent Nothing (Ident "combine" 182)))) (Variable (QualIdent Nothing (Ident "cst" 182)))) (Variable (QualIdent Nothing (Ident "ast" 182)))) (Paren (InfixApply (Tuple [(Variable (QualIdent Nothing (Ident "st" 182))),(Variable (QualIdent Nothing (Ident "g" 183))),(Variable (QualIdent Nothing (Ident "bg" 182)))]) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (InfixApply (Variable (QualIdent Nothing (Ident "t" 182))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Variable (QualIdent Nothing (Ident "fs" 182))))))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "tail" 0))) (Variable (QualIdent Nothing (Ident "ys" 183)))))))),(CondExpr (151,3) (Variable (QualIdent (Just "Prelude") (Ident "otherwise" 0))) (InfixApply (Apply (Variable (QualIdent Nothing (Ident "combine" 182))) (Paren (Apply (Variable (QualIdent Nothing (Ident "f" 183))) (Variable (QualIdent Nothing (Ident "xs" 183)))))) (InfixOp (QualIdent (Just "Prelude") (Ident "$" 0))) (Apply (Apply (Apply (Apply (Apply (Apply (Variable (QualIdent (Just "StyledText") (Ident "interpret" 0))) (Variable (QualIdent Nothing (Ident "convs" 182)))) (Variable (QualIdent Nothing (Ident "combine" 182)))) (Variable (QualIdent Nothing (Ident "cst" 182)))) (Variable (QualIdent Nothing (Ident "ast" 182)))) (Paren (InfixApply (Tuple [(Variable (QualIdent Nothing (Ident "st" 182))),(Variable (QualIdent Nothing (Ident "fg" 182))),(Variable (QualIdent Nothing (Ident "g" 183)))]) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (InfixApply (Variable (QualIdent Nothing (Ident "t" 182))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Variable (QualIdent Nothing (Ident "fs" 182))))))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "tail" 0))) (Variable (QualIdent Nothing (Ident "ys" 183))))))))] [(PatternDecl (154,3) (VariablePattern (Ident "f" 183)) (SimpleRhs (154,7) (InfixApply (Variable (QualIdent Nothing (Ident "ast" 182))) (InfixOp (QualIdent (Just "Prelude") (Ident "$" 0))) (Apply (Apply (Variable (QualIdent Nothing (Ident "cst" 182))) (Variable (QualIdent Nothing (Ident "st" 182)))) (Paren (Apply (Apply (Variable (QualIdent Nothing (Ident "cst" 182))) (Variable (QualIdent Nothing (Ident "fg" 182)))) (Variable (QualIdent Nothing (Ident "bg" 182))))))) [])),(PatternDecl (155,3) (TuplePattern [(VariablePattern (Ident "xs" 183)),(VariablePattern (Ident "ys" 183))]) (SimpleRhs (155,13) (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "break" 0))) (Variable (QualIdent (Just "StyledText") (Ident "special" 0)))) (Variable (QualIdent Nothing (Ident "s" 182)))) [])),(PatternDecl (156,3) (VariablePattern (Ident "code" 183)) (SimpleRhs (156,10) (Apply (Variable (QualIdent (Just "Prelude") (Ident "ord" 0))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "head" 0))) (Variable (QualIdent Nothing (Ident "ys" 183)))))) [])),(PatternDecl (157,3) (VariablePattern (Ident "g" 183)) (SimpleRhs (157,7) (InfixApply (Variable (QualIdent Nothing (Ident "cs" 182))) (InfixOp (QualIdent (Just "Prelude") (Ident "!!" 0))) (Paren (InfixApply (Variable (QualIdent Nothing (Ident "code" 183))) (InfixOp (QualIdent (Just "Prelude") (Ident "-" 0))) (Literal (Int (Ident "_" 188) 16))))) []))]))])
,(TypeSig (160,1) [(Ident "printStyledText" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(TupleType [])])))
,(FunctionDecl (161,1) (Ident "printStyledText" 0) [(Equation (161,1) (FunLhs (Ident "printStyledText" 0) []) (SimpleRhs (161,19) (InfixApply (Variable (QualIdent (Just "Prelude") (Ident "putStrLn" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "." 0))) (Variable (QualIdent (Just "StyledText") (Ident "toAnsiString" 0)))) []))])
,(TypeSig (163,1) [(Ident "toAnsiString" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "String" 0)) [])))
,(FunctionDecl (164,1) (Ident "toAnsiString" 0) [(Equation (164,1) (FunLhs (Ident "toAnsiString" 0) []) (SimpleRhs (165,5) (Apply (Apply (Apply (Apply (Apply (Variable (QualIdent (Just "StyledText") (Ident "interpret" 0))) (List [(Variable (QualIdent (Just "AnsiCodes") (Ident "bold" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "underline" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "black" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "blue" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "cyan" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "green" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "magenta" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "red" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "white" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "yellow" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "bgBlack" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "bgBlue" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "bgCyan" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "bgGreen" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "bgMagenta" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "bgRed" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "bgWhite" 0))),(Variable (QualIdent (Just "AnsiCodes") (Ident "bgYellow" 0)))])) (Variable (QualIdent (Just "Prelude") (Ident "++" 0)))) (Variable (QualIdent (Just "Prelude") (Ident "." 0)))) (Variable (QualIdent (Just "Prelude") (Ident "id" 0)))) (List [(Tuple [(Variable (QualIdent (Just "Prelude") (Ident "id" 0))),(Variable (QualIdent (Just "Prelude") (Ident "id" 0))),(Variable (QualIdent (Just "Prelude") (Ident "id" 0)))])])) []))])
]
