Prog "Pretty" ["Dequeue","Prelude"] [TypeSyn ("Pretty","Layout") Private [] (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]),TypeSyn ("Pretty","Horizontal") Private [] (TCons ("Prelude","Bool") []),TypeSyn ("Pretty","Remaining") Private [] (TCons ("Prelude","Int") []),TypeSyn ("Pretty","Width") Private [] (TCons ("Prelude","Int") []),TypeSyn ("Pretty","Position") Private [] (TCons ("Prelude","Int") []),TypeSyn ("Pretty","StartPosition") Private [] (TCons ("Prelude","Int") []),TypeSyn ("Pretty","EndPosition") Private [] (TCons ("Prelude","Int") []),TypeSyn ("Pretty","Out") Private [] (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))),TypeSyn ("Pretty","OutGroupPrefix") Private [] (FuncType (TCons ("Prelude","Bool") []) (FuncType (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))))),TypeSyn ("Pretty","Margins") Private [] (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]),Type ("Pretty","Doc") Public [] []] [Func ("Pretty","empty") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","text") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","linesep") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","line") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","linebreak") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","softline") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","softbreak") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","group") 1 Public (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","nest") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("Pretty","hang") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("Pretty","align") 0 Public (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","combine") 3 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])))) (Rule [] (Var 0)),Func ("Pretty","<>") 2 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("Pretty","<+>") 0 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("Pretty","<$>") 0 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("Pretty","</>") 0 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("Pretty","<$$>") 0 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("Pretty","<//>") 0 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("Pretty","compose") 2 Public (FuncType (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") []))) (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("Pretty","hsep") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","vsep") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","fillSep") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","sep") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","hcat") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","vcat") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","fillCat") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","cat") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","punctuate") 2 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]))) (Rule [] (Var 0)),Func ("Pretty","encloseSep") 4 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") []))))) (Rule [] (Var 0)),Func ("Pretty","hEncloseSep") 4 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") []))))) (Rule [] (Var 0)),Func ("Pretty","fillEncloseSep") 4 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") []))))) (Rule [] (Var 0)),Func ("Pretty","list") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","tupled") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","semiBraces") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","enclose") 3 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])))) (Rule [] (Var 0)),Func ("Pretty","squotes") 0 Public (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","dquotes") 0 Public (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","bquotes") 0 Public (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","parens") 0 Public (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","angles") 0 Public (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","braces") 0 Public (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","brackets") 0 Public (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","char") 1 Public (FuncType (TCons ("Prelude","Char") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","string") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","int") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","float") 1 Public (FuncType (TCons ("Prelude","Float") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("Pretty","lparen") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","rparen") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","langle") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","rangle") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","lbrace") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","rbrace") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","lbracket") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","rbracket") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","squote") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","dquote") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","semi") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","colon") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","comma") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","space") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","dot") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","backslash") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","equals") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("Pretty","pretty") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0))] [Op ("Pretty","<>") InfixlOp 1,Op ("Pretty","<+>") InfixlOp 1,Op ("Pretty","<$>") InfixlOp 1,Op ("Pretty","</>") InfixlOp 1,Op ("Pretty","<$$>") InfixlOp 1,Op ("Pretty","<//>") InfixlOp 1]