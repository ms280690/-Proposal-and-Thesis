Prog "PrettyFlat" ["Char","FlatCurry","FlatCurryGoodies","Maybe","Prelude","Pretty","StyledText","System"] [TypeSyn ("PrettyFlat","Precs") Public [] (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") []]])] [Func ("PrettyFlat","prelude") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Var 0)),Func ("PrettyFlat","arrow") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("PrettyFlat","bar") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("PrettyFlat","dcolon") 0 Public (TCons ("Pretty","Doc") []) (Rule [] (Var 0)),Func ("PrettyFlat","precFillEncloseSep") 6 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") []))))))) (Rule [] (Var 0)),Func ("PrettyFlat","isInfixName") 1 Public (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("PrettyFlat","infixIDs") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Var 0)),Func ("PrettyFlat","isTupleName") 1 Public (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("PrettyFlat","showStyledProg") 0 Public (FuncType (TCons ("FlatCurry","Prog") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("PrettyFlat","prettyProg") 1 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("FlatCurry","Prog") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0)),Func ("PrettyFlat","prettyTypeExpr") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("FlatCurry","TypeExpr") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0)),Func ("PrettyFlat","prettyTypes") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","TypeDecl") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0)),Func ("PrettyFlat","prettyOps") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","OpDecl") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("PrettyFlat","showProg") 0 Public (FuncType (TCons ("FlatCurry","Prog") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("PrettyFlat","printStyledProg") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("PrettyFlat","mainPrint") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (Rule [] (Var 0)),Func ("PrettyFlat","printProg") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("PrettyFlat","keyword") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","consname") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","operator") 0 Public (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","literal") 0 Public (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","marked") 0 Public (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","block") 0 Public (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","def") 3 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") [])))) (Rule [] (Var 0)),Func ("PrettyFlat","app") 2 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("PrettyFlat","layout") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","qname") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("PrettyFlat","correctName") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("PrettyFlat","<$>>") 2 Public (FuncType (TCons ("Pretty","Doc") []) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("PrettyFlat","progDoc") 1 Public (FuncType (TCons ("FlatCurry","Prog") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","precs") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","OpDecl") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") []]])) (Rule [] (Var 0)),Func ("PrettyFlat","exportedNames") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("FlatCurry","Prog") []) (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]))) (Rule [] (Var 0)),Func ("PrettyFlat","moduleHeaderDoc") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("PrettyFlat","exportsDoc") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Pretty","Doc") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","impsDoc") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","opsDoc") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","OpDecl") []]) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","opDoc") 1 Public (FuncType (TCons ("FlatCurry","OpDecl") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","typesDoc") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","TypeDecl") []]) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("PrettyFlat","typeDoc") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("FlatCurry","TypeDecl") []) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("PrettyFlat","varDoc") 0 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","tvarDoc") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","consDeclsDoc") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","ConsDecl") []]) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("PrettyFlat","consDeclDoc") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("FlatCurry","ConsDecl") []) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("PrettyFlat","typeExprDoc") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("FlatCurry","TypeExpr") []) (TCons ("Pretty","Doc") [])))) (Rule [] (Var 0)),Func ("PrettyFlat","par") 1 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Pretty","Doc") []) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("PrettyFlat","funcsDoc") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []]) (TCons ("Pretty","Doc") [])))) (Rule [] (Var 0)),Func ("PrettyFlat","funcDoc") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("FlatCurry","FuncDecl") []) (TCons ("Pretty","Doc") [])))) (Rule [] (Var 0)),Func ("PrettyFlat","funcTypeDeclDoc") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("FlatCurry","TypeExpr") []) (TCons ("Pretty","Doc") [])))) (Rule [] (Var 0)),Func ("PrettyFlat","funcTypeDoc") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("FlatCurry","TypeExpr") []) (TCons ("Pretty","Doc") [])))) (Rule [] (Var 0)),Func ("PrettyFlat","ruleDoc") 4 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("FlatCurry","Rule") []) (TCons ("Pretty","Doc") []))))) (Rule [] (Var 0)),Func ("PrettyFlat","expDoc") 5 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") []]]) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("FlatCurry","Expr") []) (TCons ("Pretty","Doc") [])))))) (Rule [] (Var 0)),Func ("PrettyFlat","expDoc2") 5 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") []]]) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("FlatCurry","Expr") []) (TCons ("Pretty","Doc") [])))))) (Rule [] (Var 0)),Func ("PrettyFlat","branchDoc") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("FlatCurry","BranchExpr") []) (TCons ("Pretty","Doc") [])))) (Rule [] (Var 0)),Func ("PrettyFlat","caseTypeDoc") 1 Public (FuncType (TCons ("FlatCurry","CaseType") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","patternDoc") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("FlatCurry","Pattern") []) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("PrettyFlat","letBindsDoc") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("FlatCurry","Expr") []]]) (TCons ("Pretty","Doc") [])))) (Rule [] (Var 0)),Func ("PrettyFlat","letBindDoc") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("FlatCurry","Expr") []]) (TCons ("Pretty","Doc") [])))) (Rule [] (Var 0)),Func ("PrettyFlat","litDoc") 1 Public (FuncType (TCons ("FlatCurry","Literal") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyFlat","quoteChar") 1 Public (FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("PrettyFlat","specialChars") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Char") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (Rule [] (Var 0)),Func ("PrettyFlat","toString") 1 Public (FuncType (TCons ("FlatCurry","Expr") []) (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("PrettyFlat","toList") 1 Public (FuncType (TCons ("FlatCurry","Expr") []) (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("FlatCurry","Expr") []]])) (Rule [] (Var 0)),Func ("PrettyFlat","elimApp") 0 Public (FuncType (TCons ("FlatCurry","Expr") []) (TCons ("FlatCurry","Expr") [])) (Rule [] (Var 0))] []