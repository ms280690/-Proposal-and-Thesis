Module "AnsiCodes"
(Just (Exporting (10,17) [(Export (QualIdent Nothing (Ident "cursorPos" 0))),(Export (QualIdent Nothing (Ident "cursorHome" 0))),(Export (QualIdent Nothing (Ident "cursorUp" 0))),(Export (QualIdent Nothing (Ident "cursorDown" 0))),(Export (QualIdent Nothing (Ident "cursorFwd" 0))),(Export (QualIdent Nothing (Ident "cursorBack" 0))),(Export (QualIdent Nothing (Ident "saveCursor" 0))),(Export (QualIdent Nothing (Ident "restoreCursor" 0))),(Export (QualIdent Nothing (Ident "clear" 0))),(Export (QualIdent Nothing (Ident "eraseLine" 0))),(Export (QualIdent Nothing (Ident "bold" 0))),(Export (QualIdent Nothing (Ident "underline" 0))),(Export (QualIdent Nothing (Ident "revColors" 0))),(Export (QualIdent Nothing (Ident "concealed" 0))),(Export (QualIdent Nothing (Ident "black" 0))),(Export (QualIdent Nothing (Ident "red" 0))),(Export (QualIdent Nothing (Ident "green" 0))),(Export (QualIdent Nothing (Ident "yellow" 0))),(Export (QualIdent Nothing (Ident "blue" 0))),(Export (QualIdent Nothing (Ident "cyan" 0))),(Export (QualIdent Nothing (Ident "magenta" 0))),(Export (QualIdent Nothing (Ident "white" 0))),(Export (QualIdent Nothing (Ident "bgBlack" 0))),(Export (QualIdent Nothing (Ident "bgRed" 0))),(Export (QualIdent Nothing (Ident "bgGreen" 0))),(Export (QualIdent Nothing (Ident "bgYellow" 0))),(Export (QualIdent Nothing (Ident "bgBlue" 0))),(Export (QualIdent Nothing (Ident "bgCyan" 0))),(Export (QualIdent Nothing (Ident "bgMagenta" 0))),(Export (QualIdent Nothing (Ident "bgWhite" 0))),(Export (QualIdent Nothing (Ident "ansiLength" 0)))]))
[(ImportDecl (1,1) "Prelude" False Nothing Nothing)
,(ImportDecl (30,1) "Char" False Nothing Nothing)
,(ImportDecl (31,1) "List" False Nothing Nothing)
,(FunctionDecl (34,1) (Ident "esc" 0) [(Equation (34,1) (FunLhs (Ident "esc" 0) []) (SimpleRhs (34,7) (Apply (Variable (QualIdent (Just "Prelude") (Ident "chr" 0))) (Literal (Int (Ident "_" 4) 27))) []))])
,(FunctionDecl (39,1) (Ident "cmd" 0) [(Equation (39,1) (FunLhs (Ident "cmd" 0) [(VariablePattern (Ident "s" 5))]) (SimpleRhs (39,9) (InfixApply (Variable (QualIdent (Just "AnsiCodes") (Ident "esc" 0))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (InfixApply (Literal (String "[")) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (Variable (QualIdent Nothing (Ident "s" 5))))) []))])
,(FunctionDecl (42,1) (Ident "cursorPos" 0) [(Equation (42,1) (FunLhs (Ident "cursorPos" 0) [(VariablePattern (Ident "r" 7)),(VariablePattern (Ident "c" 7))]) (SimpleRhs (42,17) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "cmd" 0))) (Paren (InfixApply (Apply (Variable (QualIdent (Just "Prelude") (Ident "show" 0))) (Variable (QualIdent Nothing (Ident "r" 7)))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Literal (String ";")) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Apply (Variable (QualIdent (Just "Prelude") (Ident "show" 0))) (Variable (QualIdent Nothing (Ident "c" 7)))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (Literal (String "H"))))))) []))])
,(FunctionDecl (45,1) (Ident "cursorHome" 0) [(Equation (45,1) (FunLhs (Ident "cursorHome" 0) []) (SimpleRhs (45,14) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "cmd" 0))) (Literal (String "H"))) []))])
,(TypeSig (47,1) [(Ident "moveCursor" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "String" 0)) []))))
,(FunctionDecl (48,1) (Ident "moveCursor" 0) [(Equation (48,1) (FunLhs (Ident "moveCursor" 0) [(VariablePattern (Ident "s" 11)),(VariablePattern (Ident "n" 11))]) (SimpleRhs (48,18) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "cmd" 0))) (Paren (InfixApply (Apply (Variable (QualIdent (Just "Prelude") (Ident "show" 0))) (Variable (QualIdent Nothing (Ident "n" 11)))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (Variable (QualIdent Nothing (Ident "s" 11)))))) []))])
,(FunctionDecl (51,1) (Ident "cursorUp" 0) [(Equation (51,1) (FunLhs (Ident "cursorUp" 0) []) (SimpleRhs (51,12) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "moveCursor" 0))) (Literal (String "A"))) []))])
,(FunctionDecl (54,1) (Ident "cursorDown" 0) [(Equation (54,1) (FunLhs (Ident "cursorDown" 0) []) (SimpleRhs (54,14) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "moveCursor" 0))) (Literal (String "B"))) []))])
,(FunctionDecl (57,1) (Ident "cursorFwd" 0) [(Equation (57,1) (FunLhs (Ident "cursorFwd" 0) []) (SimpleRhs (57,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "moveCursor" 0))) (Literal (String "C"))) []))])
,(FunctionDecl (60,1) (Ident "cursorBack" 0) [(Equation (60,1) (FunLhs (Ident "cursorBack" 0) []) (SimpleRhs (60,14) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "moveCursor" 0))) (Literal (String "D"))) []))])
,(FunctionDecl (63,1) (Ident "saveCursor" 0) [(Equation (63,1) (FunLhs (Ident "saveCursor" 0) []) (SimpleRhs (63,14) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "cmd" 0))) (Literal (String "s"))) []))])
,(FunctionDecl (66,1) (Ident "restoreCursor" 0) [(Equation (66,1) (FunLhs (Ident "restoreCursor" 0) []) (SimpleRhs (66,17) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "cmd" 0))) (Literal (String "u"))) []))])
,(FunctionDecl (72,1) (Ident "clear" 0) [(Equation (72,1) (FunLhs (Ident "clear" 0) []) (SimpleRhs (72,9) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "cmd" 0))) (Literal (String "2J"))) []))])
,(FunctionDecl (75,1) (Ident "eraseLine" 0) [(Equation (75,1) (FunLhs (Ident "eraseLine" 0) []) (SimpleRhs (75,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "cmd" 0))) (Literal (String "K"))) []))])
,(FunctionDecl (78,1) (Ident "mode" 0) [(Equation (78,1) (FunLhs (Ident "mode" 0) [(VariablePattern (Ident "n" 29)),(VariablePattern (Ident "s" 29))]) (SimpleRhs (78,12) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "cmd" 0))) (Paren (InfixApply (Apply (Variable (QualIdent (Just "Prelude") (Ident "show" 0))) (Variable (QualIdent Nothing (Ident "n" 29)))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Literal (String "m")) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Variable (QualIdent Nothing (Ident "s" 29))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (IfThenElse (Apply (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "isSuffixOf" 0))) (Variable (QualIdent Nothing (Ident "end" 30)))) (Variable (QualIdent Nothing (Ident "s" 29)))) (Literal (String "")) (Variable (QualIdent Nothing (Ident "end" 30))))))))) [(PatternDecl (80,3) (VariablePattern (Ident "end" 30)) (SimpleRhs (80,9) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "cmd" 0))) (Literal (String "0m"))) []))]))])
,(FunctionDecl (83,1) (Ident "isSuffixOf" 0) [(Equation (83,1) (FunLhs (Ident "isSuffixOf" 0) [(VariablePattern (Ident "s" 32))]) (SimpleRhs (83,16) (InfixApply (Apply (Variable (QualIdent (Just "List") (Ident "isPrefixOf" 0))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "reverse" 0))) (Variable (QualIdent Nothing (Ident "s" 32)))))) (InfixOp (QualIdent (Just "Prelude") (Ident "." 0))) (Variable (QualIdent (Just "Prelude") (Ident "reverse" 0)))) []))])
,(FunctionDecl (88,1) (Ident "bold" 0) [(Equation (88,1) (FunLhs (Ident "bold" 0) []) (SimpleRhs (88,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 36) 1))) []))])
,(FunctionDecl (89,1) (Ident "underline" 0) [(Equation (89,1) (FunLhs (Ident "underline" 0) []) (SimpleRhs (89,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 39) 4))) []))])
,(FunctionDecl (90,1) (Ident "revColors" 0) [(Equation (90,1) (FunLhs (Ident "revColors" 0) []) (SimpleRhs (90,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 42) 7))) []))])
,(FunctionDecl (91,1) (Ident "concealed" 0) [(Equation (91,1) (FunLhs (Ident "concealed" 0) []) (SimpleRhs (91,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 45) 8))) []))])
,(FunctionDecl (92,1) (Ident "black" 0) [(Equation (92,1) (FunLhs (Ident "black" 0) []) (SimpleRhs (92,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 48) 30))) []))])
,(FunctionDecl (93,1) (Ident "red" 0) [(Equation (93,1) (FunLhs (Ident "red" 0) []) (SimpleRhs (93,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 51) 31))) []))])
,(FunctionDecl (94,1) (Ident "green" 0) [(Equation (94,1) (FunLhs (Ident "green" 0) []) (SimpleRhs (94,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 54) 32))) []))])
,(FunctionDecl (95,1) (Ident "yellow" 0) [(Equation (95,1) (FunLhs (Ident "yellow" 0) []) (SimpleRhs (95,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 57) 33))) []))])
,(FunctionDecl (96,1) (Ident "blue" 0) [(Equation (96,1) (FunLhs (Ident "blue" 0) []) (SimpleRhs (96,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 60) 34))) []))])
,(FunctionDecl (97,1) (Ident "magenta" 0) [(Equation (97,1) (FunLhs (Ident "magenta" 0) []) (SimpleRhs (97,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 63) 35))) []))])
,(FunctionDecl (98,1) (Ident "cyan" 0) [(Equation (98,1) (FunLhs (Ident "cyan" 0) []) (SimpleRhs (98,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 66) 36))) []))])
,(FunctionDecl (99,1) (Ident "white" 0) [(Equation (99,1) (FunLhs (Ident "white" 0) []) (SimpleRhs (99,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 69) 37))) []))])
,(FunctionDecl (100,1) (Ident "bgBlack" 0) [(Equation (100,1) (FunLhs (Ident "bgBlack" 0) []) (SimpleRhs (100,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 72) 40))) []))])
,(FunctionDecl (101,1) (Ident "bgRed" 0) [(Equation (101,1) (FunLhs (Ident "bgRed" 0) []) (SimpleRhs (101,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 75) 41))) []))])
,(FunctionDecl (102,1) (Ident "bgGreen" 0) [(Equation (102,1) (FunLhs (Ident "bgGreen" 0) []) (SimpleRhs (102,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 78) 42))) []))])
,(FunctionDecl (103,1) (Ident "bgYellow" 0) [(Equation (103,1) (FunLhs (Ident "bgYellow" 0) []) (SimpleRhs (103,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 81) 43))) []))])
,(FunctionDecl (104,1) (Ident "bgBlue" 0) [(Equation (104,1) (FunLhs (Ident "bgBlue" 0) []) (SimpleRhs (104,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 84) 44))) []))])
,(FunctionDecl (105,1) (Ident "bgMagenta" 0) [(Equation (105,1) (FunLhs (Ident "bgMagenta" 0) []) (SimpleRhs (105,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 87) 45))) []))])
,(FunctionDecl (106,1) (Ident "bgCyan" 0) [(Equation (106,1) (FunLhs (Ident "bgCyan" 0) []) (SimpleRhs (106,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 90) 46))) []))])
,(FunctionDecl (107,1) (Ident "bgWhite" 0) [(Equation (107,1) (FunLhs (Ident "bgWhite" 0) []) (SimpleRhs (107,13) (Apply (Variable (QualIdent (Just "AnsiCodes") (Ident "mode" 0))) (Literal (Int (Ident "_" 93) 47))) []))])
,(TypeSig (112,1) [(Ident "ansiLength" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "Int" 0)) [])))
,(FunctionDecl (113,1) (Ident "ansiLength" 0) [(Equation (113,1) (FunLhs (Ident "ansiLength" 0) [(VariablePattern (Ident "s" 94))]) (SimpleRhs (113,16) (Apply (Apply (Variable (QualIdent Nothing (Ident "aux" 95))) (Variable (QualIdent Nothing (Ident "s" 94)))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "length" 0))) (Variable (QualIdent Nothing (Ident "s" 94)))))) [(FunctionDecl (115,3) (Ident "aux" 95) [(Equation (115,3) (FunLhs (Ident "aux" 95) [(ListPattern []),(VariablePattern (Ident "n" 96))]) (SimpleRhs (115,14) (Variable (QualIdent Nothing (Ident "n" 96))) [])),(Equation (116,3) (FunLhs (Ident "aux" 95) [(ParenPattern (InfixPattern (VariablePattern (Ident "c" 98)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "cs" 98)))),(VariablePattern (Ident "n" 98))]) (GuardedRhs [(CondExpr (116,16) (InfixApply (InfixApply (Variable (QualIdent Nothing (Ident "c" 98))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))) (Variable (QualIdent (Just "AnsiCodes") (Ident "esc" 0)))) (InfixOp (QualIdent (Just "Prelude") (Ident "&&" 0))) (Apply (Variable (QualIdent (Just "Char") (Ident "isDigit" 0))) (Paren (InfixApply (Variable (QualIdent Nothing (Ident "cs" 98))) (InfixOp (QualIdent (Just "Prelude") (Ident "!!" 0))) (Literal (Int (Ident "_" 100) 2)))))) (Apply (Apply (Variable (QualIdent Nothing (Ident "aux" 95))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "tail" 0))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "tail" 0))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "tail" 0))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "tail" 0))) (Variable (QualIdent Nothing (Ident "cs" 98)))))))))))) (Paren (InfixApply (Variable (QualIdent Nothing (Ident "n" 98))) (InfixOp (QualIdent (Just "Prelude") (Ident "-" 0))) (Literal (Int (Ident "_" 101) 5)))))),(CondExpr (118,16) (InfixApply (Variable (QualIdent Nothing (Ident "c" 98))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))) (Variable (QualIdent (Just "AnsiCodes") (Ident "esc" 0)))) (Apply (Apply (Variable (QualIdent Nothing (Ident "aux" 95))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "tail" 0))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "tail" 0))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "tail" 0))) (Variable (QualIdent Nothing (Ident "cs" 98)))))))))) (Paren (InfixApply (Variable (QualIdent Nothing (Ident "n" 98))) (InfixOp (QualIdent (Just "Prelude") (Ident "-" 0))) (Literal (Int (Ident "_" 102) 4)))))),(CondExpr (119,16) (Variable (QualIdent (Just "Prelude") (Ident "otherwise" 0))) (Apply (Apply (Variable (QualIdent Nothing (Ident "aux" 95))) (Variable (QualIdent Nothing (Ident "cs" 98)))) (Variable (QualIdent Nothing (Ident "n" 98)))))] []))])]))])
]
