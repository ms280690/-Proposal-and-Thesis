Prog "Dequeue" ["Prelude"] [Type ("Dequeue","Queue") Public [0] []] [Func ("Dequeue","empty") 0 Public (TCons ("Dequeue","Queue") [TVar 0]) (Rule [] (Var 0)),Func ("Dequeue","isEmpty") 1 Public (FuncType (TCons ("Dequeue","Queue") [TVar 0]) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Dequeue","deqHead") 1 Public (FuncType (TCons ("Dequeue","Queue") [TVar 0]) (TVar 0)) (Rule [] (Var 0)),Func ("Dequeue","deqLast") 1 Public (FuncType (TCons ("Dequeue","Queue") [TVar 0]) (TVar 0)) (Rule [] (Var 0)),Func ("Dequeue","cons") 2 Public (FuncType (TVar 0) (FuncType (TCons ("Dequeue","Queue") [TVar 0]) (TCons ("Dequeue","Queue") [TVar 0]))) (Rule [] (Var 0)),Func ("Dequeue","deqTail") 1 Public (FuncType (TCons ("Dequeue","Queue") [TVar 0]) (TCons ("Dequeue","Queue") [TVar 0])) (Rule [] (Var 0)),Func ("Dequeue","snoc") 2 Public (FuncType (TVar 0) (FuncType (TCons ("Dequeue","Queue") [TVar 0]) (TCons ("Dequeue","Queue") [TVar 0]))) (Rule [] (Var 0)),Func ("Dequeue","deqInit") 1 Public (FuncType (TCons ("Dequeue","Queue") [TVar 0]) (TCons ("Dequeue","Queue") [TVar 0])) (Rule [] (Var 0)),Func ("Dequeue","deqReverse") 1 Public (FuncType (TCons ("Dequeue","Queue") [TVar 0]) (TCons ("Dequeue","Queue") [TVar 0])) (Rule [] (Var 0)),Func ("Dequeue","listToDeq") 1 Public (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Dequeue","Queue") [TVar 0])) (Rule [] (Var 0)),Func ("Dequeue","deqToList") 1 Public (FuncType (TCons ("Dequeue","Queue") [TVar 0]) (TCons ("Prelude","[]") [TVar 0])) (Rule [] (Var 0)),Func ("Dequeue","deqLength") 1 Public (FuncType (TCons ("Dequeue","Queue") [TVar 0]) (TCons ("Prelude","Int") [])) (Rule [] (Var 0)),Func ("Dequeue","rotate") 1 Public (FuncType (TCons ("Dequeue","Queue") [TVar 0]) (TCons ("Dequeue","Queue") [TVar 0])) (Rule [] (Var 0)),Func ("Dequeue","matchHead") 1 Public (FuncType (TCons ("Dequeue","Queue") [TVar 0]) (TCons ("Prelude","Maybe") [TCons ("Prelude","(,)") [TVar 0,TCons ("Dequeue","Queue") [TVar 0]]])) (Rule [] (Var 0)),Func ("Dequeue","matchLast") 1 Public (FuncType (TCons ("Dequeue","Queue") [TVar 0]) (TCons ("Prelude","Maybe") [TCons ("Prelude","(,)") [TVar 0,TCons ("Dequeue","Queue") [TVar 0]]])) (Rule [] (Var 0))] []