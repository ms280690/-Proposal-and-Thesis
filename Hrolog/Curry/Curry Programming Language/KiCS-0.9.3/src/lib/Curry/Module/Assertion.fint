Prog "Assertion" ["IO","List","Prelude"] [Type ("Assertion","Assertion") Public [0] [Cons ("Assertion","AssertTrue") 2 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") []],Cons ("Assertion","AssertEqual") 3 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TVar 0,TVar 0],Cons ("Assertion","AssertValues") 3 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TVar 0,TCons ("Prelude","[]") [TVar 0]],Cons ("Assertion","AssertSolutions") 3 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 0) (TCons ("Prelude","Success") []),TCons ("Prelude","[]") [TVar 0]],Cons ("Assertion","AssertIO") 3 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","IO") [TVar 0],TVar 0],Cons ("Assertion","AssertEqualIO") 3 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","IO") [TVar 0],TCons ("Prelude","IO") [TVar 0]]],Type ("Assertion","ProtocolMsg") Public [] [Cons ("Assertion","TestModule") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Assertion","TestCase") 2 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") []],Cons ("Assertion","TestFinished") 0 Public [],Cons ("Assertion","TestCompileError") 0 Public []]] [Func ("Assertion","seqStrActions") 2 Public (FuncType (TCons ("Prelude","IO") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") []]]) (FuncType (TCons ("Prelude","IO") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") []]]) (TCons ("Prelude","IO") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") []]]))) (Rule [] (Var 0)),Func ("Assertion","checkAssertion") 2 Public (FuncType (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") []]) (TCons ("Prelude","IO") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") []]])) (FuncType (TCons ("Assertion","Assertion") [TVar 0]) (TCons ("Prelude","IO") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") []]]))) (Rule [] (Var 0)),Func ("Assertion","writeAssertResult") 1 Public (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("Assertion","showTestMod") 2 Public (FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("Assertion","showTestCase") 2 Public (FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") []]) (TCons ("Prelude","IO") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") []]]))) (Rule [] (Var 0)),Func ("Assertion","showTestEnd") 1 Public (FuncType (TCons ("IO","Handle") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("Assertion","showTestCompileError") 1 Public (FuncType (TCons ("IO","Handle") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0))] [Op ("Assertion","seqStrActions") InfixlOp 1]