Prog "Maybe" ["Prelude"] [Type ("Prelude","Maybe") Public [0] [Cons ("Prelude","Nothing") 0 Public [],Cons ("Prelude","Just") 1 Public [TVar 0]]] [Func ("Prelude","maybe") 3 Public (FuncType (TVar 0) (FuncType (FuncType (TVar 1) (TVar 0)) (FuncType (TCons ("Prelude","Maybe") [TVar 1]) (TVar 0)))) (Rule [] (Var 0)),Func ("Maybe","isJust") 1 Public (FuncType (TCons ("Prelude","Maybe") [TVar 0]) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Maybe","isNothing") 1 Public (FuncType (TCons ("Prelude","Maybe") [TVar 0]) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Maybe","fromJust") 1 Public (FuncType (TCons ("Prelude","Maybe") [TVar 0]) (TVar 0)) (Rule [] (Var 0)),Func ("Maybe","fromMaybe") 2 Public (FuncType (TVar 0) (FuncType (TCons ("Prelude","Maybe") [TVar 0]) (TVar 0))) (Rule [] (Var 0)),Func ("Maybe","maybeToList") 1 Public (FuncType (TCons ("Prelude","Maybe") [TVar 0]) (TCons ("Prelude","[]") [TVar 0])) (Rule [] (Var 0)),Func ("Maybe","listToMaybe") 1 Public (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","Maybe") [TVar 0])) (Rule [] (Var 0)),Func ("Maybe","catMaybes") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Maybe") [TVar 0]]) (TCons ("Prelude","[]") [TVar 0])) (Rule [] (Var 0)),Func ("Maybe","mapMaybe") 1 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","Maybe") [TVar 1])) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 1]))) (Rule [] (Var 0)),Func ("Maybe",">>-") 2 Public (FuncType (TCons ("Prelude","Maybe") [TVar 0]) (FuncType (FuncType (TVar 0) (TCons ("Prelude","Maybe") [TVar 1])) (TCons ("Prelude","Maybe") [TVar 1]))) (Rule [] (Var 0)),Func ("Maybe","sequenceMaybe") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Maybe") [TVar 0]]) (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TVar 0]])) (Rule [] (Var 0)),Func ("Maybe","mapMMaybe") 1 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","Maybe") [TVar 1])) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TVar 1]]))) (Rule [] (Var 0))] [Op ("Maybe",">>-") InfixlOp 1]