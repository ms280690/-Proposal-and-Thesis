Prog "AnsiCodes" ["Char","List","Prelude"] [] [Func ("AnsiCodes","esc") 0 Private (TCons ("Prelude","Char") []) (Rule [] (Comb FuncCall ("Prelude","chr") [Lit (Intc  27)])),Func ("AnsiCodes","cmd") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [1] (Comb ConsCall ("Prelude",":") [Comb FuncCall ("AnsiCodes","esc") [],Comb FuncCall ("Prelude","++") [Comb ConsCall ("Prelude",":") [Lit (Charc  '['),Comb ConsCall ("Prelude","[]") []],Var 1]])),Func ("AnsiCodes","cursorPos") 2 Public (FuncType (TVar 0) (FuncType (TVar 1) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [1,2] (Comb FuncCall ("AnsiCodes","cmd") [Comb FuncCall ("Prelude","++") [Comb FuncCall ("Prelude","show") [Var 1],Comb FuncCall ("Prelude","++") [Comb ConsCall ("Prelude",":") [Lit (Charc  ';'),Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("Prelude","++") [Comb FuncCall ("Prelude","show") [Var 2],Comb ConsCall ("Prelude",":") [Lit (Charc  'H'),Comb ConsCall ("Prelude","[]") []]]]]])),Func ("AnsiCodes","cursorHome") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Comb FuncCall ("AnsiCodes","cmd") [Comb ConsCall ("Prelude",":") [Lit (Charc  'H'),Comb ConsCall ("Prelude","[]") []]])),Func ("AnsiCodes","moveCursor") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [1,2] (Comb FuncCall ("AnsiCodes","cmd") [Comb FuncCall ("Prelude","++") [Comb FuncCall ("Prelude","show") [Var 2],Var 1]])),Func ("AnsiCodes","cursorUp") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","moveCursor") [Comb ConsCall ("Prelude",":") [Lit (Charc  'A'),Comb ConsCall ("Prelude","[]") []]])),Func ("AnsiCodes","cursorDown") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","moveCursor") [Comb ConsCall ("Prelude",":") [Lit (Charc  'B'),Comb ConsCall ("Prelude","[]") []]])),Func ("AnsiCodes","cursorFwd") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","moveCursor") [Comb ConsCall ("Prelude",":") [Lit (Charc  'C'),Comb ConsCall ("Prelude","[]") []]])),Func ("AnsiCodes","cursorBack") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","moveCursor") [Comb ConsCall ("Prelude",":") [Lit (Charc  'D'),Comb ConsCall ("Prelude","[]") []]])),Func ("AnsiCodes","saveCursor") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Comb FuncCall ("AnsiCodes","cmd") [Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude","[]") []]])),Func ("AnsiCodes","restoreCursor") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Comb FuncCall ("AnsiCodes","cmd") [Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude","[]") []]])),Func ("AnsiCodes","clear") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Comb FuncCall ("AnsiCodes","cmd") [Comb ConsCall ("Prelude",":") [Lit (Charc  '2'),Comb ConsCall ("Prelude",":") [Lit (Charc  'J'),Comb ConsCall ("Prelude","[]") []]]])),Func ("AnsiCodes","eraseLine") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Comb FuncCall ("AnsiCodes","cmd") [Comb ConsCall ("Prelude",":") [Lit (Charc  'K'),Comb ConsCall ("Prelude","[]") []]])),Func ("AnsiCodes","mode") 2 Private (FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [1,2] (Let [(3,Comb FuncCall ("AnsiCodes","cmd") [Comb ConsCall ("Prelude",":") [Lit (Charc  '0'),Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude","[]") []]]])] (Comb FuncCall ("AnsiCodes","cmd") [Comb FuncCall ("Prelude","++") [Comb FuncCall ("Prelude","show") [Var 1],Comb FuncCall ("Prelude","++") [Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("Prelude","++") [Var 2,Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("AnsiCodes","isSuffixOf") [Var 3],Var 2]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","[]") []),Branch (Pattern ("Prelude","False") []) (Var 3)]]]]]))),Func ("AnsiCodes","isSuffixOf") 1 Private (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","Bool") []))) (Rule [1] (Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("List","isPrefixOf") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","reverse") [],Var 1]],Comb FuncCall ("Prelude","reverse") []])),Func ("AnsiCodes","bold") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  1)])),Func ("AnsiCodes","underline") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  4)])),Func ("AnsiCodes","revColors") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  7)])),Func ("AnsiCodes","concealed") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  8)])),Func ("AnsiCodes","black") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  30)])),Func ("AnsiCodes","red") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  31)])),Func ("AnsiCodes","green") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  32)])),Func ("AnsiCodes","yellow") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  33)])),Func ("AnsiCodes","blue") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  34)])),Func ("AnsiCodes","magenta") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  35)])),Func ("AnsiCodes","cyan") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  36)])),Func ("AnsiCodes","white") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  37)])),Func ("AnsiCodes","bgBlack") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  40)])),Func ("AnsiCodes","bgRed") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  41)])),Func ("AnsiCodes","bgGreen") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  42)])),Func ("AnsiCodes","bgYellow") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  43)])),Func ("AnsiCodes","bgBlue") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  44)])),Func ("AnsiCodes","bgMagenta") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  45)])),Func ("AnsiCodes","bgCyan") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  46)])),Func ("AnsiCodes","bgWhite") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("AnsiCodes","mode") [Lit (Intc  47)])),Func ("AnsiCodes","ansiLength") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Int") [])) (Rule [1] (Comb FuncCall ("AnsiCodes","ansiLength.aux.95") [Var 1,Comb FuncCall ("Prelude","length") [Var 1]])),Func ("AnsiCodes","ansiLength.aux.95") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Int") []))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","[]") []) (Var 2),Branch (Pattern ("Prelude",":") [3,4]) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 3,Comb FuncCall ("AnsiCodes","esc") []],Comb FuncCall ("Char","isDigit") [Comb FuncCall ("Prelude","!!") [Var 4,Lit (Intc  2)]]]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("AnsiCodes","ansiLength.aux.95") [Comb FuncCall ("Prelude","tail") [Comb FuncCall ("Prelude","tail") [Comb FuncCall ("Prelude","tail") [Comb FuncCall ("Prelude","tail") [Var 4]]]],Comb FuncCall ("Prelude","-") [Var 2,Lit (Intc  5)]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 3,Comb FuncCall ("AnsiCodes","esc") []]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("AnsiCodes","ansiLength.aux.95") [Comb FuncCall ("Prelude","tail") [Comb FuncCall ("Prelude","tail") [Comb FuncCall ("Prelude","tail") [Var 4]]],Comb FuncCall ("Prelude","-") [Var 2,Lit (Intc  4)]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("AnsiCodes","ansiLength.aux.95") [Var 4,Var 2]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])]))] []