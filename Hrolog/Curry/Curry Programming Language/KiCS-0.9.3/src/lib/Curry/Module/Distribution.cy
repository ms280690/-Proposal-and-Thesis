Module "Distribution"
(Just (Exporting (11,21) [(Export (QualIdent Nothing (Ident "curryCompiler" 0))),(Export (QualIdent Nothing (Ident "curryCompilerMajorVersion" 0))),(Export (QualIdent Nothing (Ident "curryCompilerMinorVersion" 0))),(Export (QualIdent Nothing (Ident "curryRuntime" 0))),(Export (QualIdent Nothing (Ident "curryRuntimeMajorVersion" 0))),(Export (QualIdent Nothing (Ident "curryRuntimeMinorVersion" 0))),(Export (QualIdent Nothing (Ident "currySubdir" 0))),(Export (QualIdent Nothing (Ident "inCurrySubdir" 0))),(Export (QualIdent Nothing (Ident "addCurrySubdir" 0))),(Export (QualIdent Nothing (Ident "getStdLibDir" 0))),(Export (QualIdent Nothing (Ident "rcFileName" 0))),(Export (QualIdent Nothing (Ident "rcFileContents" 0))),(Export (QualIdent Nothing (Ident "getRcVar" 0))),(Export (QualIdent Nothing (Ident "getRcVars" 0))),(Export (QualIdent Nothing (Ident "findFileInLoadPath" 0))),(Export (QualIdent Nothing (Ident "lookupFileInLoadPath" 0))),(Export (QualIdent Nothing (Ident "readFirstFileInLoadPath" 0))),(Export (QualIdent Nothing (Ident "getLoadPath" 0))),(Export (QualIdent Nothing (Ident "getLoadPathForFile" 0))),(ExportTypeAll (QualIdent Nothing (Ident "FrontendTarget" 0))),(Export (QualIdent Nothing (Ident "FrontendParams" 0))),(Export (QualIdent Nothing (Ident "defaultParams" 0))),(Export (QualIdent Nothing (Ident "quiet" 0))),(Export (QualIdent Nothing (Ident "fullPath" 0))),(Export (QualIdent Nothing (Ident "outfile" 0))),(Export (QualIdent Nothing (Ident "logfile" 0))),(Export (QualIdent Nothing (Ident "setQuiet" 0))),(Export (QualIdent Nothing (Ident "setFullPath" 0))),(Export (QualIdent Nothing (Ident "setOutfile" 0))),(Export (QualIdent Nothing (Ident "setLogfile" 0))),(Export (QualIdent Nothing (Ident "callFrontend" 0))),(Export (QualIdent Nothing (Ident "callFrontendWithParams" 0)))]))
[(ImportDecl (1,1) "Prelude" False Nothing Nothing)
,(ImportDecl (30,1) "List" False Nothing (Just (Importing (30,12) [(Import (Ident "intersperse" 0))])))
,(ImportDecl (31,1) "Char" False Nothing (Just (Importing (31,12) [(Import (Ident "toLower" 0))])))
,(ImportDecl (32,1) "System" False Nothing Nothing)
,(ImportDecl (33,1) "IO" False Nothing Nothing)
,(ImportDecl (34,1) "Directory" False Nothing Nothing)
,(ImportDecl (35,1) "FileGoodies" False Nothing Nothing)
,(ImportDecl (36,1) "PropertyFile" False Nothing Nothing)
,(DataDecl (208,1) (Ident "FrontendTarget" 0) [] [(ConstrDecl (208,23) [] (Ident "FCY" 0) []),(ConstrDecl (208,29) [] (Ident "FINT" 0) []),(ConstrDecl (208,36) [] (Ident "ACY" 0) []),(ConstrDecl (208,42) [] (Ident "UACY" 0) []),(ConstrDecl (208,49) [] (Ident "HTML" 0) []),(ConstrDecl (208,56) [] (Ident "CY" 0) [])])
,(DataDecl (219,1) (Ident "FrontendParams" 0) [] [(ConstrDecl (220,3) [] (Ident "FrontendParams" 0) [(ConstructorType (QualIdent Nothing (Ident "Bool" 0)) []),(ConstructorType (QualIdent Nothing (Ident "Maybe" 0)) [(ListType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []))]),(ConstructorType (QualIdent Nothing (Ident "Maybe" 0)) [(ConstructorType (QualIdent Nothing (Ident "String" 0)) [])]),(ConstructorType (QualIdent Nothing (Ident "Maybe" 0)) [(ConstructorType (QualIdent Nothing (Ident "String" 0)) [])])])])
,(TypeSig (50,1) [(Ident "curryCompiler" 0)] (ConstructorType (QualIdent Nothing (Ident "String" 0)) []))
,(FlatExternalDecl (51,1) [(Ident "curryCompiler" 0)])
,(TypeSig (54,1) [(Ident "curryCompilerMajorVersion" 0)] (ConstructorType (QualIdent Nothing (Ident "Int" 0)) []))
,(FlatExternalDecl (55,1) [(Ident "curryCompilerMajorVersion" 0)])
,(TypeSig (58,1) [(Ident "curryCompilerMinorVersion" 0)] (ConstructorType (QualIdent Nothing (Ident "Int" 0)) []))
,(FlatExternalDecl (59,1) [(Ident "curryCompilerMinorVersion" 0)])
,(TypeSig (62,1) [(Ident "curryRuntime" 0)] (ConstructorType (QualIdent Nothing (Ident "String" 0)) []))
,(FlatExternalDecl (63,1) [(Ident "curryRuntime" 0)])
,(TypeSig (66,1) [(Ident "curryRuntimeMajorVersion" 0)] (ConstructorType (QualIdent Nothing (Ident "Int" 0)) []))
,(FlatExternalDecl (67,1) [(Ident "curryRuntimeMajorVersion" 0)])
,(TypeSig (70,1) [(Ident "curryRuntimeMinorVersion" 0)] (ConstructorType (QualIdent Nothing (Ident "Int" 0)) []))
,(FlatExternalDecl (71,1) [(Ident "curryRuntimeMinorVersion" 0)])
,(TypeSig (80,1) [(Ident "rcFileName" 0)] (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(ConstructorType (QualIdent Nothing (Ident "String" 0)) [])]))
,(FunctionDecl (81,1) (Ident "rcFileName" 0) [(Equation (81,1) (FunLhs (Ident "rcFileName" 0) []) (SimpleRhs (81,14) (InfixApply (Apply (Variable (QualIdent (Just "System") (Ident "getEnviron" 0))) (Literal (String "HOME"))) (InfixOp (QualIdent (Just "Prelude") (Ident ">>=" 0))) (InfixApply (Variable (QualIdent (Just "Prelude") (Ident "return" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "." 0))) (RightSection (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Literal (String "/.")) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Variable (QualIdent (Just "Distribution") (Ident "curryCompiler" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (Literal (String "rc"))))))) []))])
,(TypeSig (85,1) [(Ident "rcFileContents" 0)] (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(ListType (TupleType [(ConstructorType (QualIdent Nothing (Ident "String" 0)) []),(ConstructorType (QualIdent Nothing (Ident "String" 0)) [])]))]))
,(FunctionDecl (86,1) (Ident "rcFileContents" 0) [(Equation (86,1) (FunLhs (Ident "rcFileContents" 0) []) (SimpleRhs (86,18) (InfixApply (Variable (QualIdent (Just "Distribution") (Ident "rcFileName" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident ">>=" 0))) (Variable (QualIdent (Just "PropertyFile") (Ident "readPropertyFile" 0)))) []))])
,(TypeSig (90,1) [(Ident "getRcVar" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(ConstructorType (QualIdent Nothing (Ident "Maybe" 0)) [(ConstructorType (QualIdent Nothing (Ident "String" 0)) [])])])))
,(FunctionDecl (91,1) (Ident "getRcVar" 0) [(Equation (91,1) (FunLhs (Ident "getRcVar" 0) [(VariablePattern (Ident "var" 6))]) (SimpleRhs (91,16) (InfixApply (Apply (Variable (QualIdent (Just "Distribution") (Ident "getRcVars" 0))) (List [(Variable (QualIdent Nothing (Ident "var" 6)))])) (InfixOp (QualIdent (Just "Prelude") (Ident ">>=" 0))) (InfixApply (Variable (QualIdent (Just "Prelude") (Ident "return" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "." 0))) (Variable (QualIdent (Just "Prelude") (Ident "head" 0))))) []))])
,(TypeSig (95,1) [(Ident "getRcVars" 0)] (ArrowType (ListType (ConstructorType (QualIdent Nothing (Ident "String" 0)) [])) (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(ListType (ConstructorType (QualIdent Nothing (Ident "Maybe" 0)) [(ConstructorType (QualIdent Nothing (Ident "String" 0)) [])]))])))
,(FunctionDecl (96,1) (Ident "getRcVars" 0) [(Equation (96,1) (FunLhs (Ident "getRcVars" 0) [(VariablePattern (Ident "vars" 8))]) (SimpleRhs (96,18) (Do [(StmtBind (VariablePattern (Ident "rcs" 10)) (Variable (QualIdent (Just "Distribution") (Ident "rcFileContents" 0))))] (Apply (Variable (QualIdent (Just "Prelude") (Ident "return" 0))) (Paren (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "map" 0))) (Paren (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "flip" 0))) (Variable (QualIdent (Just "Prelude") (Ident "lookup" 0)))) (Paren (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "map" 0))) (Paren (Lambda [(TuplePattern [(VariablePattern (Ident "a" 11)),(VariablePattern (Ident "b" 11))])] (Tuple [(Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "map" 0))) (Variable (QualIdent (Just "Char") (Ident "toLower" 0)))) (Variable (QualIdent Nothing (Ident "a" 11)))),(Variable (QualIdent Nothing (Ident "b" 11)))])))) (Variable (QualIdent Nothing (Ident "rcs" 10)))))))) (Paren (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "map" 0))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "map" 0))) (Variable (QualIdent (Just "Char") (Ident "toLower" 0)))))) (Variable (QualIdent Nothing (Ident "vars" 8))))))))) []))])
,(TypeSig (106,1) [(Ident "getStdLibDir" 0)] (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(ConstructorType (QualIdent Nothing (Ident "String" 0)) [])]))
,(FlatExternalDecl (107,1) [(Ident "getStdLibDir" 0)])
,(TypeSig (110,1) [(Ident "getFrontendCall" 0)] (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(ConstructorType (QualIdent Nothing (Ident "String" 0)) [])]))
,(FlatExternalDecl (111,1) [(Ident "getFrontendCall" 0)])
,(TypeSig (114,1) [(Ident "installDir" 0)] (ConstructorType (QualIdent Nothing (Ident "String" 0)) []))
,(FlatExternalDecl (115,1) [(Ident "installDir" 0)])
,(TypeSig (119,1) [(Ident "currySubdir" 0)] (ConstructorType (QualIdent Nothing (Ident "String" 0)) []))
,(FunctionDecl (120,1) (Ident "currySubdir" 0) [(Equation (120,1) (FunLhs (Ident "currySubdir" 0) []) (SimpleRhs (120,15) (Literal (String ".curry")) []))])
,(TypeSig (123,1) [(Ident "inCurrySubdir" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "String" 0)) [])))
,(FunctionDecl (124,1) (Ident "inCurrySubdir" 0) [(Equation (124,1) (FunLhs (Ident "inCurrySubdir" 0) [(VariablePattern (Ident "filename" 14))]) (SimpleRhs (125,3) (Let [(PatternDecl (125,7) (TuplePattern [(VariablePattern (Ident "base" 16)),(VariablePattern (Ident "file" 16))]) (SimpleRhs (125,21) (Apply (Variable (QualIdent (Just "FileGoodies") (Ident "splitDirectoryBaseName" 0))) (Variable (QualIdent Nothing (Ident "filename" 14)))) []))] (InfixApply (Paren (Case (Variable (QualIdent Nothing (Ident "base" 16))) [(Alt (126,21) (LiteralPattern (String ".")) (SimpleRhs (126,28) (Literal (String "")) [])),(Alt (126,32) (VariablePattern (Ident "_" 21)) (SimpleRhs (126,37) (InfixApply (Variable (QualIdent Nothing (Ident "base" 16))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (List [(Literal (Char '/'))])) []))])) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Variable (QualIdent (Just "Distribution") (Ident "currySubdir" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Literal (Char '/')) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Variable (QualIdent Nothing (Ident "file" 16))))))) []))])
,(TypeSig (130,1) [(Ident "addCurrySubdir" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "String" 0)) [])))
,(FunctionDecl (131,1) (Ident "addCurrySubdir" 0) [(Equation (131,1) (FunLhs (Ident "addCurrySubdir" 0) [(VariablePattern (Ident "dir" 23))]) (SimpleRhs (131,22) (InfixApply (Variable (QualIdent Nothing (Ident "dir" 23))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Literal (Char '/')) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Variable (QualIdent (Just "Distribution") (Ident "currySubdir" 0))))) []))])
,(TypeSig (135,1) [(Ident "getSysLibPath" 0)] (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(ListType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []))]))
,(FunctionDecl (136,1) (Ident "getSysLibPath" 0) [(Equation (136,1) (FunLhs (Ident "getSysLibPath" 0) []) (SimpleRhs (137,3) (IfThenElse (InfixApply (Variable (QualIdent (Just "Distribution") (Ident "curryCompiler" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))) (Literal (String "pakcs"))) (Do [(StmtBind (VariablePattern (Ident "pakcspath" 27)) (Apply (Variable (QualIdent (Just "System") (Ident "getEnviron" 0))) (Literal (String "PAKCSLIBPATH"))))] (InfixApply (Variable (QualIdent (Just "Prelude") (Ident "return" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "$" 0))) (Paren (IfThenElse (Apply (Variable (QualIdent (Just "Prelude") (Ident "null" 0))) (Variable (QualIdent Nothing (Ident "pakcspath" 27)))) (List [(InfixApply (Variable (QualIdent (Just "Distribution") (Ident "installDir" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (Literal (String "/lib"))),(InfixApply (Variable (QualIdent (Just "Distribution") (Ident "installDir" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (Literal (String "/lib/meta")))]) (Apply (Variable (QualIdent (Just "FileGoodies") (Ident "splitPath" 0))) (Variable (QualIdent Nothing (Ident "pakcspath" 27)))))))) (IfThenElse (InfixApply (Variable (QualIdent (Just "Distribution") (Ident "curryCompiler" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))) (Literal (String "kics"))) (InfixApply (Variable (QualIdent (Just "Distribution") (Ident "getStdLibDir" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident ">>=" 0))) (InfixApply (Variable (QualIdent (Just "Prelude") (Ident "return" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "." 0))) (RightSection (InfixConstr (QualIdent Nothing (Ident ":" 0))) (List [])))) (Apply (Variable (QualIdent (Just "Prelude") (Ident "error" 0))) (Literal (String "Distribution.getSysLibPath: unknown curryCompiler"))))) []))])
,(TypeSig (150,1) [(Ident "lookupFileInLoadPath" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(ConstructorType (QualIdent Nothing (Ident "Maybe" 0)) [(ConstructorType (QualIdent Nothing (Ident "String" 0)) [])])])))
,(FunctionDecl (151,1) (Ident "lookupFileInLoadPath" 0) [(Equation (151,1) (FunLhs (Ident "lookupFileInLoadPath" 0) [(VariablePattern (Ident "fn" 28))]) (SimpleRhs (152,3) (InfixApply (Apply (Variable (QualIdent (Just "Distribution") (Ident "getLoadPathForFile" 0))) (Variable (QualIdent Nothing (Ident "fn" 28)))) (InfixOp (QualIdent (Just "Prelude") (Ident ">>=" 0))) (Apply (Apply (Variable (QualIdent (Just "FileGoodies") (Ident "lookupFileInPath" 0))) (Paren (Apply (Variable (QualIdent (Just "FileGoodies") (Ident "baseName" 0))) (Variable (QualIdent Nothing (Ident "fn" 28)))))) (List [(Literal (String ""))]))) []))])
,(TypeSig (156,1) [(Ident "findFileInLoadPath" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(ConstructorType (QualIdent Nothing (Ident "String" 0)) [])])))
,(FunctionDecl (157,1) (Ident "findFileInLoadPath" 0) [(Equation (157,1) (FunLhs (Ident "findFileInLoadPath" 0) [(VariablePattern (Ident "fn" 30))]) (SimpleRhs (158,3) (InfixApply (Apply (Variable (QualIdent (Just "Distribution") (Ident "getLoadPathForFile" 0))) (Variable (QualIdent Nothing (Ident "fn" 30)))) (InfixOp (QualIdent (Just "Prelude") (Ident ">>=" 0))) (Apply (Apply (Variable (QualIdent (Just "FileGoodies") (Ident "getFileInPath" 0))) (Paren (Apply (Variable (QualIdent (Just "FileGoodies") (Ident "baseName" 0))) (Variable (QualIdent Nothing (Ident "fn" 30)))))) (List [(Literal (String ""))]))) []))])
,(TypeSig (162,1) [(Ident "readFirstFileInLoadPath" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(ConstructorType (QualIdent Nothing (Ident "String" 0)) [])])))
,(FunctionDecl (163,1) (Ident "readFirstFileInLoadPath" 0) [(Equation (163,1) (FunLhs (Ident "readFirstFileInLoadPath" 0) [(VariablePattern (Ident "fn" 32))]) (SimpleRhs (163,30) (InfixApply (Apply (Variable (QualIdent (Just "Distribution") (Ident "findFileInLoadPath" 0))) (Variable (QualIdent Nothing (Ident "fn" 32)))) (InfixOp (QualIdent (Just "Prelude") (Ident ">>=" 0))) (Variable (QualIdent (Just "Prelude") (Ident "readFile" 0)))) []))])
,(TypeSig (167,1) [(Ident "getLoadPath" 0)] (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(ListType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []))]))
,(FunctionDecl (168,1) (Ident "getLoadPath" 0) [(Equation (168,1) (FunLhs (Ident "getLoadPath" 0) []) (SimpleRhs (168,15) (Apply (Variable (QualIdent (Just "Distribution") (Ident "getLoadPathForFile" 0))) (Literal (String "xxx"))) []))])
,(TypeSig (177,1) [(Ident "getLoadPathForFile" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(ListType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []))])))
,(FunctionDecl (178,1) (Ident "getLoadPathForFile" 0) [(Equation (178,1) (FunLhs (Ident "getLoadPathForFile" 0) [(VariablePattern (Ident "file" 36))]) (SimpleRhs (178,27) (Do [(StmtBind (VariablePattern (Ident "syslib" 40)) (Variable (QualIdent (Just "Distribution") (Ident "getSysLibPath" 0)))),(StmtBind (VariablePattern (Ident "mblib" 41)) (Apply (Variable (QualIdent (Just "Distribution") (Ident "getRcVar" 0))) (Literal (String "Libraries")))),(StmtDecl [(PatternDecl (181,7) (VariablePattern (Ident "fileDir" 42)) (SimpleRhs (181,17) (Apply (Variable (QualIdent (Just "FileGoodies") (Ident "dirName" 0))) (Variable (QualIdent Nothing (Ident "file" 36)))) []))])] (IfThenElse (InfixApply (InfixApply (Variable (QualIdent (Just "Distribution") (Ident "curryCompiler" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))) (Literal (String "pakcs"))) (InfixOp (QualIdent (Just "Prelude") (Ident "||" 0))) (InfixApply (Variable (QualIdent (Just "Distribution") (Ident "curryCompiler" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))) (Literal (String "kics")))) (Do [(StmtBind (VariablePattern (Ident "currypath" 44)) (Apply (Variable (QualIdent (Just "System") (Ident "getEnviron" 0))) (Literal (String "CURRYPATH")))),(StmtDecl [(PatternDecl (184,12) (VariablePattern (Ident "llib" 45)) (SimpleRhs (184,19) (Apply (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "maybe" 0))) (List [])) (Variable (QualIdent (Just "FileGoodies") (Ident "splitPath" 0)))) (Variable (QualIdent Nothing (Ident "mblib" 41)))) []))])] (Apply (Variable (QualIdent (Just "Prelude") (Ident "return" 0))) (Paren (Apply (Variable (QualIdent Nothing (Ident "addCurrySubdirs" 37))) (Paren (InfixApply (Variable (QualIdent Nothing (Ident "fileDir" 42))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (InfixApply (Paren (IfThenElse (Apply (Variable (QualIdent (Just "Prelude") (Ident "null" 0))) (Variable (QualIdent Nothing (Ident "currypath" 44)))) (List []) (Apply (Variable (QualIdent (Just "FileGoodies") (Ident "splitPath" 0))) (Variable (QualIdent Nothing (Ident "currypath" 44)))))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Variable (QualIdent Nothing (Ident "llib" 45))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (Variable (QualIdent Nothing (Ident "syslib" 40))))))))))) (Apply (Variable (QualIdent (Just "Prelude") (Ident "error" 0))) (Literal (String "Distribution.getLoadPathForFile: unknown curryCompiler"))))) [(PatternDecl (193,3) (VariablePattern (Ident "addCurrySubdirs" 37)) (SimpleRhs (193,21) (Apply (Variable (QualIdent (Just "Prelude") (Ident "concatMap" 0))) (Paren (Lambda [(VariablePattern (Ident "d" 39))] (List [(Variable (QualIdent Nothing (Ident "d" 39))),(Apply (Variable (QualIdent (Just "Distribution") (Ident "addCurrySubdir" 0))) (Variable (QualIdent Nothing (Ident "d" 39))))])))) []))]))])
,(TypeSig (223,1) [(Ident "defaultParams" 0)] (ConstructorType (QualIdent Nothing (Ident "FrontendParams" 0)) []))
,(FunctionDecl (224,1) (Ident "defaultParams" 0) [(Equation (224,1) (FunLhs (Ident "defaultParams" 0) []) (SimpleRhs (224,17) (Apply (Apply (Apply (Apply (Constructor (QualIdent (Just "Distribution") (Ident "FrontendParams" 0))) (Constructor (QualIdent (Just "Prelude") (Ident "False" 0)))) (Constructor (QualIdent (Just "Prelude") (Ident "Nothing" 0)))) (Constructor (QualIdent (Just "Prelude") (Ident "Nothing" 0)))) (Constructor (QualIdent (Just "Prelude") (Ident "Nothing" 0)))) []))])
,(TypeSig (227,1) [(Ident "setQuiet" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "Bool" 0)) []) (ArrowType (ConstructorType (QualIdent Nothing (Ident "FrontendParams" 0)) []) (ConstructorType (QualIdent Nothing (Ident "FrontendParams" 0)) []))))
,(FunctionDecl (228,1) (Ident "setQuiet" 0) [(Equation (228,1) (FunLhs (Ident "setQuiet" 0) [(VariablePattern (Ident "s" 49)),(ParenPattern (ConstructorPattern (QualIdent (Just "Distribution") (Ident "FrontendParams" 0)) [(VariablePattern (Ident "_" 50)),(VariablePattern (Ident "x" 49)),(VariablePattern (Ident "y" 49)),(VariablePattern (Ident "z" 49))]))]) (SimpleRhs (228,39) (Apply (Apply (Apply (Apply (Constructor (QualIdent (Just "Distribution") (Ident "FrontendParams" 0))) (Variable (QualIdent Nothing (Ident "s" 49)))) (Variable (QualIdent Nothing (Ident "x" 49)))) (Variable (QualIdent Nothing (Ident "y" 49)))) (Variable (QualIdent Nothing (Ident "z" 49)))) []))])
,(TypeSig (233,1) [(Ident "setFullPath" 0)] (ArrowType (ListType (ConstructorType (QualIdent Nothing (Ident "String" 0)) [])) (ArrowType (ConstructorType (QualIdent Nothing (Ident "FrontendParams" 0)) []) (ConstructorType (QualIdent Nothing (Ident "FrontendParams" 0)) []))))
,(FunctionDecl (234,1) (Ident "setFullPath" 0) [(Equation (234,1) (FunLhs (Ident "setFullPath" 0) [(VariablePattern (Ident "s" 52)),(ParenPattern (ConstructorPattern (QualIdent (Just "Distribution") (Ident "FrontendParams" 0)) [(VariablePattern (Ident "x" 52)),(VariablePattern (Ident "_" 53)),(VariablePattern (Ident "y" 52)),(VariablePattern (Ident "z" 52))]))]) (SimpleRhs (234,42) (Apply (Apply (Apply (Apply (Constructor (QualIdent (Just "Distribution") (Ident "FrontendParams" 0))) (Variable (QualIdent Nothing (Ident "x" 52)))) (Paren (Apply (Constructor (QualIdent (Just "Prelude") (Ident "Just" 0))) (Variable (QualIdent Nothing (Ident "s" 52)))))) (Variable (QualIdent Nothing (Ident "y" 52)))) (Variable (QualIdent Nothing (Ident "z" 52)))) []))])
,(TypeSig (238,1) [(Ident "setOutfile" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ArrowType (ConstructorType (QualIdent Nothing (Ident "FrontendParams" 0)) []) (ConstructorType (QualIdent Nothing (Ident "FrontendParams" 0)) []))))
,(FunctionDecl (239,1) (Ident "setOutfile" 0) [(Equation (239,1) (FunLhs (Ident "setOutfile" 0) [(VariablePattern (Ident "s" 55)),(ParenPattern (ConstructorPattern (QualIdent (Just "Distribution") (Ident "FrontendParams" 0)) [(VariablePattern (Ident "x" 55)),(VariablePattern (Ident "y" 55)),(VariablePattern (Ident "_" 56)),(VariablePattern (Ident "z" 55))]))]) (SimpleRhs (239,42) (Apply (Apply (Apply (Apply (Constructor (QualIdent (Just "Distribution") (Ident "FrontendParams" 0))) (Variable (QualIdent Nothing (Ident "x" 55)))) (Variable (QualIdent Nothing (Ident "y" 55)))) (Paren (Apply (Constructor (QualIdent (Just "Prelude") (Ident "Just" 0))) (Variable (QualIdent Nothing (Ident "s" 55)))))) (Variable (QualIdent Nothing (Ident "z" 55)))) []))])
,(TypeSig (244,1) [(Ident "setLogfile" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ArrowType (ConstructorType (QualIdent Nothing (Ident "FrontendParams" 0)) []) (ConstructorType (QualIdent Nothing (Ident "FrontendParams" 0)) []))))
,(FunctionDecl (245,1) (Ident "setLogfile" 0) [(Equation (245,1) (FunLhs (Ident "setLogfile" 0) [(VariablePattern (Ident "s" 58)),(ParenPattern (ConstructorPattern (QualIdent (Just "Distribution") (Ident "FrontendParams" 0)) [(VariablePattern (Ident "x" 58)),(VariablePattern (Ident "y" 58)),(VariablePattern (Ident "z" 58)),(VariablePattern (Ident "_" 59))]))]) (SimpleRhs (245,42) (Apply (Apply (Apply (Apply (Constructor (QualIdent (Just "Distribution") (Ident "FrontendParams" 0))) (Variable (QualIdent Nothing (Ident "x" 58)))) (Variable (QualIdent Nothing (Ident "y" 58)))) (Variable (QualIdent Nothing (Ident "z" 58)))) (Paren (Apply (Constructor (QualIdent (Just "Prelude") (Ident "Just" 0))) (Variable (QualIdent Nothing (Ident "s" 58)))))) []))])
,(TypeSig (248,1) [(Ident "quiet" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "FrontendParams" 0)) []) (ConstructorType (QualIdent Nothing (Ident "Bool" 0)) [])))
,(FunctionDecl (249,1) (Ident "quiet" 0) [(Equation (249,1) (FunLhs (Ident "quiet" 0) [(ParenPattern (ConstructorPattern (QualIdent (Just "Distribution") (Ident "FrontendParams" 0)) [(VariablePattern (Ident "x" 61)),(VariablePattern (Ident "_" 62)),(VariablePattern (Ident "_" 63)),(VariablePattern (Ident "_" 64))]))]) (SimpleRhs (249,34) (Variable (QualIdent Nothing (Ident "x" 61))) []))])
,(TypeSig (252,1) [(Ident "fullPath" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "FrontendParams" 0)) []) (ConstructorType (QualIdent Nothing (Ident "Maybe" 0)) [(ListType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []))])))
,(FunctionDecl (253,1) (Ident "fullPath" 0) [(Equation (253,1) (FunLhs (Ident "fullPath" 0) [(ParenPattern (ConstructorPattern (QualIdent (Just "Distribution") (Ident "FrontendParams" 0)) [(VariablePattern (Ident "_" 67)),(VariablePattern (Ident "x" 66)),(VariablePattern (Ident "_" 68)),(VariablePattern (Ident "_" 69))]))]) (SimpleRhs (253,37) (Variable (QualIdent Nothing (Ident "x" 66))) []))])
,(TypeSig (256,1) [(Ident "outfile" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "FrontendParams" 0)) []) (ConstructorType (QualIdent Nothing (Ident "Maybe" 0)) [(ConstructorType (QualIdent Nothing (Ident "String" 0)) [])])))
,(FunctionDecl (257,1) (Ident "outfile" 0) [(Equation (257,1) (FunLhs (Ident "outfile" 0) [(ParenPattern (ConstructorPattern (QualIdent (Just "Distribution") (Ident "FrontendParams" 0)) [(VariablePattern (Ident "_" 72)),(VariablePattern (Ident "_" 73)),(VariablePattern (Ident "x" 71)),(VariablePattern (Ident "_" 74))]))]) (SimpleRhs (257,37) (Variable (QualIdent Nothing (Ident "x" 71))) []))])
,(TypeSig (260,1) [(Ident "logfile" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "FrontendParams" 0)) []) (ConstructorType (QualIdent Nothing (Ident "Maybe" 0)) [(ConstructorType (QualIdent Nothing (Ident "String" 0)) [])])))
,(FunctionDecl (261,1) (Ident "logfile" 0) [(Equation (261,1) (FunLhs (Ident "logfile" 0) [(ParenPattern (ConstructorPattern (QualIdent (Just "Distribution") (Ident "FrontendParams" 0)) [(VariablePattern (Ident "_" 77)),(VariablePattern (Ident "_" 78)),(VariablePattern (Ident "_" 79)),(VariablePattern (Ident "x" 76))]))]) (SimpleRhs (261,37) (Variable (QualIdent Nothing (Ident "x" 76))) []))])
,(TypeSig (267,1) [(Ident "callFrontend" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "FrontendTarget" 0)) []) (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(TupleType [])]))))
,(FunctionDecl (268,1) (Ident "callFrontend" 0) [(Equation (268,1) (FunLhs (Ident "callFrontend" 0) [(VariablePattern (Ident "target" 81))]) (SimpleRhs (268,23) (Apply (Apply (Variable (QualIdent (Just "Distribution") (Ident "callFrontendWithParams" 0))) (Variable (QualIdent Nothing (Ident "target" 81)))) (Variable (QualIdent (Just "Distribution") (Ident "defaultParams" 0)))) []))])
,(TypeSig (276,1) [(Ident "callFrontendWithParams" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "FrontendTarget" 0)) []) (ArrowType (ConstructorType (QualIdent Nothing (Ident "FrontendParams" 0)) []) (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(TupleType [])])))))
,(FunctionDecl (277,1) (Ident "callFrontendWithParams" 0) [(Equation (277,1) (FunLhs (Ident "callFrontendWithParams" 0) [(VariablePattern (Ident "target" 83)),(VariablePattern (Ident "params" 83)),(VariablePattern (Ident "progname" 83))]) (SimpleRhs (277,49) (Do [(StmtBind (VariablePattern (Ident "parsecurry" 105)) (Variable (QualIdent Nothing (Ident "callParseCurry" 84)))),(StmtDecl [(PatternDecl (279,7) (VariablePattern (Ident "lf" 106)) (SimpleRhs (279,17) (Apply (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "maybe" 0))) (Literal (String ""))) (Variable (QualIdent (Just "Prelude") (Ident "id" 0)))) (Paren (Apply (Variable (QualIdent (Just "Distribution") (Ident "logfile" 0))) (Variable (QualIdent Nothing (Ident "params" 83)))))) [])),(PatternDecl (280,7) (VariablePattern (Ident "syscall" 106)) (SimpleRhs (280,17) (InfixApply (Variable (QualIdent Nothing (Ident "parsecurry" 105))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Literal (String " ")) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Apply (Variable (QualIdent Nothing (Ident "showFrontendTarget" 84))) (Variable (QualIdent Nothing (Ident "target" 83)))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Variable (QualIdent Nothing (Ident "showFrontendParams" 84))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Literal (String " ")) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (Variable (QualIdent Nothing (Ident "progname" 83)))))))) []))]),(StmtExpr (IfThenElse (Apply (Variable (QualIdent (Just "Prelude") (Ident "null" 0))) (Variable (QualIdent Nothing (Ident "lf" 106)))) (Apply (Variable (QualIdent (Just "System") (Ident "system" 0))) (Variable (QualIdent Nothing (Ident "syscall" 106)))) (Apply (Variable (QualIdent (Just "System") (Ident "system" 0))) (Paren (InfixApply (Variable (QualIdent Nothing (Ident "syscall" 106))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Literal (String " > ")) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (InfixApply (Variable (QualIdent Nothing (Ident "lf" 106))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (Literal (String " 2>&1")))))))))] (Apply (Variable (QualIdent (Just "Prelude") (Ident "return" 0))) (Tuple []))) [(PatternDecl (288,4) (VariablePattern (Ident "isPakcs" 84)) (SimpleRhs (289,6) (IfThenElse (InfixApply (Variable (QualIdent (Just "Distribution") (Ident "curryCompiler" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))) (Literal (String "pakcs"))) (Constructor (QualIdent (Just "Prelude") (Ident "True" 0))) (IfThenElse (InfixApply (Variable (QualIdent (Just "Distribution") (Ident "curryCompiler" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))) (Literal (String "kics"))) (Constructor (QualIdent (Just "Prelude") (Ident "False" 0))) (Apply (Variable (QualIdent (Just "Prelude") (Ident "error" 0))) (Literal (String "Distribution.callFrontend: unknown curryCompiler"))))) [])),(PatternDecl (293,4) (VariablePattern (Ident "callParseCurry" 84)) (SimpleRhs (294,6) (IfThenElse (Variable (QualIdent Nothing (Ident "isPakcs" 84))) (Do [] (Apply (Variable (QualIdent (Just "Prelude") (Ident "return" 0))) (Paren (InfixApply (Variable (QualIdent (Just "Distribution") (Ident "installDir" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (Literal (String "/bin/parsecurry")))))) (Do [(StmtBind (VariablePattern (Ident "path" 87)) (Apply (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "maybe" 0))) (Variable (QualIdent (Just "Distribution") (Ident "getLoadPath" 0)))) (Variable (QualIdent (Just "Prelude") (Ident "return" 0)))) (Paren (Apply (Variable (QualIdent (Just "Distribution") (Ident "fullPath" 0))) (Variable (QualIdent Nothing (Ident "params" 83))))))),(StmtBind (VariablePattern (Ident "frontend" 88)) (Variable (QualIdent (Just "Distribution") (Ident "getFrontendCall" 0)))),(StmtDecl [(PatternDecl (299,14) (VariablePattern (Ident "call" 89)) (SimpleRhs (299,21) (InfixApply (Variable (QualIdent Nothing (Ident "frontend" 88))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "concatMap" 0))) (LeftSection (Literal (String " -i")) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))))) (Variable (QualIdent Nothing (Ident "path" 87))))) []))])] (Apply (Variable (QualIdent (Just "Prelude") (Ident "return" 0))) (Variable (QualIdent Nothing (Ident "call" 89)))))) [])),(FunctionDecl (302,4) (Ident "showFrontendTarget" 84) [(Equation (302,4) (FunLhs (Ident "showFrontendTarget" 84) [(ConstructorPattern (QualIdent (Just "Distribution") (Ident "FCY" 0)) [])]) (SimpleRhs (302,30) (Literal (String "--flat")) [])),(Equation (303,4) (FunLhs (Ident "showFrontendTarget" 84) [(ConstructorPattern (QualIdent (Just "Distribution") (Ident "FINT" 0)) [])]) (SimpleRhs (303,30) (Literal (String "--flat")) [])),(Equation (304,4) (FunLhs (Ident "showFrontendTarget" 84) [(ConstructorPattern (QualIdent (Just "Distribution") (Ident "ACY" 0)) [])]) (SimpleRhs (304,30) (Literal (String "--acy")) [])),(Equation (305,4) (FunLhs (Ident "showFrontendTarget" 84) [(ConstructorPattern (QualIdent (Just "Distribution") (Ident "UACY" 0)) [])]) (SimpleRhs (305,30) (Literal (String "--uacy")) [])),(Equation (306,4) (FunLhs (Ident "showFrontendTarget" 84) [(ConstructorPattern (QualIdent (Just "Distribution") (Ident "HTML" 0)) [])]) (SimpleRhs (306,30) (Literal (String "--html")) [])),(Equation (307,4) (FunLhs (Ident "showFrontendTarget" 84) [(ConstructorPattern (QualIdent (Just "Distribution") (Ident "CY" 0)) [])]) (SimpleRhs (307,30) (Literal (String "--parse-only")) []))]),(PatternDecl (309,4) (VariablePattern (Ident "showFrontendParams" 84)) (SimpleRhs (310,6) (InfixApply (Paren (IfThenElse (Apply (Variable (QualIdent (Just "Distribution") (Ident "quiet" 0))) (Variable (QualIdent Nothing (Ident "params" 83)))) (Variable (QualIdent Nothing (Ident "runQuiet" 84))) (Literal (String "")))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (Paren (Apply (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "maybe" 0))) (Literal (String ""))) (LeftSection (Literal (String " -o ")) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))))) (Paren (Apply (Variable (QualIdent (Just "Distribution") (Ident "outfile" 0))) (Variable (QualIdent Nothing (Ident "params" 83)))))))) [])),(PatternDecl (313,4) (VariablePattern (Ident "runQuiet" 84)) (SimpleRhs (313,15) (IfThenElse (Variable (QualIdent Nothing (Ident "isPakcs" 84))) (Literal (String " --quiet ")) (Literal (String " --no-verb --no-warn --no-overlap-warn "))) []))]))])
,(TypeSig (316,1) [(Ident "rcErr" 0)] (ArrowType (ConstructorType (QualIdent Nothing (Ident "String" 0)) []) (ArrowType (VariableType (Ident "a" 0)) (ConstructorType (QualIdent Nothing (Ident "IO" 0)) [(VariableType (Ident "a" 0))]))))
,(FunctionDecl (317,1) (Ident "rcErr" 0) [(Equation (317,1) (FunLhs (Ident "rcErr" 0) [(VariablePattern (Ident "s" 109)),(VariablePattern (Ident "x" 109))]) (SimpleRhs (317,13) (InfixApply (Apply (Apply (Variable (QualIdent (Just "IO") (Ident "hPutStrLn" 0))) (Variable (QualIdent (Just "IO") (Ident "stderr" 0)))) (Paren (InfixApply (Variable (QualIdent Nothing (Ident "s" 109))) (InfixOp (QualIdent (Just "Prelude") (Ident "++" 0))) (Literal (String " undefined in rc file"))))) (InfixOp (QualIdent (Just "Prelude") (Ident ">>" 0))) (Apply (Variable (QualIdent (Just "Prelude") (Ident "return" 0))) (Variable (QualIdent Nothing (Ident "x" 109))))) []))])
]
