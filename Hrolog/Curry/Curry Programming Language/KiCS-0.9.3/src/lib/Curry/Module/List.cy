Module "List"
(Just (Exporting (8,12) [(Export (QualIdent Nothing (Ident "elemIndex" 0))),(Export (QualIdent Nothing (Ident "elemIndices" 0))),(Export (QualIdent Nothing (Ident "find" 0))),(Export (QualIdent Nothing (Ident "findIndex" 0))),(Export (QualIdent Nothing (Ident "findIndices" 0))),(Export (QualIdent Nothing (Ident "nub" 0))),(Export (QualIdent Nothing (Ident "nubBy" 0))),(Export (QualIdent Nothing (Ident "delete" 0))),(Export (QualIdent Nothing (Ident "\\\\" 0))),(Export (QualIdent Nothing (Ident "union" 0))),(Export (QualIdent Nothing (Ident "intersect" 0))),(Export (QualIdent Nothing (Ident "intersperse" 0))),(Export (QualIdent Nothing (Ident "transpose" 0))),(Export (QualIdent Nothing (Ident "partition" 0))),(Export (QualIdent Nothing (Ident "group" 0))),(Export (QualIdent Nothing (Ident "groupBy" 0))),(Export (QualIdent Nothing (Ident "replace" 0))),(Export (QualIdent Nothing (Ident "isPrefixOf" 0))),(Export (QualIdent Nothing (Ident "sortBy" 0))),(Export (QualIdent Nothing (Ident "insertBy" 0))),(Export (QualIdent Nothing (Ident "last" 0)))]))
[(ImportDecl (1,1) "Prelude" False Nothing Nothing)
,(ImportDecl (13,1) "Maybe" False Nothing (Just (Importing (13,13) [(Import (Ident "listToMaybe" 0))])))
,(InfixDecl (15,1) Infix 5 [(Ident "\\\\" 0)])
,(TypeSig (19,1) [(Ident "elemIndex" 0)] (ArrowType (VariableType (Ident "a" 0)) (ArrowType (ListType (VariableType (Ident "a" 0))) (ConstructorType (QualIdent Nothing (Ident "Maybe" 0)) [(ConstructorType (QualIdent Nothing (Ident "Int" 0)) [])]))))
,(FunctionDecl (20,1) (Ident "elemIndex" 0) [(Equation (20,1) (FunLhs (Ident "elemIndex" 0) [(VariablePattern (Ident "x" 2))]) (SimpleRhs (20,28) (Apply (Variable (QualIdent (Just "List") (Ident "findIndex" 0))) (LeftSection (Variable (QualIdent Nothing (Ident "x" 2))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))))) []))])
,(TypeSig (23,1) [(Ident "elemIndices" 0)] (ArrowType (VariableType (Ident "a" 0)) (ArrowType (ListType (VariableType (Ident "a" 0))) (ListType (ConstructorType (QualIdent Nothing (Ident "Int" 0)) [])))))
,(FunctionDecl (24,1) (Ident "elemIndices" 0) [(Equation (24,1) (FunLhs (Ident "elemIndices" 0) [(VariablePattern (Ident "x" 4))]) (SimpleRhs (24,28) (Apply (Variable (QualIdent (Just "List") (Ident "findIndices" 0))) (LeftSection (Variable (QualIdent Nothing (Ident "x" 4))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))))) []))])
,(TypeSig (28,1) [(Ident "find" 0)] (ArrowType (ArrowType (VariableType (Ident "a" 0)) (ConstructorType (QualIdent Nothing (Ident "Bool" 0)) [])) (ArrowType (ListType (VariableType (Ident "a" 0))) (ConstructorType (QualIdent Nothing (Ident "Maybe" 0)) [(VariableType (Ident "a" 0))]))))
,(FunctionDecl (29,1) (Ident "find" 0) [(Equation (29,1) (FunLhs (Ident "find" 0) [(VariablePattern (Ident "p" 6))]) (SimpleRhs (29,28) (InfixApply (Variable (QualIdent (Just "Maybe") (Ident "listToMaybe" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "." 0))) (Apply (Variable (QualIdent (Just "Prelude") (Ident "filter" 0))) (Variable (QualIdent Nothing (Ident "p" 6))))) []))])
,(TypeSig (33,1) [(Ident "findIndex" 0)] (ArrowType (ArrowType (VariableType (Ident "a" 0)) (ConstructorType (QualIdent Nothing (Ident "Bool" 0)) [])) (ArrowType (ListType (VariableType (Ident "a" 0))) (ConstructorType (QualIdent Nothing (Ident "Maybe" 0)) [(ConstructorType (QualIdent Nothing (Ident "Int" 0)) [])]))))
,(FunctionDecl (34,1) (Ident "findIndex" 0) [(Equation (34,1) (FunLhs (Ident "findIndex" 0) [(VariablePattern (Ident "p" 8))]) (SimpleRhs (34,28) (InfixApply (Variable (QualIdent (Just "Maybe") (Ident "listToMaybe" 0))) (InfixOp (QualIdent (Just "Prelude") (Ident "." 0))) (Apply (Variable (QualIdent (Just "List") (Ident "findIndices" 0))) (Variable (QualIdent Nothing (Ident "p" 8))))) []))])
,(TypeSig (37,1) [(Ident "findIndices" 0)] (ArrowType (ArrowType (VariableType (Ident "a" 0)) (ConstructorType (QualIdent Nothing (Ident "Bool" 0)) [])) (ArrowType (ListType (VariableType (Ident "a" 0))) (ListType (ConstructorType (QualIdent Nothing (Ident "Int" 0)) [])))))
,(FunctionDecl (38,1) (Ident "findIndices" 0) [(Equation (38,1) (FunLhs (Ident "findIndices" 0) [(VariablePattern (Ident "p" 10)),(VariablePattern (Ident "xs" 10))]) (SimpleRhs (38,28) (ListCompr (Variable (QualIdent Nothing (Ident "i" 13))) [(StmtBind (TuplePattern [(VariablePattern (Ident "x" 13)),(VariablePattern (Ident "i" 13))]) (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "zip" 0))) (Variable (QualIdent Nothing (Ident "xs" 10)))) (EnumFrom (Literal (Int (Ident "_" 12) 0))))),(StmtExpr (Apply (Variable (QualIdent Nothing (Ident "p" 10))) (Variable (QualIdent Nothing (Ident "x" 13)))))]) []))])
,(TypeSig (42,1) [(Ident "nub" 0)] (ArrowType (ListType (VariableType (Ident "a" 0))) (ListType (VariableType (Ident "a" 0)))))
,(FunctionDecl (43,1) (Ident "nub" 0) [(Equation (43,1) (FunLhs (Ident "nub" 0) [(VariablePattern (Ident "xs" 14))]) (SimpleRhs (43,26) (Apply (Apply (Variable (QualIdent (Just "List") (Ident "nubBy" 0))) (Variable (QualIdent (Just "Prelude") (Ident "==" 0)))) (Variable (QualIdent Nothing (Ident "xs" 14)))) []))])
,(TypeSig (47,1) [(Ident "nubBy" 0)] (ArrowType (ArrowType (VariableType (Ident "a" 0)) (ArrowType (VariableType (Ident "a" 0)) (ConstructorType (QualIdent Nothing (Ident "Bool" 0)) []))) (ArrowType (ListType (VariableType (Ident "a" 0))) (ListType (VariableType (Ident "a" 0))))))
,(FunctionDecl (48,1) (Ident "nubBy" 0) [(Equation (48,1) (FunLhs (Ident "nubBy" 0) [(VariablePattern (Ident "_" 17)),(ListPattern [])]) (SimpleRhs (48,26) (List []) [])),(Equation (49,1) (FunLhs (Ident "nubBy" 0) [(VariablePattern (Ident "eq" 19)),(ParenPattern (InfixPattern (VariablePattern (Ident "x" 19)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "xs" 19))))]) (SimpleRhs (49,26) (InfixApply (Variable (QualIdent Nothing (Ident "x" 19))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Apply (Apply (Variable (QualIdent (Just "List") (Ident "nubBy" 0))) (Variable (QualIdent Nothing (Ident "eq" 19)))) (Paren (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "filter" 0))) (Paren (Lambda [(VariablePattern (Ident "y" 21))] (Apply (Variable (QualIdent (Just "Prelude") (Ident "not" 0))) (Paren (Apply (Apply (Variable (QualIdent Nothing (Ident "eq" 19))) (Variable (QualIdent Nothing (Ident "x" 19)))) (Variable (QualIdent Nothing (Ident "y" 21))))))))) (Variable (QualIdent Nothing (Ident "xs" 19))))))) []))])
,(TypeSig (52,1) [(Ident "delete" 0)] (ArrowType (VariableType (Ident "a" 0)) (ArrowType (ListType (VariableType (Ident "a" 0))) (ListType (VariableType (Ident "a" 0))))))
,(FunctionDecl (53,1) (Ident "delete" 0) [(Equation (53,1) (FunLhs (Ident "delete" 0) [(VariablePattern (Ident "_" 23)),(ListPattern [])]) (SimpleRhs (53,26) (List []) [])),(Equation (54,1) (FunLhs (Ident "delete" 0) [(VariablePattern (Ident "x" 25)),(ParenPattern (InfixPattern (VariablePattern (Ident "y" 25)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "ys" 25))))]) (SimpleRhs (54,26) (IfThenElse (InfixApply (Variable (QualIdent Nothing (Ident "x" 25))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))) (Variable (QualIdent Nothing (Ident "y" 25)))) (Variable (QualIdent Nothing (Ident "ys" 25))) (InfixApply (Variable (QualIdent Nothing (Ident "y" 25))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Apply (Apply (Variable (QualIdent (Just "List") (Ident "delete" 0))) (Variable (QualIdent Nothing (Ident "x" 25)))) (Variable (QualIdent Nothing (Ident "ys" 25)))))) []))])
,(TypeSig (61,1) [(Ident "\\\\" 0)] (ArrowType (ListType (VariableType (Ident "a" 0))) (ArrowType (ListType (VariableType (Ident "a" 0))) (ListType (VariableType (Ident "a" 0))))))
,(FunctionDecl (62,1) (Ident "\\\\" 0) [(Equation (62,1) (OpLhs (VariablePattern (Ident "xs" 27)) (Ident "\\\\" 0) (VariablePattern (Ident "ys" 27))) (SimpleRhs (62,12) (Apply (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "foldl" 0))) (Paren (Apply (Variable (QualIdent (Just "Prelude") (Ident "flip" 0))) (Variable (QualIdent (Just "List") (Ident "delete" 0)))))) (Variable (QualIdent Nothing (Ident "xs" 27)))) (Variable (QualIdent Nothing (Ident "ys" 27)))) []))])
,(TypeSig (65,1) [(Ident "union" 0)] (ArrowType (ListType (VariableType (Ident "a" 0))) (ArrowType (ListType (VariableType (Ident "a" 0))) (ListType (VariableType (Ident "a" 0))))))
,(FunctionDecl (66,1) (Ident "union" 0) [(Equation (66,1) (FunLhs (Ident "union" 0) [(ListPattern []),(VariablePattern (Ident "ys" 29))]) (SimpleRhs (66,26) (Variable (QualIdent Nothing (Ident "ys" 29))) [])),(Equation (67,1) (FunLhs (Ident "union" 0) [(ParenPattern (InfixPattern (VariablePattern (Ident "x" 31)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "xs" 31)))),(VariablePattern (Ident "ys" 31))]) (SimpleRhs (67,26) (IfThenElse (InfixApply (Variable (QualIdent Nothing (Ident "x" 31))) (InfixOp (QualIdent (Just "Prelude") (Ident "elem" 0))) (Variable (QualIdent Nothing (Ident "ys" 31)))) (Apply (Apply (Variable (QualIdent (Just "List") (Ident "union" 0))) (Variable (QualIdent Nothing (Ident "xs" 31)))) (Variable (QualIdent Nothing (Ident "ys" 31)))) (InfixApply (Variable (QualIdent Nothing (Ident "x" 31))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Apply (Apply (Variable (QualIdent (Just "List") (Ident "union" 0))) (Variable (QualIdent Nothing (Ident "xs" 31)))) (Variable (QualIdent Nothing (Ident "ys" 31)))))) []))])
,(TypeSig (71,1) [(Ident "intersect" 0)] (ArrowType (ListType (VariableType (Ident "a" 0))) (ArrowType (ListType (VariableType (Ident "a" 0))) (ListType (VariableType (Ident "a" 0))))))
,(FunctionDecl (72,1) (Ident "intersect" 0) [(Equation (72,1) (FunLhs (Ident "intersect" 0) [(ListPattern []),(VariablePattern (Ident "_" 34))]) (SimpleRhs (72,26) (List []) [])),(Equation (73,1) (FunLhs (Ident "intersect" 0) [(ParenPattern (InfixPattern (VariablePattern (Ident "x" 36)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "xs" 36)))),(VariablePattern (Ident "ys" 36))]) (SimpleRhs (73,26) (IfThenElse (InfixApply (Variable (QualIdent Nothing (Ident "x" 36))) (InfixOp (QualIdent (Just "Prelude") (Ident "elem" 0))) (Variable (QualIdent Nothing (Ident "ys" 36)))) (InfixApply (Variable (QualIdent Nothing (Ident "x" 36))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Apply (Apply (Variable (QualIdent (Just "List") (Ident "intersect" 0))) (Variable (QualIdent Nothing (Ident "xs" 36)))) (Variable (QualIdent Nothing (Ident "ys" 36))))) (Apply (Apply (Variable (QualIdent (Just "List") (Ident "intersect" 0))) (Variable (QualIdent Nothing (Ident "xs" 36)))) (Variable (QualIdent Nothing (Ident "ys" 36))))) []))])
,(TypeSig (79,1) [(Ident "intersperse" 0)] (ArrowType (VariableType (Ident "a" 0)) (ArrowType (ListType (VariableType (Ident "a" 0))) (ListType (VariableType (Ident "a" 0))))))
,(FunctionDecl (80,1) (Ident "intersperse" 0) [(Equation (80,1) (FunLhs (Ident "intersperse" 0) [(VariablePattern (Ident "_" 39)),(ListPattern [])]) (SimpleRhs (80,30) (List []) [])),(Equation (81,1) (FunLhs (Ident "intersperse" 0) [(VariablePattern (Ident "_" 42)),(ListPattern [(VariablePattern (Ident "x" 41))])]) (SimpleRhs (81,30) (List [(Variable (QualIdent Nothing (Ident "x" 41)))]) [])),(Equation (82,1) (FunLhs (Ident "intersperse" 0) [(VariablePattern (Ident "sep" 44)),(ParenPattern (InfixPattern (VariablePattern (Ident "x1" 44)) (QualIdent Nothing (Ident ":" 0)) (InfixPattern (VariablePattern (Ident "x2" 44)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "xs" 44)))))]) (SimpleRhs (82,30) (InfixApply (Variable (QualIdent Nothing (Ident "x1" 44))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (InfixApply (Variable (QualIdent Nothing (Ident "sep" 44))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Apply (Apply (Variable (QualIdent (Just "List") (Ident "intersperse" 0))) (Variable (QualIdent Nothing (Ident "sep" 44)))) (Paren (InfixApply (Variable (QualIdent Nothing (Ident "x2" 44))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Variable (QualIdent Nothing (Ident "xs" 44)))))))) []))])
,(TypeSig (87,1) [(Ident "transpose" 0)] (ArrowType (ListType (ListType (VariableType (Ident "a" 0)))) (ListType (ListType (VariableType (Ident "a" 0))))))
,(FunctionDecl (88,1) (Ident "transpose" 0) [(Equation (88,1) (FunLhs (Ident "transpose" 0) [(ListPattern [])]) (SimpleRhs (88,28) (List []) [])),(Equation (89,1) (FunLhs (Ident "transpose" 0) [(ParenPattern (InfixPattern (ListPattern []) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "xss" 48))))]) (SimpleRhs (89,28) (Apply (Variable (QualIdent (Just "List") (Ident "transpose" 0))) (Variable (QualIdent Nothing (Ident "xss" 48)))) [])),(Equation (90,1) (FunLhs (Ident "transpose" 0) [(ParenPattern (InfixPattern (ParenPattern (InfixPattern (VariablePattern (Ident "x" 50)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "xs" 50)))) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "xss" 50))))]) (SimpleRhs (90,28) (InfixApply (Paren (InfixApply (Variable (QualIdent Nothing (Ident "x" 50))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "map" 0))) (Variable (QualIdent (Just "Prelude") (Ident "head" 0)))) (Variable (QualIdent Nothing (Ident "xss" 50)))))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Apply (Variable (QualIdent (Just "List") (Ident "transpose" 0))) (Paren (InfixApply (Variable (QualIdent Nothing (Ident "xs" 50))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "map" 0))) (Variable (QualIdent (Just "Prelude") (Ident "tail" 0)))) (Variable (QualIdent Nothing (Ident "xss" 50)))))))) []))])
,(TypeSig (97,1) [(Ident "partition" 0)] (ArrowType (ArrowType (VariableType (Ident "a" 0)) (ConstructorType (QualIdent Nothing (Ident "Bool" 0)) [])) (ArrowType (ListType (VariableType (Ident "a" 0))) (TupleType [(ListType (VariableType (Ident "a" 0))),(ListType (VariableType (Ident "a" 0)))]))))
,(FunctionDecl (98,1) (Ident "partition" 0) [(Equation (98,1) (FunLhs (Ident "partition" 0) [(VariablePattern (Ident "p" 52)),(VariablePattern (Ident "xs" 52))]) (SimpleRhs (98,19) (Apply (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "foldr" 0))) (Variable (QualIdent Nothing (Ident "select" 53)))) (Tuple [(List []),(List [])])) (Variable (QualIdent Nothing (Ident "xs" 52)))) [(FunctionDecl (99,14) (Ident "select" 53) [(Equation (99,14) (FunLhs (Ident "select" 53) [(VariablePattern (Ident "x" 54)),(TuplePattern [(VariablePattern (Ident "ts" 54)),(VariablePattern (Ident "fs" 54))])]) (SimpleRhs (99,33) (IfThenElse (Apply (Variable (QualIdent Nothing (Ident "p" 52))) (Variable (QualIdent Nothing (Ident "x" 54)))) (Tuple [(InfixApply (Variable (QualIdent Nothing (Ident "x" 54))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Variable (QualIdent Nothing (Ident "ts" 54)))),(Variable (QualIdent Nothing (Ident "fs" 54)))]) (Tuple [(Variable (QualIdent Nothing (Ident "ts" 54))),(InfixApply (Variable (QualIdent Nothing (Ident "x" 54))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Variable (QualIdent Nothing (Ident "fs" 54))))])) []))])]))])
,(TypeSig (106,1) [(Ident "group" 0)] (ArrowType (ListType (VariableType (Ident "a" 0))) (ListType (ListType (VariableType (Ident "a" 0))))))
,(FunctionDecl (107,1) (Ident "group" 0) [(Equation (107,1) (FunLhs (Ident "group" 0) []) (SimpleRhs (107,9) (Apply (Variable (QualIdent (Just "List") (Ident "groupBy" 0))) (Variable (QualIdent (Just "Prelude") (Ident "==" 0)))) []))])
,(TypeSig (114,1) [(Ident "groupBy" 0)] (ArrowType (ArrowType (VariableType (Ident "a" 0)) (ArrowType (VariableType (Ident "a" 0)) (ConstructorType (QualIdent Nothing (Ident "Bool" 0)) []))) (ArrowType (ListType (VariableType (Ident "a" 0))) (ListType (ListType (VariableType (Ident "a" 0)))))))
,(FunctionDecl (115,1) (Ident "groupBy" 0) [(Equation (115,1) (FunLhs (Ident "groupBy" 0) [(VariablePattern (Ident "_" 59)),(ListPattern [])]) (SimpleRhs (115,21) (List []) [])),(Equation (116,1) (FunLhs (Ident "groupBy" 0) [(VariablePattern (Ident "eq" 61)),(ParenPattern (InfixPattern (VariablePattern (Ident "x" 61)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "xs" 61))))]) (SimpleRhs (116,21) (InfixApply (Paren (InfixApply (Variable (QualIdent Nothing (Ident "x" 61))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Variable (QualIdent Nothing (Ident "ys" 62))))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Apply (Apply (Variable (QualIdent (Just "List") (Ident "groupBy" 0))) (Variable (QualIdent Nothing (Ident "eq" 61)))) (Variable (QualIdent Nothing (Ident "zs" 62))))) [(PatternDecl (117,27) (TuplePattern [(VariablePattern (Ident "ys" 62)),(VariablePattern (Ident "zs" 62))]) (SimpleRhs (117,37) (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "span" 0))) (Paren (Apply (Variable (QualIdent Nothing (Ident "eq" 61))) (Variable (QualIdent Nothing (Ident "x" 61)))))) (Variable (QualIdent Nothing (Ident "xs" 61)))) []))]))])
,(TypeSig (124,1) [(Ident "replace" 0)] (ArrowType (VariableType (Ident "a" 0)) (ArrowType (ConstructorType (QualIdent Nothing (Ident "Int" 0)) []) (ArrowType (ListType (VariableType (Ident "a" 0))) (ListType (VariableType (Ident "a" 0)))))))
,(FunctionDecl (125,1) (Ident "replace" 0) [(Equation (125,1) (FunLhs (Ident "replace" 0) [(VariablePattern (Ident "_" 65)),(VariablePattern (Ident "_" 66)),(ListPattern [])]) (SimpleRhs (125,18) (List []) [])),(Equation (126,1) (FunLhs (Ident "replace" 0) [(VariablePattern (Ident "x" 68)),(VariablePattern (Ident "p" 68)),(ParenPattern (InfixPattern (VariablePattern (Ident "y" 68)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "ys" 68))))]) (GuardedRhs [(CondExpr (126,20) (InfixApply (Variable (QualIdent Nothing (Ident "p" 68))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))) (Literal (Int (Ident "_" 70) 0))) (InfixApply (Variable (QualIdent Nothing (Ident "x" 68))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Variable (QualIdent Nothing (Ident "ys" 68))))),(CondExpr (127,20) (Variable (QualIdent (Just "Prelude") (Ident "otherwise" 0))) (InfixApply (Variable (QualIdent Nothing (Ident "y" 68))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Paren (Apply (Apply (Apply (Variable (QualIdent (Just "List") (Ident "replace" 0))) (Variable (QualIdent Nothing (Ident "x" 68)))) (Paren (InfixApply (Variable (QualIdent Nothing (Ident "p" 68))) (InfixOp (QualIdent (Just "Prelude") (Ident "-" 0))) (Literal (Int (Ident "_" 71) 1))))) (Variable (QualIdent Nothing (Ident "ys" 68)))))))] []))])
,(TypeSig (133,1) [(Ident "isPrefixOf" 0)] (ArrowType (ListType (VariableType (Ident "a" 0))) (ArrowType (ListType (VariableType (Ident "a" 0))) (ConstructorType (QualIdent Nothing (Ident "Bool" 0)) []))))
,(FunctionDecl (134,1) (Ident "isPrefixOf" 0) [(Equation (134,1) (FunLhs (Ident "isPrefixOf" 0) [(ListPattern []),(VariablePattern (Ident "_" 73))]) (SimpleRhs (134,19) (Constructor (QualIdent (Just "Prelude") (Ident "True" 0))) [])),(Equation (135,1) (FunLhs (Ident "isPrefixOf" 0) [(ParenPattern (InfixPattern (VariablePattern (Ident "_" 76)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "_" 77)))),(ListPattern [])]) (SimpleRhs (135,23) (Constructor (QualIdent (Just "Prelude") (Ident "False" 0))) [])),(Equation (136,1) (FunLhs (Ident "isPrefixOf" 0) [(ParenPattern (InfixPattern (VariablePattern (Ident "x" 79)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "xs" 79)))),(ParenPattern (InfixPattern (VariablePattern (Ident "y" 79)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "ys" 79))))]) (SimpleRhs (136,28) (InfixApply (InfixApply (Variable (QualIdent Nothing (Ident "x" 79))) (InfixOp (QualIdent (Just "Prelude") (Ident "==" 0))) (Variable (QualIdent Nothing (Ident "y" 79)))) (InfixOp (QualIdent (Just "Prelude") (Ident "&&" 0))) (Paren (Apply (Apply (Variable (QualIdent (Just "List") (Ident "isPrefixOf" 0))) (Variable (QualIdent Nothing (Ident "xs" 79)))) (Variable (QualIdent Nothing (Ident "ys" 79)))))) []))])
,(TypeSig (139,1) [(Ident "sortBy" 0)] (ArrowType (ArrowType (VariableType (Ident "a" 0)) (ArrowType (VariableType (Ident "a" 0)) (ConstructorType (QualIdent Nothing (Ident "Bool" 0)) []))) (ArrowType (ListType (VariableType (Ident "a" 0))) (ListType (VariableType (Ident "a" 0))))))
,(FunctionDecl (140,1) (Ident "sortBy" 0) [(Equation (140,1) (FunLhs (Ident "sortBy" 0) [(VariablePattern (Ident "le" 81))]) (SimpleRhs (140,13) (Apply (Apply (Variable (QualIdent (Just "Prelude") (Ident "foldr" 0))) (Paren (Apply (Variable (QualIdent (Just "List") (Ident "insertBy" 0))) (Variable (QualIdent Nothing (Ident "le" 81)))))) (List [])) []))])
,(TypeSig (147,1) [(Ident "insertBy" 0)] (ArrowType (ArrowType (VariableType (Ident "a" 0)) (ArrowType (VariableType (Ident "a" 0)) (ConstructorType (QualIdent Nothing (Ident "Bool" 0)) []))) (ArrowType (VariableType (Ident "a" 0)) (ArrowType (ListType (VariableType (Ident "a" 0))) (ListType (VariableType (Ident "a" 0)))))))
,(FunctionDecl (148,1) (Ident "insertBy" 0) [(Equation (148,1) (FunLhs (Ident "insertBy" 0) [(VariablePattern (Ident "_" 84)),(VariablePattern (Ident "x" 83)),(ListPattern [])]) (SimpleRhs (148,23) (List [(Variable (QualIdent Nothing (Ident "x" 83)))]) [])),(Equation (149,1) (FunLhs (Ident "insertBy" 0) [(VariablePattern (Ident "le" 86)),(VariablePattern (Ident "x" 86)),(ParenPattern (InfixPattern (VariablePattern (Ident "y" 86)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "ys" 86))))]) (SimpleRhs (149,24) (IfThenElse (Apply (Apply (Variable (QualIdent Nothing (Ident "le" 86))) (Variable (QualIdent Nothing (Ident "x" 86)))) (Variable (QualIdent Nothing (Ident "y" 86)))) (InfixApply (Variable (QualIdent Nothing (Ident "x" 86))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (InfixApply (Variable (QualIdent Nothing (Ident "y" 86))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Variable (QualIdent Nothing (Ident "ys" 86))))) (InfixApply (Variable (QualIdent Nothing (Ident "y" 86))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Apply (Apply (Apply (Variable (QualIdent (Just "List") (Ident "insertBy" 0))) (Variable (QualIdent Nothing (Ident "le" 86)))) (Variable (QualIdent Nothing (Ident "x" 86)))) (Variable (QualIdent Nothing (Ident "ys" 86)))))) []))])
,(TypeSig (154,1) [(Ident "last" 0)] (ArrowType (ListType (VariableType (Ident "a" 0))) (VariableType (Ident "a" 0))))
,(FunctionDecl (155,1) (Ident "last" 0) [(Equation (155,1) (FunLhs (Ident "last" 0) [(ListPattern [(VariablePattern (Ident "x" 88))])]) (SimpleRhs (155,12) (Variable (QualIdent Nothing (Ident "x" 88))) [])),(Equation (156,1) (FunLhs (Ident "last" 0) [(ParenPattern (InfixPattern (VariablePattern (Ident "_" 91)) (QualIdent Nothing (Ident ":" 0)) (InfixPattern (VariablePattern (Ident "x" 90)) (QualIdent Nothing (Ident ":" 0)) (VariablePattern (Ident "xs" 90)))))]) (SimpleRhs (156,17) (Apply (Variable (QualIdent (Just "List") (Ident "last" 0))) (Paren (InfixApply (Variable (QualIdent Nothing (Ident "x" 90))) (InfixConstr (QualIdent Nothing (Ident ":" 0))) (Variable (QualIdent Nothing (Ident "xs" 90)))))) []))])
]
