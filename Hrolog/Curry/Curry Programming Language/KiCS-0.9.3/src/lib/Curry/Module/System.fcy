Prog "System" ["Global","Prelude"] [] [Func ("System","getCPUTime") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","Int") []]) (External "System.getCPUTime"),Func ("System","getElapsedTime") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","Int") []]) (External "System.getElapsedTime"),Func ("System","getArgs") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (External "System.getArgs"),Func ("System","getEnviron") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [1] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("Global","readGlobal") [Comb FuncCall ("System","environ") []],Comb (FuncPartCall 1) ("System","getEnviron._#lambda2") [Var 1]])),Func ("System","getEnviron._#lambda2") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]))) (Rule [1,2] (Comb FuncCall ("Prelude","maybe") [Comb FuncCall ("Prelude","$##") [Comb (FuncPartCall 1) ("System","prim_getEnviron") [],Var 1],Comb (FuncPartCall 1) ("Prelude","return") [],Comb FuncCall ("Prelude","lookup") [Var 1,Var 2]])),Func ("System","prim_getEnviron") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (External "System.prim_getEnviron"),Func ("System","environ") 0 Private (TCons ("Global","Global") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]) (Rule [] (Comb FuncCall ("Global","global") [Comb ConsCall ("Prelude","[]") [],Comb ConsCall ("Global","Temporary") []])),Func ("System","setEnviron") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [1,2] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("Global","readGlobal") [Comb FuncCall ("System","environ") []],Comb (FuncPartCall 1) ("System","setEnviron._#lambda3") [Var 1,Var 2]])),Func ("System","setEnviron._#lambda3") 3 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])))) (Rule [1,2,3] (Comb FuncCall ("Global","writeGlobal") [Comb FuncCall ("System","environ") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 1,Var 2],Comb FuncCall ("Prelude","filter") [Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (FuncPartCall 2) ("Prelude","/=") [],Var 1],Comb (FuncPartCall 1) ("Prelude","fst") []],Var 3]]])),Func ("System","unsetEnviron") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [1] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("Global","readGlobal") [Comb FuncCall ("System","environ") []],Comb (FuncPartCall 1) ("System","unsetEnviron._#lambda4") [Var 1]])),Func ("System","unsetEnviron._#lambda4") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [1,2] (Comb FuncCall ("Global","writeGlobal") [Comb FuncCall ("System","environ") [],Comb FuncCall ("Prelude","filter") [Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (FuncPartCall 2) ("Prelude","/=") [],Var 1],Comb (FuncPartCall 1) ("Prelude","fst") []],Var 2]])),Func ("System","getHostname") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (External "System.getHostname"),Func ("System","getPID") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","Int") []]) (External "System.getPID"),Func ("System","getProgName") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (External "System.getProgName"),Func ("System","system") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Int") []])) (Rule [1] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("Global","readGlobal") [Comb FuncCall ("System","environ") []],Comb (FuncPartCall 1) ("System","system._#lambda5") [Var 1]])),Func ("System","system.set.14") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Comb FuncCall ("Prelude","++") [Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'x'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude","[]") []]]]]]]],Comb FuncCall ("Prelude","++") [Var 2,Comb FuncCall ("Prelude","++") [Comb ConsCall ("Prelude",":") [Lit (Charc  '='),Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("Prelude","++") [Var 3,Comb ConsCall ("Prelude",":") [Lit (Charc  ';'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude","[]") []]]]]]])])),Func ("System","system._#lambda5") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","IO") [TCons ("Prelude","Int") []]))) (Rule [1,2] (Comb FuncCall ("Prelude","$##") [Comb (FuncPartCall 1) ("System","prim_system") [],Comb FuncCall ("Prelude","++") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("System","system.set.14") []],Var 2],Var 1]])),Func ("System","prim_system") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Int") []])) (External "System.prim_system"),Func ("System","exitWith") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","IO") [TVar 0])) (Rule [1] (Comb FuncCall ("Prelude","$#") [Comb (FuncPartCall 1) ("System","prim_exitWith") [],Var 1])),Func ("System","prim_exitWith") 1 Private (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","IO") [TVar 0])) (External "System.prim_exitWith"),Func ("System","sleep") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [1] (Comb FuncCall ("Prelude","$#") [Comb (FuncPartCall 1) ("System","prim_sleep") [],Var 1])),Func ("System","prim_sleep") 1 Private (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (External "System.prim_sleep")] []