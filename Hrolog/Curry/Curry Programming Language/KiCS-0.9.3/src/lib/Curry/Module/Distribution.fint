Prog "Distribution" ["Char","FileGoodies","IO","Prelude","PropertyFile","System","List","Directory"] [Type ("Distribution","FrontendTarget") Public [] [Cons ("Distribution","FCY") 0 Public [],Cons ("Distribution","FINT") 0 Public [],Cons ("Distribution","ACY") 0 Public [],Cons ("Distribution","UACY") 0 Public [],Cons ("Distribution","HTML") 0 Public [],Cons ("Distribution","CY") 0 Public []],Type ("Distribution","FrontendParams") Public [] []] [Func ("Distribution","curryCompiler") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (External "Distribution.curryCompiler"),Func ("Distribution","curryCompilerMajorVersion") 0 Public (TCons ("Prelude","Int") []) (External "Distribution.curryCompilerMajorVersion"),Func ("Distribution","curryCompilerMinorVersion") 0 Public (TCons ("Prelude","Int") []) (External "Distribution.curryCompilerMinorVersion"),Func ("Distribution","curryRuntime") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (External "Distribution.curryRuntime"),Func ("Distribution","curryRuntimeMajorVersion") 0 Public (TCons ("Prelude","Int") []) (External "Distribution.curryRuntimeMajorVersion"),Func ("Distribution","curryRuntimeMinorVersion") 0 Public (TCons ("Prelude","Int") []) (External "Distribution.curryRuntimeMinorVersion"),Func ("Distribution","rcFileName") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (Rule [] (Var 0)),Func ("Distribution","rcFileContents") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]) (Rule [] (Var 0)),Func ("Distribution","getRcVar") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("Distribution","getRcVars") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]])) (Rule [] (Var 0)),Func ("Distribution","getStdLibDir") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (External "Distribution.getStdLibDir"),Func ("Distribution","currySubdir") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Var 0)),Func ("Distribution","inCurrySubdir") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Distribution","addCurrySubdir") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Distribution","lookupFileInLoadPath") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("Distribution","findFileInLoadPath") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("Distribution","readFirstFileInLoadPath") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("Distribution","getLoadPath") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (Rule [] (Var 0)),Func ("Distribution","getLoadPathForFile") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("Distribution","defaultParams") 0 Public (TCons ("Distribution","FrontendParams") []) (Rule [] (Var 0)),Func ("Distribution","setQuiet") 2 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Distribution","FrontendParams") []) (TCons ("Distribution","FrontendParams") []))) (Rule [] (Var 0)),Func ("Distribution","setFullPath") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Distribution","FrontendParams") []) (TCons ("Distribution","FrontendParams") []))) (Rule [] (Var 0)),Func ("Distribution","setOutfile") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Distribution","FrontendParams") []) (TCons ("Distribution","FrontendParams") []))) (Rule [] (Var 0)),Func ("Distribution","setLogfile") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Distribution","FrontendParams") []) (TCons ("Distribution","FrontendParams") []))) (Rule [] (Var 0)),Func ("Distribution","quiet") 1 Public (FuncType (TCons ("Distribution","FrontendParams") []) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Distribution","fullPath") 1 Public (FuncType (TCons ("Distribution","FrontendParams") []) (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("Distribution","outfile") 1 Public (FuncType (TCons ("Distribution","FrontendParams") []) (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("Distribution","logfile") 1 Public (FuncType (TCons ("Distribution","FrontendParams") []) (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("Distribution","callFrontend") 1 Public (FuncType (TCons ("Distribution","FrontendTarget") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("Distribution","callFrontendWithParams") 3 Public (FuncType (TCons ("Distribution","FrontendTarget") []) (FuncType (TCons ("Distribution","FrontendParams") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])))) (Rule [] (Var 0))] []