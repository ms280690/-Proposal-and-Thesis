Prog "RedBlackTree" ["Prelude"] [Type ((Nothing,Nothing,"RedBlackTree","RedBlackTree")) Public [0] [Cons ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))))),"RedBlackTree","RedBlackTree")) 4 Private [FuncType (TVar 0) (FuncType (TVar 0) (TCons ((Nothing,Nothing,"Prelude","Bool")) [])),FuncType (TVar 0) (FuncType (TVar 0) (TCons ((Nothing,Nothing,"Prelude","Bool")) [])),FuncType (TVar 0) (FuncType (TVar 0) (TCons ((Nothing,Nothing,"Prelude","Bool")) [])),TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]]],Type ((Nothing,Nothing,"RedBlackTree","Color")) Private [] [Cons ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) 0 Private [],Cons ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) 0 Private [],Cons ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","DoublyBlack")) 0 Private []],Type ((Nothing,Nothing,"RedBlackTree","Tree")) Private [0] [Cons ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) 4 Private [TCons ((Nothing,Nothing,"RedBlackTree","Color")) [],TVar 0,TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0],TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]],Cons ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) 0 Private []]] [Func ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0])))),"RedBlackTree","empty")) 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ((Nothing,Nothing,"Prelude","Bool")) []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ((Nothing,Nothing,"Prelude","Bool")) []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ((Nothing,Nothing,"Prelude","Bool")) []))) (TCons ((Nothing,Nothing,"RedBlackTree","RedBlackTree")) [TVar 0])))) (Rule [(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3)] (Comb ConsCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))))),"RedBlackTree","RedBlackTree")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3)),Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isEmpty")) 1 Public (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","RedBlackTree")) [TVar 0]) (TCons ((Nothing,Nothing,"Prelude","Bool")) [])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),1))) [Branch (Pattern ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))))),"RedBlackTree","RedBlackTree")) [(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []) (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []),Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 0),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),9)]) (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) [])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0])),"RedBlackTree","newTreeLike")) 1 Public (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","RedBlackTree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","RedBlackTree")) [TVar 0])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),1))) [Branch (Pattern ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))))),"RedBlackTree","RedBlackTree")) [(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)]) (Comb ConsCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))))),"RedBlackTree","RedBlackTree")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),4)),Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []])])),Func ((Nothing,Just (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Maybe") [TVar 0]))),"RedBlackTree","lookup")) 2 Public (FuncType (TVar 0) (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","RedBlackTree")) [TVar 0]) (TCons ((Nothing,Nothing,"Prelude","Maybe")) [TVar 0]))) (Rule [(Just (TVar 0),1),(Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),2)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),2))) [Branch (Pattern ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))))),"RedBlackTree","RedBlackTree")) [(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),4),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),5),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),6)]) (Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Maybe") [TVar 0]))))),"RedBlackTree","lookupTree")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),4)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),5)),Var ((Just (TVar 0),1)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),6))])])),Func ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Maybe") [TVar 0]))))),"RedBlackTree","lookupTree")) 4 Private (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ((Nothing,Nothing,"Prelude","Bool")) []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ((Nothing,Nothing,"Prelude","Bool")) []))) (FuncType (TVar 0) (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"Prelude","Maybe")) [TVar 0]))))) (Rule [(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2),(Just (TVar 0),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []) (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Maybe") [TVar 0]),"Prelude","Nothing")) []),Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5),(Just (TVar 0),6),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),8)]) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") [])) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","apply")) [Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") [])))),"Prelude","apply")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1)),Var ((Just (TVar 0),3))],Var ((Just (TVar 0),6))]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Comb ConsCall ((Nothing,Just (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Maybe") [TVar 0])),"Prelude","Just")) [Var ((Just (TVar 0),6))]),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") [])) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","apply")) [Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") [])))),"Prelude","apply")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2)),Var ((Just (TVar 0),3))],Var ((Just (TVar 0),6))]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Maybe") [TVar 0]))))),"RedBlackTree","lookupTree")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2)),Var ((Just (TVar 0),3)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7))]),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","otherwise")) []) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Maybe") [TVar 0]))))),"RedBlackTree","lookupTree")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2)),Var ((Just (TVar 0),3)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),8))]),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Comb FuncCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Maybe") [TVar 0]),"Prelude","failed")) [])])])])])),Func ((Nothing,Just (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))),"RedBlackTree","update")) 2 Public (FuncType (TVar 0) (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","RedBlackTree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","RedBlackTree")) [TVar 0]))) (Rule [(Just (TVar 0),1),(Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),2)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),2))) [Branch (Pattern ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))))),"RedBlackTree","RedBlackTree")) [(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),4),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),5),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),6)]) (Comb ConsCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))))),"RedBlackTree","RedBlackTree")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),4)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),5)),Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","updateTree")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),5)),Var ((Just (TVar 0),1)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),6))]])])),Func ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","updateTree")) 4 Private (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ((Nothing,Nothing,"Prelude","Bool")) []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ((Nothing,Nothing,"Prelude","Bool")) []))) (FuncType (TVar 0) (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]))))) (Rule [(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2),(Just (TVar 0),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4)] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5),Comb FuncCall ((Nothing,Just (FuncType (TVar 0) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","updateTree.upd.35")) [Var ((Just (TVar 0),3)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TVar 0),6),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","updateTree._#selFP3#e2")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","updateTree._#selFP4#l")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),8),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","updateTree._#selFP5#r")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5))])] (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),6)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),8))])))))),Func ((Nothing,Just (FuncType (TVar 183) (FuncType (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]))))),"RedBlackTree","updateTree.upd.35")) 4 Private (FuncType (TVar 183) (FuncType (FuncType (TVar 183) (FuncType (TVar 183) (TCons ((Nothing,Nothing,"Prelude","Bool")) []))) (FuncType (FuncType (TVar 183) (FuncType (TVar 183) (TCons ((Nothing,Nothing,"Prelude","Bool")) []))) (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 183]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 183]))))) (Rule [(Just (TVar 183),1),(Just (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2),(Just (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),4)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),4))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),"RedBlackTree","Empty")) []) (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 183) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) [],Var ((Just (TVar 183),1)),Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),"RedBlackTree","Empty")) [],Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),"RedBlackTree","Empty")) []]),Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 183) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5),(Just (TVar 183),6),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),8)]) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") [])) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","apply")) [Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") [])))),"Prelude","apply")) [Var ((Just (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2)),Var ((Just (TVar 183),1))],Var ((Just (TVar 183),6))]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 183) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]))))),"RedBlackTree","Tree")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5)),Var ((Just (TVar 183),1)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),7)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),8))]),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") [])) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","apply")) [Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") [])))),"Prelude","apply")) [Var ((Just (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3)),Var ((Just (TVar 183),1))],Var ((Just (TVar 183),6))]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183])),"RedBlackTree","balanceL")) [Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 183) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]))))),"RedBlackTree","Tree")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5)),Var ((Just (TVar 183),6)),Comb FuncCall ((Nothing,Just (FuncType (TVar 183) (FuncType (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]))))),"RedBlackTree","updateTree.upd.35")) [Var ((Just (TVar 183),1)),Var ((Just (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2)),Var ((Just (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),7))],Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),8))]]),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","otherwise")) []) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183])),"RedBlackTree","balanceR")) [Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 183) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]))))),"RedBlackTree","Tree")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5)),Var ((Just (TVar 183),6)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),7)),Comb FuncCall ((Nothing,Just (FuncType (TVar 183) (FuncType (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]))))),"RedBlackTree","updateTree.upd.35")) [Var ((Just (TVar 183),1)),Var ((Just (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2)),Var ((Just (FuncType (TVar 183) (FuncType (TVar 183) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),8))]]]),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Comb FuncCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),"Prelude","failed")) [])])])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TVar 183)),"RedBlackTree","updateTree._#selFP3#e2")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 183]) (TVar 183)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 183) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 183),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),5)]) (Var ((Just (TVar 183),3)))])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183])),"RedBlackTree","updateTree._#selFP4#l")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 183]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 183])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 183) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 183),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),5)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),4)))])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183])),"RedBlackTree","updateTree._#selFP5#r")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 183]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 183])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 183) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 183),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),5)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 183]),5)))])),Func ((Nothing,Just (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))),"RedBlackTree","delete")) 2 Public (FuncType (TVar 0) (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","RedBlackTree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","RedBlackTree")) [TVar 0]))) (Rule [(Just (TVar 0),1),(Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),2)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),2))) [Branch (Pattern ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))))),"RedBlackTree","RedBlackTree")) [(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),4),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),5),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),6)]) (Comb ConsCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))))),"RedBlackTree","RedBlackTree")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),4)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),5)),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","delete.blackenRoot.44")) [Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","deleteTree")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),4)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),5)),Var ((Just (TVar 0),1)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),6))]]])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","delete.blackenRoot.44")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []) (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []),Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 0),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)]) (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),3)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5))])])),Func ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","deleteTree")) 4 Private (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ((Nothing,Nothing,"Prelude","Bool")) []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ((Nothing,Nothing,"Prelude","Bool")) []))) (FuncType (TVar 0) (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]))))) (Rule [(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2),(Just (TVar 0),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []) (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []),Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5),(Just (TVar 0),6),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),8)]) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") [])) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","apply")) [Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") [])))),"Prelude","apply")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1)),Var ((Just (TVar 0),3))],Var ((Just (TVar 0),6))]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","==")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7)),Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))),"RedBlackTree","deleteTree.addColor.56")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),8))]),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","==")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),8)),Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))),"RedBlackTree","deleteTree.addColor.56")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7))]),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Let [((Just (TVar 0),9),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","deleteTree.rightMost.56")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7))])] (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","delBalanceL")) [Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5)),Var ((Just (TVar 0),9)),Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","deleteTree")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2)),Var ((Just (TVar 0),9)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7))],Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),8))]]))])]),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") [])) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","apply")) [Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") [])))),"Prelude","apply")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2)),Var ((Just (TVar 0),3))],Var ((Just (TVar 0),6))]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","delBalanceL")) [Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5)),Var ((Just (TVar 0),6)),Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","deleteTree")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2)),Var ((Just (TVar 0),3)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7))],Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),8))]]),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","otherwise")) []) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","delBalanceR")) [Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5)),Var ((Just (TVar 0),6)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7)),Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","deleteTree")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2)),Var ((Just (TVar 0),3)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),8))]]]),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Comb FuncCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"Prelude","failed")) [])])])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))),"RedBlackTree","deleteTree.addColor.56")) 2 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Color")) []) (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]))) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),1),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),1))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) []) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) []) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []) (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []),Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),3),(Just (TVar 0),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),6)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),3))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) []) (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),4)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),6))]),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) []) (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","DoublyBlack")) [],Var ((Just (TVar 0),4)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),6))])])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","deleteTree.rightMost.56")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TVar 0)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 0),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)]) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","==")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)),Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Var ((Just (TVar 0),3))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","deleteTree.rightMost.56")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0])),"RedBlackTree","tree2list")) 1 Public (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","RedBlackTree")) [TVar 0]) (TCons ((Nothing,Nothing,"Prelude","[]")) [TVar 0])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),1))) [Branch (Pattern ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))))),"RedBlackTree","RedBlackTree")) [(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)]) (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0])),"RedBlackTree","tree2listTree")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0])),"RedBlackTree","tree2listTree")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"Prelude","[]")) [TVar 0])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]))),"RedBlackTree","tree2listTree.t2l.77")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)),Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]),"Prelude","[]")) []])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]))),"RedBlackTree","tree2listTree.t2l.77")) 2 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (FuncType (TCons ((Nothing,Nothing,"Prelude","[]")) [TVar 0]) (TCons ((Nothing,Nothing,"Prelude","[]")) [TVar 0]))) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1),(Just (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]),2)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []) (Var ((Just (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]),2))),Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),3),(Just (TVar 0),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),6)]) (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]))),"RedBlackTree","tree2listTree.t2l.77")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)),Comb ConsCall ((Nothing,Just (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]))),"Prelude",":")) [Var ((Just (TVar 0),4)),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]))),"RedBlackTree","tree2listTree.t2l.77")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),6)),Var ((Just (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]),2))]]])])),Func ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]))),"RedBlackTree","sort")) 2 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ((Nothing,Nothing,"Prelude","Bool")) []))) (FuncType (TCons ((Nothing,Nothing,"Prelude","[]")) [TVar 0]) (TCons ((Nothing,Nothing,"Prelude","[]")) [TVar 0]))) (Rule [(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1),(Just (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]),2)] (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0])),"RedBlackTree","tree2list")) [Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0])))),"Prelude","foldr")) [Comb (FuncPartCall 2) ((Nothing,Just (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))),"RedBlackTree","update")) [],Comb FuncCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0])))),"RedBlackTree","empty")) [Comb (FuncPartCall 2) ((Nothing,Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"RedBlackTree","sort._#lambda2")) [],Comb (FuncPartCall 2) ((Nothing,Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","==")) [],Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1))],Var ((Just (TCons (Nothing,Nothing,"Prelude","[]") [TVar 0]),2))]])),Func ((Nothing,Just (FuncType (TVar 520) (FuncType (TVar 520) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"RedBlackTree","sort._#lambda2")) 2 Private (FuncType (TVar 520) (FuncType (TVar 520) (TCons ((Nothing,Nothing,"Prelude","Bool")) []))) (Rule [(Just (TVar 520),1),(Just (TVar 520),2)] (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) [])),Func ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))),"RedBlackTree","setInsertEquivalence")) 2 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ((Nothing,Nothing,"Prelude","Bool")) []))) (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","RedBlackTree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","RedBlackTree")) [TVar 0]))) (Rule [(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1),(Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),2)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),2))) [Branch (Pattern ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))))),"RedBlackTree","RedBlackTree")) [(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),4),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),5),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),6)]) (Comb ConsCall ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))))),"RedBlackTree","RedBlackTree")) [Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),1)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),4)),Var ((Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),5)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),6))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","rbt")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","RedBlackTree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]),1))) [Branch (Pattern ((Nothing,Just (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","RedBlackTree") [TVar 0]))))),"RedBlackTree","RedBlackTree")) [(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),2),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),3),(Just (FuncType (TVar 0) (FuncType (TVar 0) (TCons (Nothing,Nothing,"Prelude","Bool") []))),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)))])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isBlack")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"Prelude","Bool")) [])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []) (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []),Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 0),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)]) (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","==")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2)),Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) []])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isRed")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"Prelude","Bool")) [])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []) (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []),Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 0),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)]) (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","==")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2)),Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) []])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isDoublyBlack")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"Prelude","Bool")) [])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []) (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []),Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 0),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)]) (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","==")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2)),Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","DoublyBlack")) []])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","element")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TVar 0)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 0),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)]) (Var ((Just (TVar 0),3)))])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","left")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 0),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4)))])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","right")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 0),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)))])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","singleBlack")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []) (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []),Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 0),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","DoublyBlack")) []) (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),3)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceL")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","left")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))])] (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","&&")) [Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isRed")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))],Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isRed")) [Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","left")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))]]]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)))] (Let [((Just (TVar 0),4),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","balanceL._#selFP7#z")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3))])] (Let [((Just (TVar 0),5),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","balanceL._#selFP8#y")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3))])] (Let [((Just (TVar 0),6),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","balanceL._#selFP9#x")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceL._#selFP10#a")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),8),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceL._#selFP11#b")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),9),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceL._#selFP12#c")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),10),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceL._#selFP13#d")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3))])] (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) [],Var ((Just (TVar 0),5)),Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),6)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),8))],Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),4)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),9)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),10))]]))))))))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","&&")) [Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isRed")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))],Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isRed")) [Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","right")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))]]]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)))] (Let [((Just (TVar 0),12),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","balanceL._#selFP15#z")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11))])] (Let [((Just (TVar 0),13),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","balanceL._#selFP16#x")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),14),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceL._#selFP17#a")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11))])] (Let [((Just (TVar 0),15),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","balanceL._#selFP18#y")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),16),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceL._#selFP19#b")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),17),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceL._#selFP20#c")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),18),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceL._#selFP21#d")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11))])] (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) [],Var ((Just (TVar 0),15)),Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),13)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),14)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),16))],Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),12)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),17)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),18))]]))))))))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","otherwise")) []) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Comb FuncCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"Prelude","failed")) [])])])]))),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TVar 88)),"RedBlackTree","balanceL._#selFP7#z")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88]) (TVar 88)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 88),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 88),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 88),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)]) (Var ((Just (TVar 88),3)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TVar 88)),"RedBlackTree","balanceL._#selFP8#y")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88]) (TVar 88)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 88),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 88),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 88),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)]) (Var ((Just (TVar 88),7)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TVar 88)),"RedBlackTree","balanceL._#selFP9#x")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88]) (TVar 88)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 88),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 88),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 88),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)]) (Var ((Just (TVar 88),11)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88])),"RedBlackTree","balanceL._#selFP10#a")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 88),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 88),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 88),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88])),"RedBlackTree","balanceL._#selFP11#b")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 88),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 88),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 88),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88])),"RedBlackTree","balanceL._#selFP12#c")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 88),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 88),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 88),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88])),"RedBlackTree","balanceL._#selFP13#d")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 88),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 88),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 88),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TVar 88)),"RedBlackTree","balanceL._#selFP15#z")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88]) (TVar 88)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 88),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 88),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 88),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)]) (Var ((Just (TVar 88),3)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TVar 88)),"RedBlackTree","balanceL._#selFP16#x")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88]) (TVar 88)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 88),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 88),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 88),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)]) (Var ((Just (TVar 88),7)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88])),"RedBlackTree","balanceL._#selFP17#a")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 88),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 88),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 88),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TVar 88)),"RedBlackTree","balanceL._#selFP18#y")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88]) (TVar 88)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 88),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 88),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 88),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)]) (Var ((Just (TVar 88),11)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88])),"RedBlackTree","balanceL._#selFP19#b")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 88),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 88),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 88),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88])),"RedBlackTree","balanceL._#selFP20#c")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 88),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 88),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 88),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88])),"RedBlackTree","balanceL._#selFP21#d")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 88])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 88),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 88),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 88) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 88),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 88]),5)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceR")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","right")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))])] (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","&&")) [Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isRed")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))],Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isRed")) [Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","right")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))]]]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)))] (Let [((Just (TVar 0),4),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","balanceR._#selFP23#x")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceR._#selFP24#a")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3))])] (Let [((Just (TVar 0),6),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","balanceR._#selFP25#y")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceR._#selFP26#b")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3))])] (Let [((Just (TVar 0),8),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","balanceR._#selFP27#z")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),9),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceR._#selFP28#c")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),10),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceR._#selFP29#d")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),3))])] (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) [],Var ((Just (TVar 0),6)),Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),4)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),5)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7))],Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),8)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),9)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),10))]]))))))))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","&&")) [Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isRed")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))],Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isRed")) [Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","left")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))]]]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)))] (Let [((Just (TVar 0),12),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","balanceR._#selFP31#x")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceR._#selFP32#a")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11))])] (Let [((Just (TVar 0),14),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","balanceR._#selFP33#z")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11))])] (Let [((Just (TVar 0),15),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","balanceR._#selFP34#y")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),16),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceR._#selFP35#b")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),17),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceR._#selFP36#c")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),18),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","balanceR._#selFP37#d")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11))])] (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) [],Var ((Just (TVar 0),15)),Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),12)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),16))],Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),14)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),17)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),18))]]))))))))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","otherwise")) []) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Comb FuncCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"Prelude","failed")) [])])])]))),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TVar 131)),"RedBlackTree","balanceR._#selFP23#x")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131]) (TVar 131)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 131),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 131),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 131),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)]) (Var ((Just (TVar 131),3)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131])),"RedBlackTree","balanceR._#selFP24#a")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 131),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 131),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 131),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TVar 131)),"RedBlackTree","balanceR._#selFP25#y")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131]) (TVar 131)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 131),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 131),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 131),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)]) (Var ((Just (TVar 131),7)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131])),"RedBlackTree","balanceR._#selFP26#b")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 131),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 131),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 131),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TVar 131)),"RedBlackTree","balanceR._#selFP27#z")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131]) (TVar 131)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 131),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 131),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 131),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)]) (Var ((Just (TVar 131),11)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131])),"RedBlackTree","balanceR._#selFP28#c")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 131),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 131),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 131),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131])),"RedBlackTree","balanceR._#selFP29#d")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 131),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 131),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 131),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TVar 131)),"RedBlackTree","balanceR._#selFP31#x")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131]) (TVar 131)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 131),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 131),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 131),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)]) (Var ((Just (TVar 131),3)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131])),"RedBlackTree","balanceR._#selFP32#a")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 131),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 131),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 131),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TVar 131)),"RedBlackTree","balanceR._#selFP33#z")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131]) (TVar 131)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 131),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 131),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 131),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)]) (Var ((Just (TVar 131),7)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TVar 131)),"RedBlackTree","balanceR._#selFP34#y")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131]) (TVar 131)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 131),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 131),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 131),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)]) (Var ((Just (TVar 131),11)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131])),"RedBlackTree","balanceR._#selFP35#b")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 131),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 131),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 131),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131])),"RedBlackTree","balanceR._#selFP36#c")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 131),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 131),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 131),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131])),"RedBlackTree","balanceR._#selFP37#d")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 131])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 131),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 131),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 131) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 131),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 131]),9)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","delBalanceL")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isDoublyBlack")) [Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","left")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))]]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))]),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)))])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","right")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))])] (Let [((Just (TCons (Nothing,Nothing,"Prelude","Bool") []),3),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isBlack")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))])] (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","==")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2)),Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","&&")) [Var ((Just (TCons (Nothing,Nothing,"Prelude","Bool") []),3)),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isRed")) [Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","left")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))]]]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)))] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Color") [])),"RedBlackTree","reviseLeft._#selFP39#col")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TVar 0),6),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseLeft._#selFP40#x")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft._#selFP41#a")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TVar 0),8),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseLeft._#selFP42#z")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TVar 0),9),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseLeft._#selFP43#y")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),10),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft._#selFP44#b")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft._#selFP45#c")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),12),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft._#selFP46#d")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5)),Var ((Just (TVar 0),9)),Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),6)),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","singleBlack")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),7))],Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),10))],Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),8)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),12))]])))))))))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","&&")) [Var ((Just (TCons (Nothing,Nothing,"Prelude","Bool") []),3)),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isRed")) [Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","right")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))]]]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)))] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),14),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Color") [])),"RedBlackTree","reviseLeft._#selFP48#col")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Let [((Just (TVar 0),15),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseLeft._#selFP49#x")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),16),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft._#selFP50#a")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Let [((Just (TVar 0),17),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseLeft._#selFP51#y")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),18),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft._#selFP52#b")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Let [((Just (TVar 0),19),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseLeft._#selFP53#z")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),20),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft._#selFP54#c")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),21),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft._#selFP55#d")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),14)),Var ((Just (TVar 0),17)),Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),15)),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","singleBlack")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),16))],Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),18))],Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),19)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),20)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),21))]])))))))))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Var ((Just (TCons (Nothing,Nothing,"Prelude","Bool") []),3))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),22),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)))] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),23),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Color") [])),"RedBlackTree","reviseLeft._#selFP57#col")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),22))])] (Let [((Just (TVar 0),24),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseLeft._#selFP58#x")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),22))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),25),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft._#selFP59#a")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),22))])] (Let [((Just (TVar 0),26),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseLeft._#selFP60#y")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),22))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),27),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft._#selFP61#b")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),22))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),28),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft._#selFP62#c")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),22))])] (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","==")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),23)),Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) []]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) []),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","DoublyBlack")) [])],Var ((Just (TVar 0),24)),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","singleBlack")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),25))],Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) [],Var ((Just (TVar 0),26)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),27)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),28))]])))))))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","otherwise")) []) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),29),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)))] (Let [((Just (TVar 0),30),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseLeft._#selFP64#x")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),29))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),31),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft._#selFP65#a")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),29))])] (Let [((Just (TVar 0),32),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseLeft._#selFP66#y")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),29))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),33),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft._#selFP67#b")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),29))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),34),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft._#selFP68#c")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),29))])] (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),32)),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseLeft")) [Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) [],Var ((Just (TVar 0),30)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),31)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),33))]],Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),34))]))))))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Comb FuncCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"Prelude","failed")) [])])])])])])))),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Color") [])),"RedBlackTree","reviseLeft._#selFP39#col")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Color")) [])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TVar 249)),"RedBlackTree","reviseLeft._#selFP40#x")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TVar 249)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TVar 249),3)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249])),"RedBlackTree","reviseLeft._#selFP41#a")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TVar 249)),"RedBlackTree","reviseLeft._#selFP42#z")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TVar 249)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TVar 249),7)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TVar 249)),"RedBlackTree","reviseLeft._#selFP43#y")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TVar 249)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TVar 249),11)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249])),"RedBlackTree","reviseLeft._#selFP44#b")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249])),"RedBlackTree","reviseLeft._#selFP45#c")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249])),"RedBlackTree","reviseLeft._#selFP46#d")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Color") [])),"RedBlackTree","reviseLeft._#selFP48#col")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Color")) [])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TVar 249)),"RedBlackTree","reviseLeft._#selFP49#x")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TVar 249)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TVar 249),3)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249])),"RedBlackTree","reviseLeft._#selFP50#a")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TVar 249)),"RedBlackTree","reviseLeft._#selFP51#y")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TVar 249)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TVar 249),7)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249])),"RedBlackTree","reviseLeft._#selFP52#b")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TVar 249)),"RedBlackTree","reviseLeft._#selFP53#z")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TVar 249)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TVar 249),11)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249])),"RedBlackTree","reviseLeft._#selFP54#c")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249])),"RedBlackTree","reviseLeft._#selFP55#d")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 249),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),13)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Color") [])),"RedBlackTree","reviseLeft._#selFP57#col")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Color")) [])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TVar 249)),"RedBlackTree","reviseLeft._#selFP58#x")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TVar 249)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Var ((Just (TVar 249),3)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249])),"RedBlackTree","reviseLeft._#selFP59#a")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TVar 249)),"RedBlackTree","reviseLeft._#selFP60#y")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TVar 249)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Var ((Just (TVar 249),7)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249])),"RedBlackTree","reviseLeft._#selFP61#b")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249])),"RedBlackTree","reviseLeft._#selFP62#c")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TVar 249)),"RedBlackTree","reviseLeft._#selFP64#x")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TVar 249)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Var ((Just (TVar 249),3)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249])),"RedBlackTree","reviseLeft._#selFP65#a")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TVar 249)),"RedBlackTree","reviseLeft._#selFP66#y")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TVar 249)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Var ((Just (TVar 249),7)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249])),"RedBlackTree","reviseLeft._#selFP67#b")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249])),"RedBlackTree","reviseLeft._#selFP68#c")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 249])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 249),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),5))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 249) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 249),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 249]),9)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","delBalanceR")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isDoublyBlack")) [Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","right")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))]]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))]),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)))])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 0])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","left")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))])] (Let [((Just (TCons (Nothing,Nothing,"Prelude","Bool") []),3),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isBlack")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))])] (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","==")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2)),Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"RedBlackTree","Empty")) []]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","&&")) [Var ((Just (TCons (Nothing,Nothing,"Prelude","Bool") []),3)),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isRed")) [Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","left")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))]]]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)))] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Color") [])),"RedBlackTree","reviseRight._#selFP70#col")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TVar 0),6),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseRight._#selFP71#x")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TVar 0),7),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseRight._#selFP72#y")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TVar 0),8),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseRight._#selFP73#z")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),9),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight._#selFP74#d")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),10),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight._#selFP75#c")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight._#selFP76#b")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),12),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight._#selFP77#a")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),4))])] (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),5)),Var ((Just (TVar 0),7)),Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),8)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),9)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),10))],Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),6)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),11)),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","singleBlack")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),12))]]])))))))))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (FuncType (TCons (Nothing,Nothing,"Prelude","Bool") []) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","&&")) [Var ((Just (TCons (Nothing,Nothing,"Prelude","Bool") []),3)),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"Prelude","Bool") [])),"RedBlackTree","isRed")) [Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","right")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),2))]]]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)))] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),14),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Color") [])),"RedBlackTree","reviseRight._#selFP79#col")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Let [((Just (TVar 0),15),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseRight._#selFP80#x")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Let [((Just (TVar 0),16),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseRight._#selFP81#z")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),17),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight._#selFP82#d")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Let [((Just (TVar 0),18),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseRight._#selFP83#y")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),19),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight._#selFP84#c")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),20),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight._#selFP85#b")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),21),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight._#selFP86#a")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),13))])] (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),14)),Var ((Just (TVar 0),18)),Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),16)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),17)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),19))],Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),15)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),20)),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","singleBlack")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),21))]]])))))))))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Var ((Just (TCons (Nothing,Nothing,"Prelude","Bool") []),3))) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),22),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)))] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),23),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Color") [])),"RedBlackTree","reviseRight._#selFP88#col")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),22))])] (Let [((Just (TVar 0),24),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseRight._#selFP89#x")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),22))])] (Let [((Just (TVar 0),25),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseRight._#selFP90#y")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),22))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),26),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight._#selFP91#c")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),22))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),27),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight._#selFP92#b")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),22))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),28),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight._#selFP93#a")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),22))])] (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Case  Rigid (Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (TCons (Nothing,Nothing,"Prelude","Bool") []))),"Prelude","==")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),23)),Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) []]) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) []),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","DoublyBlack")) [])],Var ((Just (TVar 0),24)),Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) [],Var ((Just (TVar 0),25)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),26)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),27))],Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","singleBlack")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),28))]])))))))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Case  Rigid (Comb FuncCall ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","otherwise")) []) [Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","True")) []) (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),29),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),1)))] (Let [((Just (TVar 0),30),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseRight._#selFP95#x")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),29))])] (Let [((Just (TVar 0),31),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TVar 0)),"RedBlackTree","reviseRight._#selFP96#y")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),29))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),32),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight._#selFP97#c")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),29))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),33),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight._#selFP98#b")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),29))])] (Let [((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),34),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight._#selFP99#a")) [Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),29))])] (Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Black")) [],Var ((Just (TVar 0),31)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),32)),Comb FuncCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0])),"RedBlackTree","reviseRight")) [Comb ConsCall ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 0) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]))))),"RedBlackTree","Tree")) [Comb ConsCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),"RedBlackTree","Red")) [],Var ((Just (TVar 0),30)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),33)),Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),34))]]]))))))),Branch (Pattern ((Nothing,Just (TCons (Nothing,Nothing,"Prelude","Bool") []),"Prelude","False")) []) (Comb FuncCall ((Nothing,Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 0]),"Prelude","failed")) [])])])])])])))),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Color") [])),"RedBlackTree","reviseRight._#selFP70#col")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Color")) [])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TVar 327)),"RedBlackTree","reviseRight._#selFP71#x")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TVar 327)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TVar 327),3)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TVar 327)),"RedBlackTree","reviseRight._#selFP72#y")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TVar 327)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TVar 327),7)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TVar 327)),"RedBlackTree","reviseRight._#selFP73#z")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TVar 327)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TVar 327),11)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327])),"RedBlackTree","reviseRight._#selFP74#d")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327])),"RedBlackTree","reviseRight._#selFP75#c")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327])),"RedBlackTree","reviseRight._#selFP76#b")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327])),"RedBlackTree","reviseRight._#selFP77#a")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Color") [])),"RedBlackTree","reviseRight._#selFP79#col")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Color")) [])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TVar 327)),"RedBlackTree","reviseRight._#selFP80#x")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TVar 327)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TVar 327),3)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TVar 327)),"RedBlackTree","reviseRight._#selFP81#z")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TVar 327)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TVar 327),7)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327])),"RedBlackTree","reviseRight._#selFP82#d")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TVar 327)),"RedBlackTree","reviseRight._#selFP83#y")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TVar 327)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TVar 327),11)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327])),"RedBlackTree","reviseRight._#selFP84#c")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327])),"RedBlackTree","reviseRight._#selFP85#b")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327])),"RedBlackTree","reviseRight._#selFP86#a")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),10),(Just (TVar 327),11),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),12),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),13)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)))])])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Color") [])),"RedBlackTree","reviseRight._#selFP88#col")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Color")) [])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TVar 327)),"RedBlackTree","reviseRight._#selFP89#x")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TVar 327)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Var ((Just (TVar 327),3)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TVar 327)),"RedBlackTree","reviseRight._#selFP90#y")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TVar 327)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Var ((Just (TVar 327),7)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327])),"RedBlackTree","reviseRight._#selFP91#c")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327])),"RedBlackTree","reviseRight._#selFP92#b")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327])),"RedBlackTree","reviseRight._#selFP93#a")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TVar 327)),"RedBlackTree","reviseRight._#selFP95#x")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TVar 327)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Var ((Just (TVar 327),3)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TVar 327)),"RedBlackTree","reviseRight._#selFP96#y")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TVar 327)) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Var ((Just (TVar 327),7)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327])),"RedBlackTree","reviseRight._#selFP97#c")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327])),"RedBlackTree","reviseRight._#selFP98#b")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)))])])),Func ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327])),"RedBlackTree","reviseRight._#selFP99#a")) 1 Private (FuncType (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327]) (TCons ((Nothing,Nothing,"RedBlackTree","Tree")) [TVar 327])) (Rule [(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1)] (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),1))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),2),(Just (TVar 327),3),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)]) (Case  Flex (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),4))) [Branch (Pattern ((Nothing,Just (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Color") []) (FuncType (TVar 327) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (FuncType (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]) (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]))))),"RedBlackTree","Tree")) [(Just (TCons (Nothing,Nothing,"RedBlackTree","Color") []),6),(Just (TVar 327),7),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),8),(Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),9)]) (Var ((Just (TCons (Nothing,Nothing,"RedBlackTree","Tree") [TVar 327]),5)))])]))] []