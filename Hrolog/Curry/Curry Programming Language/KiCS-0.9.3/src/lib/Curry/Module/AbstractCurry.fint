Prog "AbstractCurry" ["Directory","Distribution","FileGoodies","Prelude","ReadShowTerm"] [TypeSyn ("AbstractCurry","QName") Public [] (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]),TypeSyn ("AbstractCurry","CTVarIName") Public [] (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]),TypeSyn ("AbstractCurry","CVarIName") Public [] (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]),Type ("AbstractCurry","CurryProg") Public [] [Cons ("AbstractCurry","CurryProg") 5 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","[]") [TCons ("AbstractCurry","CTypeDecl") []],TCons ("Prelude","[]") [TCons ("AbstractCurry","CFuncDecl") []],TCons ("Prelude","[]") [TCons ("AbstractCurry","COpDecl") []]]],Type ("AbstractCurry","CVisibility") Public [] [Cons ("AbstractCurry","Public") 0 Public [],Cons ("AbstractCurry","Private") 0 Public []],Type ("AbstractCurry","CTypeDecl") Public [] [Cons ("AbstractCurry","CType") 4 Public [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("AbstractCurry","CVisibility") [],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("AbstractCurry","CConsDecl") []]],Cons ("AbstractCurry","CTypeSyn") 4 Public [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("AbstractCurry","CVisibility") [],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("AbstractCurry","CTypeExpr") []]],Type ("AbstractCurry","CConsDecl") Public [] [Cons ("AbstractCurry","CCons") 4 Public [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") [],TCons ("AbstractCurry","CVisibility") [],TCons ("Prelude","[]") [TCons ("AbstractCurry","CTypeExpr") []]]],Type ("AbstractCurry","CTypeExpr") Public [] [Cons ("AbstractCurry","CTVar") 1 Public [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],Cons ("AbstractCurry","CFuncType") 2 Public [TCons ("AbstractCurry","CTypeExpr") [],TCons ("AbstractCurry","CTypeExpr") []],Cons ("AbstractCurry","CTCons") 2 Public [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","[]") [TCons ("AbstractCurry","CTypeExpr") []]]],Type ("AbstractCurry","COpDecl") Public [] [Cons ("AbstractCurry","COp") 3 Public [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("AbstractCurry","CFixity") [],TCons ("Prelude","Int") []]],Type ("AbstractCurry","CFixity") Public [] [Cons ("AbstractCurry","CInfixOp") 0 Public [],Cons ("AbstractCurry","CInfixlOp") 0 Public [],Cons ("AbstractCurry","CInfixrOp") 0 Public []],Type ("AbstractCurry","CFuncDecl") Public [] [Cons ("AbstractCurry","CFunc") 5 Public [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") [],TCons ("AbstractCurry","CVisibility") [],TCons ("AbstractCurry","CTypeExpr") [],TCons ("AbstractCurry","CRules") []],Cons ("AbstractCurry","CmtFunc") 6 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") [],TCons ("AbstractCurry","CVisibility") [],TCons ("AbstractCurry","CTypeExpr") [],TCons ("AbstractCurry","CRules") []]],Type ("AbstractCurry","CRules") Public [] [Cons ("AbstractCurry","CRules") 2 Public [TCons ("AbstractCurry","CEvalAnnot") [],TCons ("Prelude","[]") [TCons ("AbstractCurry","CRule") []]],Cons ("AbstractCurry","CExternal") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],Type ("AbstractCurry","CEvalAnnot") Public [] [Cons ("AbstractCurry","CFlex") 0 Public [],Cons ("AbstractCurry","CRigid") 0 Public [],Cons ("AbstractCurry","CChoice") 0 Public []],Type ("AbstractCurry","CRule") Public [] [Cons ("AbstractCurry","CRule") 3 Public [TCons ("Prelude","[]") [TCons ("AbstractCurry","CPattern") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("AbstractCurry","CExpr") [],TCons ("AbstractCurry","CExpr") []]],TCons ("Prelude","[]") [TCons ("AbstractCurry","CLocalDecl") []]]],Type ("AbstractCurry","CLocalDecl") Public [] [Cons ("AbstractCurry","CLocalFunc") 1 Public [TCons ("AbstractCurry","CFuncDecl") []],Cons ("AbstractCurry","CLocalPat") 3 Public [TCons ("AbstractCurry","CPattern") [],TCons ("AbstractCurry","CExpr") [],TCons ("Prelude","[]") [TCons ("AbstractCurry","CLocalDecl") []]],Cons ("AbstractCurry","CLocalVar") 1 Public [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]],Type ("AbstractCurry","CExpr") Public [] [Cons ("AbstractCurry","CVar") 1 Public [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],Cons ("AbstractCurry","CLit") 1 Public [TCons ("AbstractCurry","CLiteral") []],Cons ("AbstractCurry","CSymbol") 1 Public [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],Cons ("AbstractCurry","CApply") 2 Public [TCons ("AbstractCurry","CExpr") [],TCons ("AbstractCurry","CExpr") []],Cons ("AbstractCurry","CLambda") 2 Public [TCons ("Prelude","[]") [TCons ("AbstractCurry","CPattern") []],TCons ("AbstractCurry","CExpr") []],Cons ("AbstractCurry","CLetDecl") 2 Public [TCons ("Prelude","[]") [TCons ("AbstractCurry","CLocalDecl") []],TCons ("AbstractCurry","CExpr") []],Cons ("AbstractCurry","CDoExpr") 1 Public [TCons ("Prelude","[]") [TCons ("AbstractCurry","CStatement") []]],Cons ("AbstractCurry","CListComp") 2 Public [TCons ("AbstractCurry","CExpr") [],TCons ("Prelude","[]") [TCons ("AbstractCurry","CStatement") []]],Cons ("AbstractCurry","CCase") 2 Public [TCons ("AbstractCurry","CExpr") [],TCons ("Prelude","[]") [TCons ("AbstractCurry","CBranchExpr") []]]],Type ("AbstractCurry","CStatement") Public [] [Cons ("AbstractCurry","CSExpr") 1 Public [TCons ("AbstractCurry","CExpr") []],Cons ("AbstractCurry","CSPat") 2 Public [TCons ("AbstractCurry","CPattern") [],TCons ("AbstractCurry","CExpr") []],Cons ("AbstractCurry","CSLet") 1 Public [TCons ("Prelude","[]") [TCons ("AbstractCurry","CLocalDecl") []]]],Type ("AbstractCurry","CPattern") Public [] [Cons ("AbstractCurry","CPVar") 1 Public [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],Cons ("AbstractCurry","CPLit") 1 Public [TCons ("AbstractCurry","CLiteral") []],Cons ("AbstractCurry","CPComb") 2 Public [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","[]") [TCons ("AbstractCurry","CPattern") []]],Cons ("AbstractCurry","CPAs") 2 Public [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("AbstractCurry","CPattern") []],Cons ("AbstractCurry","CPFuncComb") 2 Public [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","[]") [TCons ("AbstractCurry","CPattern") []]]],Type ("AbstractCurry","CBranchExpr") Public [] [Cons ("AbstractCurry","CBranch") 2 Public [TCons ("AbstractCurry","CPattern") [],TCons ("AbstractCurry","CExpr") []]],Type ("AbstractCurry","CLiteral") Public [] [Cons ("AbstractCurry","CIntc") 1 Public [TCons ("Prelude","Int") []],Cons ("AbstractCurry","CFloatc") 1 Public [TCons ("Prelude","Float") []],Cons ("AbstractCurry","CCharc") 1 Public [TCons ("Prelude","Char") []]]] [Func ("AbstractCurry","readCurry") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("AbstractCurry","CurryProg") []])) (Rule [] (Var 0)),Func ("AbstractCurry","readUntypedCurry") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("AbstractCurry","CurryProg") []])) (Rule [] (Var 0)),Func ("AbstractCurry","readCurryWithParseOptions") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Distribution","FrontendParams") []) (TCons ("Prelude","IO") [TCons ("AbstractCurry","CurryProg") []]))) (Rule [] (Var 0)),Func ("AbstractCurry","readUntypedCurryWithParseOptions") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Distribution","FrontendParams") []) (TCons ("Prelude","IO") [TCons ("AbstractCurry","CurryProg") []]))) (Rule [] (Var 0)),Func ("AbstractCurry","abstractCurryFileName") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("AbstractCurry","untypedAbstractCurryFileName") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("AbstractCurry","readAbstractCurryFile") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("AbstractCurry","CurryProg") []])) (Rule [] (Var 0)),Func ("AbstractCurry","writeAbstractCurryFile") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("AbstractCurry","CurryProg") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0))] []