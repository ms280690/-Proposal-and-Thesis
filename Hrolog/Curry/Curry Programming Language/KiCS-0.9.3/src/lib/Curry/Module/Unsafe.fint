Prog "Unsafe" ["Char","Meta","Prelude"] [Type ("Meta","OrRef") Public [] []] [Func ("Unsafe","unsafePerformIO") 1 Public (FuncType (TCons ("Prelude","IO") [TVar 0]) (TVar 0)) (Rule [] (Var 0)),Func ("Unsafe","trace") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TVar 0) (TVar 0))) (Rule [] (Var 0)),Func ("Unsafe","spawnConstraint") 2 Public (FuncType (TCons ("Prelude","Success") []) (FuncType (TVar 0) (TVar 0))) (External "Unsafe.spawnConstraint"),Func ("Unsafe","isVar") 1 Public (FuncType (TVar 0) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Unsafe","identicalVar") 2 Public (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("Unsafe","showAnyTerm") 1 Public (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Unsafe","showAnyQTerm") 1 Public (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Unsafe","readsAnyUnqualifiedTerm") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [] (Var 0)),Func ("Unsafe","readAnyUnqualifiedTerm") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TVar 0))) (Rule [] (Var 0)),Func ("Unsafe","readsAnyQTerm") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("Unsafe","readAnyQTerm") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TVar 0)) (Rule [] (Var 0)),Func ("Unsafe","showAnyExpression") 1 Public (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (External "Unsafe.showAnyExpression"),Func ("Unsafe","showAnyQExpression") 1 Public (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (External "Unsafe.showAnyQExpression"),Func ("Unsafe","try") 1 Public (FuncType (TVar 0) (TCons ("Prelude","Either") [TVar 0,TCons ("Prelude","(,)") [TCons ("Meta","OrRef") [],TCons ("Prelude","[]") [TVar 0]]])) (External "Unsafe.try"),Func ("Unsafe","orsWithOrRef") 2 Public (FuncType (TCons ("Meta","OrRef") []) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TVar 0))) (External "Unsafe.orsWithOrRef"),Func ("Unsafe","generateChoice") 1 Public (FuncType (TCons ("Prelude","[]") [TVar 0]) (TVar 0)) (External "Unsafe.generateChoice"),Func ("Unsafe","nrOfChoices") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","Int") []]) (External "Unsafe.nrOfChoices")] []