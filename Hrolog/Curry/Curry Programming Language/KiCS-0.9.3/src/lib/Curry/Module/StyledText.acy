CurryProg "StyledText"
 ["Prelude","Char","Pretty","AnsiCodes"]
 [CTypeSyn ("StyledText","ShowS") Public [] (CFuncType (CTCons ("Prelude","String") []) (CTCons ("Prelude","String") []))]
 [CFunc ("StyledText","bgBlack") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","bgBlackChar")))] []]),
  CFunc ("StyledText","bgBlackChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 24)))] []]),
  CFunc ("StyledText","bgBlackDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","bgBlackChar")))] []]),
  CFunc ("StyledText","bgBlackS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","bgBlackChar")))] []]),
  CFunc ("StyledText","bgBlue") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","bgBlueChar")))] []]),
  CFunc ("StyledText","bgBlueChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 25)))] []]),
  CFunc ("StyledText","bgBlueDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","bgBlueChar")))] []]),
  CFunc ("StyledText","bgBlueS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","bgBlueChar")))] []]),
  CFunc ("StyledText","bgCyan") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","bgCyanChar")))] []]),
  CFunc ("StyledText","bgCyanChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 26)))] []]),
  CFunc ("StyledText","bgCyanDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","bgCyanChar")))] []]),
  CFunc ("StyledText","bgCyanS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","bgCyanChar")))] []]),
  CFunc ("StyledText","bgGreen") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","bgGreenChar")))] []]),
  CFunc ("StyledText","bgGreenChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 27)))] []]),
  CFunc ("StyledText","bgGreenDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","bgGreenChar")))] []]),
  CFunc ("StyledText","bgGreenS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","bgGreenChar")))] []]),
  CFunc ("StyledText","bgMagenta") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","bgMagentaChar")))] []]),
  CFunc ("StyledText","bgMagentaChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 28)))] []]),
  CFunc ("StyledText","bgMagentaDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","bgMagentaChar")))] []]),
  CFunc ("StyledText","bgMagentaS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","bgMagentaChar")))] []]),
  CFunc ("StyledText","bgRed") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","bgRedChar")))] []]),
  CFunc ("StyledText","bgRedChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 29)))] []]),
  CFunc ("StyledText","bgRedDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","bgRedChar")))] []]),
  CFunc ("StyledText","bgRedS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","bgRedChar")))] []]),
  CFunc ("StyledText","bgWhite") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","bgWhiteChar")))] []]),
  CFunc ("StyledText","bgWhiteChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 30)))] []]),
  CFunc ("StyledText","bgWhiteDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","bgWhiteChar")))] []]),
  CFunc ("StyledText","bgWhiteS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","bgWhiteChar")))] []]),
  CFunc ("StyledText","bgYellow") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","bgYellowChar")))] []]),
  CFunc ("StyledText","bgYellowChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 31)))] []]),
  CFunc ("StyledText","bgYellowDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","bgYellowChar")))] []]),
  CFunc ("StyledText","bgYellowS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","bgYellowChar")))] []]),
  CFunc ("StyledText","black") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","blackChar")))] []]),
  CFunc ("StyledText","blackChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 16)))] []]),
  CFunc ("StyledText","blackDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","blackChar")))] []]),
  CFunc ("StyledText","blackS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","blackChar")))] []]),
  CFunc ("StyledText","blue") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","blueChar")))] []]),
  CFunc ("StyledText","blueChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 17)))] []]),
  CFunc ("StyledText","blueDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","blueChar")))] []]),
  CFunc ("StyledText","blueS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","blueChar")))] []]),
  CFunc ("StyledText","bold") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","boldChar")))] []]),
  CFunc ("StyledText","boldChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 5)))] []]),
  CFunc ("StyledText","boldDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","boldChar")))] []]),
  CFunc ("StyledText","boldS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","boldChar")))] []]),
  CFunc ("StyledText","cyan") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","cyanChar")))] []]),
  CFunc ("StyledText","cyanChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 18)))] []]),
  CFunc ("StyledText","cyanDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","cyanChar")))] []]),
  CFunc ("StyledText","cyanS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","cyanChar")))] []]),
  CFunc ("StyledText","encl") 2 Private (CFuncType (CTCons ("Prelude","Char") []) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [CPVar (0,"c"),CPVar (1,"s")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude",":")) (CVar (0,"c"))) (CApply (CApply (CSymbol ("Prelude","++")) (CVar (1,"s"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","endChar"))) (CSymbol ("Prelude","[]")))))] []]),
  CFunc ("StyledText","enclDoc") 1 Private (CFuncType (CTCons ("Prelude","Char") []) (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") []))) (CRules CFlex [CRule [CPVar (0,"c")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Pretty","enclose")) (CApply (CSymbol ("Pretty","char")) (CVar (0,"c")))) (CApply (CSymbol ("Pretty","char")) (CSymbol ("StyledText","endChar"))))] []]),
  CFunc ("StyledText","enclS") 2 Private (CFuncType (CTCons ("Prelude","Char") []) (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])))) (CRules CFlex [CRule [CPVar (0,"c"),CPVar (1,"s")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude",".")) (CLambda [CPVar (2,"x0")] (CApply (CApply (CSymbol ("Prelude",":")) (CVar (0,"c"))) (CVar (2,"x0"))))) (CApply (CApply (CSymbol ("Prelude",".")) (CVar (1,"s"))) (CLambda [CPVar (3,"x0")] (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","endChar"))) (CVar (3,"x0"))))))] []]),
  CFunc ("StyledText","endChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 7)))] []]),
  CFunc ("StyledText","green") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","greenChar")))] []]),
  CFunc ("StyledText","greenChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 19)))] []]),
  CFunc ("StyledText","greenDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","greenChar")))] []]),
  CFunc ("StyledText","greenS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","greenChar")))] []]),
  CFunc ("StyledText","interpret") 6 Private (CFuncType (CTCons ("Prelude","[]") [CTVar (0,"a")]) (CFuncType (CFuncType (CTVar (1,"b")) (CFuncType (CTVar (1,"b")) (CTVar (1,"b")))) (CFuncType (CFuncType (CTVar (0,"a")) (CFuncType (CTVar (0,"a")) (CTVar (0,"a")))) (CFuncType (CFuncType (CTVar (0,"a")) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTVar (1,"b")))) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","(,,)") [CTVar (0,"a"),CTVar (0,"a"),CTVar (0,"a")]]) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTVar (1,"b")))))))) (CRules CFlex [CRule [CPAs (3,"convs") (CPComb ("Prelude",":") [CPVar (0,"b"),CPComb ("Prelude",":") [CPVar (1,"ul"),CPVar (2,"cs")]]),CPVar (4,"combine"),CPVar (5,"cst"),CPVar (6,"ast"),CPComb ("Prelude",":") [CPAs (10,"t") (CPComb ("Prelude","(,,)") [CPVar (7,"st"),CPVar (8,"fg"),CPVar (9,"bg")]),CPVar (11,"fs")],CPVar (12,"s")] [(CApply (CSymbol ("Prelude","null")) (CVar (15,"ys")),CApply (CVar (13,"f")) (CVar (14,"xs"))),(CApply (CApply (CSymbol ("Prelude","==")) (CVar (16,"code"))) (CLit (CIntc 5)),CApply (CApply (CSymbol ("Prelude","$")) (CApply (CVar (4,"combine")) (CApply (CVar (13,"f")) (CVar (14,"xs"))))) (CApply (CApply (CApply (CApply (CApply (CApply (CSymbol ("StyledText","interpret")) (CVar (3,"convs"))) (CVar (4,"combine"))) (CVar (5,"cst"))) (CVar (6,"ast"))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CApply (CSymbol ("Prelude","(,,)")) (CVar (0,"b"))) (CVar (8,"fg"))) (CVar (9,"bg")))) (CApply (CApply (CSymbol ("Prelude",":")) (CVar (10,"t"))) (CVar (11,"fs"))))) (CApply (CSymbol ("Prelude","tail")) (CVar (15,"ys"))))),(CApply (CApply (CSymbol ("Prelude","==")) (CVar (16,"code"))) (CLit (CIntc 6)),CApply (CApply (CSymbol ("Prelude","$")) (CApply (CVar (4,"combine")) (CApply (CVar (13,"f")) (CVar (14,"xs"))))) (CApply (CApply (CApply (CApply (CApply (CApply (CSymbol ("StyledText","interpret")) (CVar (3,"convs"))) (CVar (4,"combine"))) (CVar (5,"cst"))) (CVar (6,"ast"))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CApply (CSymbol ("Prelude","(,,)")) (CVar (1,"ul"))) (CVar (8,"fg"))) (CVar (9,"bg")))) (CApply (CApply (CSymbol ("Prelude",":")) (CVar (10,"t"))) (CVar (11,"fs"))))) (CApply (CSymbol ("Prelude","tail")) (CVar (15,"ys"))))),(CApply (CApply (CSymbol ("Prelude","==")) (CVar (16,"code"))) (CLit (CIntc 7)),CApply (CApply (CSymbol ("Prelude","$")) (CApply (CVar (4,"combine")) (CApply (CVar (13,"f")) (CVar (14,"xs"))))) (CApply (CApply (CApply (CApply (CApply (CApply (CSymbol ("StyledText","interpret")) (CVar (3,"convs"))) (CVar (4,"combine"))) (CVar (5,"cst"))) (CVar (6,"ast"))) (CVar (11,"fs"))) (CApply (CSymbol ("Prelude","tail")) (CVar (15,"ys"))))),(CApply (CApply (CSymbol ("Prelude","<")) (CVar (16,"code"))) (CLit (CIntc 24)),CApply (CApply (CSymbol ("Prelude","$")) (CApply (CVar (4,"combine")) (CApply (CVar (13,"f")) (CVar (14,"xs"))))) (CApply (CApply (CApply (CApply (CApply (CApply (CSymbol ("StyledText","interpret")) (CVar (3,"convs"))) (CVar (4,"combine"))) (CVar (5,"cst"))) (CVar (6,"ast"))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CApply (CSymbol ("Prelude","(,,)")) (CVar (7,"st"))) (CVar (17,"g"))) (CVar (9,"bg")))) (CApply (CApply (CSymbol ("Prelude",":")) (CVar (10,"t"))) (CVar (11,"fs"))))) (CApply (CSymbol ("Prelude","tail")) (CVar (15,"ys"))))),(CSymbol ("Prelude","otherwise"),CApply (CApply (CSymbol ("Prelude","$")) (CApply (CVar (4,"combine")) (CApply (CVar (13,"f")) (CVar (14,"xs"))))) (CApply (CApply (CApply (CApply (CApply (CApply (CSymbol ("StyledText","interpret")) (CVar (3,"convs"))) (CVar (4,"combine"))) (CVar (5,"cst"))) (CVar (6,"ast"))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CApply (CSymbol ("Prelude","(,,)")) (CVar (7,"st"))) (CVar (8,"fg"))) (CVar (17,"g")))) (CApply (CApply (CSymbol ("Prelude",":")) (CVar (10,"t"))) (CVar (11,"fs"))))) (CApply (CSymbol ("Prelude","tail")) (CVar (15,"ys")))))] [CLocalPat (CPVar (13,"f")) (CApply (CApply (CSymbol ("Prelude","$")) (CVar (6,"ast"))) (CApply (CApply (CVar (5,"cst")) (CVar (7,"st"))) (CApply (CApply (CVar (5,"cst")) (CVar (8,"fg"))) (CVar (9,"bg"))))) [],CLocalPat (CPComb ("Prelude","(,)") [CPVar (14,"xs"),CPVar (15,"ys")]) (CApply (CApply (CSymbol ("Prelude","break")) (CSymbol ("StyledText","special"))) (CVar (12,"s"))) [],CLocalPat (CPVar (16,"code")) (CApply (CSymbol ("Prelude","ord")) (CApply (CSymbol ("Prelude","head")) (CVar (15,"ys")))) [],CLocalPat (CPVar (17,"g")) (CApply (CApply (CSymbol ("Prelude","!!")) (CVar (2,"cs"))) (CApply (CApply (CSymbol ("Prelude","-")) (CVar (16,"code"))) (CLit (CIntc 16)))) []]]),
  CFunc ("StyledText","magenta") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","magentaChar")))] []]),
  CFunc ("StyledText","magentaChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 20)))] []]),
  CFunc ("StyledText","magentaDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","magentaChar")))] []]),
  CFunc ("StyledText","magentaS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","magentaChar")))] []]),
  CFunc ("StyledText","plainText") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","filter")) (CApply (CApply (CSymbol ("Prelude",".")) (CSymbol ("Prelude","not"))) (CSymbol ("StyledText","special"))))] []]),
  CFunc ("StyledText","printStyledText") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","IO") [CTCons ("Prelude","()") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude",".")) (CSymbol ("Prelude","putStrLn"))) (CSymbol ("StyledText","toAnsiString")))] []]),
  CFunc ("StyledText","red") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","redChar")))] []]),
  CFunc ("StyledText","redChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 21)))] []]),
  CFunc ("StyledText","redDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","redChar")))] []]),
  CFunc ("StyledText","redS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","redChar")))] []]),
  CFunc ("StyledText","special") 1 Private (CFuncType (CTCons ("Prelude","Char") []) (CTCons ("Prelude","Bool") [])) (CRules CFlex [CRule [CPVar (0,"n")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","elem")) (CApply (CSymbol ("Prelude","ord")) (CVar (0,"n")))) (CApply (CApply (CSymbol ("Prelude","++")) (CApply (CApply (CSymbol ("Prelude",":")) (CLit (CIntc 5))) (CApply (CApply (CSymbol ("Prelude",":")) (CLit (CIntc 6))) (CApply (CApply (CSymbol ("Prelude",":")) (CLit (CIntc 7))) (CSymbol ("Prelude","[]")))))) (CApply (CApply (CSymbol ("Prelude","enumFromTo")) (CLit (CIntc 16))) (CLit (CIntc 31)))))] []]),
  CFunc ("StyledText","toAnsiString") 0 Private (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CApply (CApply (CApply (CApply (CSymbol ("StyledText","interpret")) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","bold"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","underline"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","black"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","blue"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","cyan"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","green"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","magenta"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","red"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","white"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","yellow"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","bgBlack"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","bgBlue"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","bgCyan"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","bgGreen"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","bgMagenta"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","bgRed"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","bgWhite"))) (CApply (CApply (CSymbol ("Prelude",":")) (CSymbol ("StyledText","bgYellow"))) (CSymbol ("Prelude","[]"))))))))))))))))))))) (CSymbol ("Prelude","++"))) (CSymbol ("Prelude","."))) (CSymbol ("Prelude","id"))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CApply (CSymbol ("Prelude","(,,)")) (CSymbol ("Prelude","id"))) (CSymbol ("Prelude","id"))) (CSymbol ("Prelude","id")))) (CSymbol ("Prelude","[]"))))] []]),
  CFunc ("StyledText","underline") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","underlineChar")))] []]),
  CFunc ("StyledText","underlineChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 6)))] []]),
  CFunc ("StyledText","underlineDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","underlineChar")))] []]),
  CFunc ("StyledText","underlineS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","underlineChar")))] []]),
  CFunc ("StyledText","white") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","whiteChar")))] []]),
  CFunc ("StyledText","whiteChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 22)))] []]),
  CFunc ("StyledText","whiteDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","whiteChar")))] []]),
  CFunc ("StyledText","whiteS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","whiteChar")))] []]),
  CFunc ("StyledText","yellow") 0 Public (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","encl")) (CSymbol ("StyledText","yellowChar")))] []]),
  CFunc ("StyledText","yellowChar") 0 Private (CTCons ("Prelude","Char") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("Prelude","chr")) (CLit (CIntc 23)))] []]),
  CFunc ("StyledText","yellowDoc") 0 Public (CFuncType (CTCons ("Pretty","Doc") []) (CTCons ("Pretty","Doc") [])) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclDoc")) (CSymbol ("StyledText","yellowChar")))] []]),
  CFunc ("StyledText","yellowS") 0 Public (CFuncType (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []])) (CFuncType (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]) (CTCons ("Prelude","[]") [CTCons ("Prelude","Char") []]))) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CSymbol ("StyledText","enclS")) (CSymbol ("StyledText","yellowChar")))] []])]
 []
