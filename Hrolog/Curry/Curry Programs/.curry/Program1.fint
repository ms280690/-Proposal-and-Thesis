Prog "Program1" ["Prelude"] [Type ("Program1","Stack") Public [0] [Cons ("Program1","Empty") 0 Public [],Cons ("Program1","Push") 2 Public [TVar 0,TCons ("Program1","Stack") [TVar 0]]]] [Func ("Program1","append1") 2 Public (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) (Rule [] (Var 0)),Func ("Program1","top") 1 Public (FuncType (TCons ("Program1","Stack") [TCons ("Program1","Stack") [TVar 0]]) (TCons ("Program1","Stack") [TVar 0])) (Rule [] (Var 0)),Func ("Program1","pop") 1 Public (FuncType (TCons ("Program1","Stack") [TVar 0]) (TCons ("Program1","Stack") [TVar 0])) (Rule [] (Var 0)),Func ("Program1","member") 2 Public (FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("Program1","insert") 2 Public (FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) (Rule [] (Var 0)),Func ("Program1","main") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (Rule [] (Var 0))] []