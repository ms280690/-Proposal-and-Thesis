Prog "Program2" ["Prelude"] [] [Func ("Program2","my_append") 3 Public (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","Success") [])))) (Rule [1,2,3] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","[]") []) (Comb FuncCall ("Prelude","=:=") [Var 2,Var 3]),Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [6,7]) (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","=:=") [Var 4,Var 6],Comb FuncCall ("Program2","my_append") [Var 5,Var 2,Var 7]])])]))] []